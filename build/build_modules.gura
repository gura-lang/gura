#!/usr/bin/env gura

dirNamesExcept = sys.argv.offset(1).filter(&{$x.startswith('!')}):*mid(1)
dirInfos = struct(dirName:string, builds[]:symbol) * [
	['Module_sample',		[`msc, `gnuc]]
	['Module_csv',			[`msc, `gnuc]]
	['Module_re',			[`msc, `gnuc]]
	['Module_sqlite3',		[`msc, `gnuc]]
	['Module_xml',			[`msc, `gnuc]]
	['Module_yaml',			[`msc, `gnuc]]
//	['Module_mysql',		[`msc, `gnuc]]
//	['Module_postgresql',	[`msc, `gnuc]]
	['Module_sdl',			[`msc, `gnuc]]
	['Module_cairo',		[`msc, `gnuc]]
	['Module_opengl',		[`msc, `gnuc]]
	['Module_glu',			[`msc, `gnuc]]
	['Module_bmp',			[`msc, `gnuc]]
	['Module_ppm',			[`msc, `gnuc]]
	['Module_xpm',			[`msc, `gnuc]]
	['Module_msico',		[`msc, `gnuc]]
	['Module_jpeg',			[`msc, `gnuc]]
	['Module_png',			[`msc, `gnuc]]
	['Module_gif',			[`msc, `gnuc]]
	['Module_tiff',			[`msc, `gnuc]]
	['Module_freetype',		[`msc, `gnuc]]
	['Module_tcl',			[`msc, `gnuc]]
	['Module_hash',			[`msc, `gnuc]]
	['Module_gzip',			[`msc, `gnuc]]
	['Module_bzip2',		[`msc, `gnuc]]
	['Module_zip',			[`msc, `gnuc]]
	['Module_tar',			[`msc, `gnuc]]
	['Module_net_http',		[`msc, `gnuc]]
	['Module_wx',			[`msc, `gnuc]]
	['Module_guri',			[`msc, `gnuc]]
	['Module_uuid',			[`msc]]
	['Module_canvas',		[`msc]]
	['Module_mswin',		[`msc]]
]
dirNames = dirInfos.filter(dirInfos:*builds:*iscontain(sys.build))::dirName
dirNamePre = path.dirname(sys.argv[0])
debFiles = []
rpmFiles = []
for (dirName in dirNames) {
	(dirName in dirNamesExcept) && continue
	dirName = path.join('../src', dirName)
	if (!dirNamePre.isempty()) {
		dirName = path.join(dirNamePre, dirName)
	}
	argvOrg = sys.argv
	sys.argv = argvOrg.replace('install', 'install-root'):list
	fs.chdir(dirName) {
		println('-' * 78)
		println(dirName)
		scope {
			builder = open('build.gura').parse().eval()
			builder.debFiles && debFiles.append(builder.debFiles)
			builder.rpmFiles && rpmFiles.append(builder.rpmFiles)
		}
		sys.argv = argvOrg
	}
}
scope {
	fileName = 'install-deb.sh'
	open(fileName, 'w').println('apt-get install -y ', set(debFiles))
	fs.chmod('a+x', fileName)
}
scope {
	fileName = 'install-rpm.sh'
	open(fileName, 'w').println('yum install -y ', set(rpmFiles))
	fs.chmod('a+x', fileName)
}
