#!/usr/bin/env gura
import(markdown)
import(gif)

text = R'''
# gif Module

The `gif` module provides measures to read/write image data in GIF format.
To utilize it, import the `gif` module using `import` function.

Below is an example to read a GIF file:

    import(gif)
    img = image('foo.gif')

Below is an example to create a GIF file that contains multiple images:

    import(gif)
    g = gif.content()
    g.addimage(['cell1.png', 'cell2.png', 'cell3.png'], 10) g.write('anim.gif')

## Exntension to Function's Capability

This module extends the capability of function `image()` and instance method `image#write()`
so that they can read/write GIF files.

When function `image()` is provided with a stream that satisfies the following conditions,
it would recognize the stream as a GIF file.

- The identifier of the stream ends with a suffix "`.gif`".
- The stream data begins with a byte sequence "`GIF87a`" or "`GIF89a`".

When instance method `image#write()` is provided with a stream that satisfies the following condition,
it would write image data in GIF format.

- The identifier of the stream ends with a suffix "`.gif`".

## gif.content Class

${markdown.funcdoc(
gif.content
gif.content.addimage
gif.content.write
)}

## Extension to image Class

This module extends the `stream` class with methods described here.

${markdown.funcdoc(
image.read@gif
image.write@gif
)}
'''.template().render()

write(doc:markdown.document, lang:symbol) = {
	doc << text
	doc
}

if (__name__ == '__main__') {
	write(markdown.document(), `en).render@html(sys.stdout)
}
