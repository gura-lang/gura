#!/usr/bin/env gura
import(markdown)
import(jpeg)

text@en = Re'''
# jpeg Module

## Overview

The `jpeg` module provides measures to read/write image data in JPEG format.
To utilize it, import the `jpeg` module using `import` function.

Below is an example to read a JPEG file:

    import(jpeg)
    img = image('foo.jpeg')


## Exntension to Function's Capability

This module extends the capability of function `image()` and instance method `image#write()`
so that they can read/write JPEG files.

When function `image()` is provided with a stream that satisfies the following conditions,
it would recognize the stream as a JPEG file.

- The identifier of the stream ends with a suffix "`.jpeg`", "`.jpg`" or "`.jpe`".
- The stream data begins with a byte sequence "`\xff\xd8`"
  that means SOI (start of Image) marker in JPEG specification.

When instance method `image#write()` is provided with a stream that satisfies the following condition,
it would write image data in JPEG format.

- The identifier of the stream ends with a suffix "`.jpeg`", "`.jpg`" or "`.jpe`".


## jpeg.exif Class

${markdown.makedoc@class(`en, jpeg.exif, headeroff => 2)}


## jpeg.ifd Class

${markdown.makedoc@class(`en, jpeg.ifd, headeroff => 2)}


## jpeg.tag Class

${markdown.makedoc@class(`en, jpeg.tag, headeroff => 2)}


## Extension to image Class

This module extends the `image` class with methods described here.

${markdown.makedoc@function(`en
image.read@jpeg
image.write@jpeg
)}


## Thanks

This module uses JPEG library which is distributed in the following site:

[http://www.ijg.org/](http://www.ijg.org/)
'''

markdown.document_server(locals(), %{`en => text@en})
