#!/usr/bin/env gura
//-----------------------------------------------------------------------------
// image#show() implementation using wx
//-----------------------------------------------------------------------------
import(wx)
import(png)
import(jpeg)
import(bmp)

//-----------------------------------------------------------------------------
// Panel
//-----------------------------------------------------------------------------
Panel = class(wx.Panel) {
	__init__(parent:wx.Window) = {|parent|
		vbox = wx.BoxSizer(wx.VERTICAL)
		this.imgFrame = nil
		this.SetSizer(vbox)
		wx.ScrolledWindow(this, style => wx.BORDER_SUNKEN | wx.HSCROLL | wx.VSCROLL) {|panel|
			vbox.Add(panel, wx.SizerFlags(1).Expand().Border(wx.TOP, 2))
			panel.SetScrollRate(10, 10)
			panel.SetVirtualSizeWH(this.img.width, this.img.height)
			panel.Bind(wx.EVT_ERASE_BACKGROUND) {} // nothing to do
			panel.Bind(wx.EVT_PAINT) {|event|
				try {
					wx.PaintDC(panel) {|dc|
						panel.PrepareDC(dc)
						size = panel.GetClientSize()
						this.imgFrame && dc.DrawBitmap(this.imgFrame, 0, 0, false)
					}
				} catch {|e|
					println(e)
				}
			}
			panel.Bind(wx.EVT_SIZE) {|event|
				size = event.GetSize()
				if (this.img.width < size.GetWidth() || \
										this.img.height < size.GetHeight()) {
					wdFrame = max(this.img.width, size.GetWidth())
					htFrame = max(this.img.height, size.GetHeight())
					this.imgFrame = image(`rgb, wdFrame, htFrame, `gray)
					this.imgFrame.paste((wdFrame - this.img.width) / 2,
									(htFrame - this.img.height) / 2, this.img)
				} else {
					this.imgFrame = this.img
				}
				this.Refresh()
			}
		}
	}
	SaveImage(pathName:string) = {
		try {
			this.img.write(pathName)
		} catch {
			wx.MessageBox('Failed to write image file',
								'Error', wx.OK | wx.ICON_ERROR, this)
		}
	}
}

//-----------------------------------------------------------------------------
// Frame
//-----------------------------------------------------------------------------
Frame = class(wx.Frame) {
	//[
	//] = wx.NewIds()
	__init__(parent:wx.Window:nil) = {|parent, wx.ID_ANY,
					'Image Viewer', size => wx.Size(App.width, App.height)|
		menuBar = wx.MenuBar(wx.MB_DOCKABLE)
		this.SetMenuBar(menuBar)
		wx.Menu() {|menu|
			menuBar.Append(menu, '&File')
			menu.Append(wx.ID_SAVE, '&Save\tCtrl-S', 'Save as image file')
			menu.AppendSeparator()
			menu.Append(wx.ID_EXIT, 'E&xit\tAlt-X', 'Quit viewer')
		}
		
		wx.Panel(this) {|panel|
			wx.BoxSizer(wx.VERTICAL) {|vbox|
				panel.SetSizer(vbox)
				this.panel = Panel(panel)
				vbox.Add(this.panel, wx.SizerFlags(2).Expand())
			}
		}
		
		this.Bind(wx.EVT_MENU, wx.ID_SAVE) {|event|
			dlg = wx.FileDialog(this,
				'Save image file',
				wx.EmptyString,
				'image.png',
				'PNG files (*.png)|*.png|JPEG files (*.jpg)|*.jpg|BMP files (*.bmp)|*.bmp',
				wx.FD_SAVE | wx.FD_OVERWRITE_PROMPT)
			if (dlg.ShowModal() == wx.ID_OK) {
				this.panel.SaveImage(dlg.GetPath())
			}
		}
		this.Bind(wx.EVT_MENU, wx.ID_EXIT) {|event| this.Close(true) }
	}
}

//-----------------------------------------------------------------------------
// App
//-----------------------------------------------------------------------------
App = class(wx.App) {
	OnInit() = {
		frame = Frame(nil)
		frame.Show()
		this.SetTopWindow(frame)
		true
	}
}

//-----------------------------------------------------------------------------
// expansion to image class
//-----------------------------------------------------------------------------
classref(`root.image).show(width => 640, height => 480) = {
	[App.width:public, App.height:public] = [width, height]
	Panel.img = this
	wx.IMPLEMENT_APP(App)
} %% {`en, R'''
Displays the content of `image` instance in a window.
'''}
