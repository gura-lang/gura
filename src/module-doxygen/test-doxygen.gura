#!/usr/bin/env gura
import(helper.test) {*}
import(doxygen)

testCases = [
R'''
/*!
  \brief \b BOLD.
 */	
'''
R'''
/*!
  \bar
  \foo{arg1,arg2,arg3}
  \param a an integer argument \b bold.
  \param s a constant character pointer.
  \return The test results
  \sa QTstyle_Test(), ~QTstyle_Test(), testMeToo() and publicVar()
 */	
'''
/*
//-----------------------------------------------------------------------------
R'''
/** See \l{SomeClass,Some Text} for more information. */
'''
//-----------------------------------------------------------------------------
*/
//-----------------------------------------------------------------------------
R'''
/*! \class Test class.h "inc/class.h"
 *  \brief This is a test class.
 *
 * Some details about the Test class.
 */
'''
//-----------------------------------------------------------------------------
R'''
/*! \file define.h
    \brief testing defines
    
    This is to test the documentation of defines.
*/

/*!
  \def MAX(x,y)
  Computes the maximum of \a x and \a y.
*/

/*! 
   Computes the absolute value of its argument \a x.
*/
'''
//-----------------------------------------------------------------------------
R'''	
/**
multi-line

line.1
line.2
line.3
*/
'''
//-----------------------------------------------------------------------------
R'''
'''
//-----------------------------------------------------------------------------
R'''
/*! \page example
 *  \dontinclude include_test.cpp
 *  Our main function starts like this:
 *  \skip main
 *  \until {
 *  First we create an object \c t of the Include_Test class.
 *  \skipline Include_Test
 *  Then we call the example member function 
 *  \line example
 *  After that our little test routine ends.
 *  \line }
 */
'''
//-----------------------------------------------------------------------------
R'''
/*!
  \param a an integer argument.
  \param s a constant character pointer.
  \return The test results
  \sa QTstyle_Test(), ~QTstyle_Test(), testMeToo() and publicVar()
 */	
'''
//-----------------------------------------------------------------------------
R'''
/*!
 * \param a an integer argument.
 * \param s a constant character pointer.
 * \return The test results
 * \sa QTstyle_Test(), ~QTstyle_Test(), testMeToo() and publicVar()
 */	
'''
]
testCases1 = [
R'''
/**/
'''
R'''
/**
*/
'''
R'''
/*!
*/
'''
]

Parser = class(doxygen.parser) {
	@addtogroup(name:string, title:string) = '@addtogroup' + ' name:' + name.escape():surround + ' title:' + title.escape():surround + '\n'
	@callgraph() = '@callgraph' + '\n'
	@hidecallgrph() = '@hidecallgrph' + '\n'
	@callergraph() = '@callergraph' + '\n'
	@hidecallergraph() = '@hidecallergraph' + '\n'
	@category(name:string, header_file:string, header_name:string) = '@category' + ' name:' + name.escape():surround + ' header_file:' + header_file.escape():surround + ' header_name:' + header_name.escape():surround + '\n'
	@class(name:string, header_file:string, header_name:string) = '@class' + ' name:' + name.escape():surround + ' header_file:' + header_file.escape():surround + ' header_name:' + header_name.escape():surround + '\n'
	@def(name:string) = '@def' + ' name:' + name.escape():surround + '\n'
	@defgroup(name:string, group_title:string) = '@defgroup' + ' name:' + name.escape():surround + ' group_title:' + group_title.escape():surround + '\n'
	@dir(path_fragment:string) = '@dir' + ' path_fragment:' + path_fragment.escape():surround + '\n'
	@enum(name:string) = '@enum' + ' name:' + name.escape():surround + '\n'
	@example(file_name:string) = '@example' + ' file_name:' + file_name.escape():surround + '\n'
	@endinternal() = '@endinternal' + '\n'
	@extends(name:string) = '@extends' + ' name:' + name.escape():surround + '\n'
	@file(name:string) = '@file' + ' name:' + name.escape():surround + '\n'
	@fn(declaration:string) = '@fn' + ' declaration:' + declaration.escape():surround + '\n'
	@headerfile(header_file:string, header_name:string) = '@headerfile' + ' header_file:' + header_file.escape():surround + ' header_name:' + header_name.escape():surround + '\n'
	@hideinitializer() = '@hideinitializer' + '\n'
	@idlexcept(name:string) = '@idlexcept' + ' name:' + name.escape():surround + '\n'
	@implements(name:string) = '@implements' + ' name:' + name.escape():surround + '\n'
	@ingroup(groupname:string) = '@ingroup' + ' groupname:' + groupname.escape():surround + '\n'
	@interface(name:string, header_file:string, header_name:string) = '@interface' + ' name:' + name.escape():surround + ' header_file:' + header_file.escape():surround + ' header_name:' + header_name.escape():surround + '\n'
	@internal() = '@internal' + '\n'
	@mainpage(title:string) = '@mainpage' + ' title:' + title.escape():surround + '\n'
	@memberof(name:string) = '@memberof' + ' name:' + name.escape():surround + '\n'
	@name(header:string) = '@name' + ' header:' + header.escape():surround + '\n'
	@namespace(name:string) = '@namespace' + ' name:' + name.escape():surround + '\n'
	@nosubgrouping() = '@nosubgrouping' + '\n'
	@overload(declaration:string) = '@overload' + ' declaration:' + declaration.escape():surround + '\n'
	@package(name:string) = '@package' + ' name:' + name.escape():surround + '\n'
	@page(name:string, title:string) = '@page' + ' name:' + name.escape():surround + ' title:' + title.escape():surround + '\n'
	@private() = '@private' + '\n'
	@privatesection() = '@privatesection' + '\n'
	@property(name:string) = '@property' + ' name:' + name.escape():surround + '\n'
	@protected() = '@protected' + '\n'
	@protectedsection() = '@protectedsection' + '\n'
	@protocol(name:string, header_file:string, header_name:string) = '@protocol' + ' name:' + name.escape():surround + ' header_file:' + header_file.escape():surround + ' header_name:' + header_name.escape():surround + '\n'
	@public() = '@public' + '\n'
	@publicsection() = '@publicsection' + '\n'
	@pure() = '@pure' + '\n'
	@relates(name:string) = '@relates' + ' name:' + name.escape():surround + '\n'
	@related(name:string) = '@related' + ' name:' + name.escape():surround + '\n'
	@relatesalso(name:string) = '@relatesalso' + ' name:' + name.escape():surround + '\n'
	@relatedalso(name:string) = '@relatedalso' + ' name:' + name.escape():surround + '\n'
	@showinitializer() = '@showinitializer' + '\n'
	@static() = '@static' + '\n'
	@struct(name:string, header_file:string, header_name:string) = '@struct' + ' name:' + name.escape():surround + ' header_file:' + header_file.escape():surround + ' header_name:' + header_name.escape():surround + '\n'
	@typedef(declaration:string) = '@typedef' + ' declaration:' + declaration.escape():surround + '\n'
	@union(name:string, header_file:string, header_name:string) = '@union' + ' name:' + name.escape():surround + ' header_file:' + header_file.escape():surround + ' header_name:' + header_name.escape():surround + '\n'
	@var(declaration:string) = '@var' + ' declaration:' + declaration.escape():surround + '\n'
	@vhdlflow(title_for_the_flow_chart:string) = '@vhdlflow' + ' title_for_the_flow_chart:' + title_for_the_flow_chart.escape():surround + '\n'
	@weakgroup(name:string, title:string) = '@weakgroup' + ' name:' + name.escape():surround + ' title:' + title.escape():surround + '\n'
	@attention(text:string) = '@attention' + ' text:' + text.escape():surround + '\n'
	@author(list_of_authors:string) = '@author' + ' list_of_authors:' + list_of_authors.escape():surround + '\n'
	@authors(list_of_authors:string) = '@authors' + ' list_of_authors:' + list_of_authors.escape():surround + '\n'
	@brief(description:string) = '@brief' + ' description:' + description.escape():surround + '\n'
	@bug(description:string) = '@bug' + ' description:' + description.escape():surround + '\n'
	@cond(section_label:string) = '@cond' + ' section_label:' + section_label.escape():surround + '\n'
	@copyright(description:string) = '@copyright' + ' description:' + description.escape():surround + '\n'
	@date(description:string) = '@date' + ' description:' + description.escape():surround + '\n'
	@deprecated(description:string) = '@deprecated' + ' description:' + description.escape():surround + '\n'
	@details(description:string) = '@details' + ' description:' + description.escape():surround + '\n'
	@else() = '@else' + '\n'
	@elseif(section_label:string) = '@elseif' + ' section_label:' + section_label.escape():surround + '\n'
	@endcond() = '@endcond' + '\n'
	@endif() = '@endif' + '\n'
	@exception(exception_object:string, description:string) = '@exception' + ' exception_object:' + exception_object.escape():surround + ' description:' + description.escape():surround + '\n'
	@if(section_label:string) = '@if' + ' section_label:' + section_label.escape():surround + '\n'
	@ifnot(section_label:string) = '@ifnot' + ' section_label:' + section_label.escape():surround + '\n'
	@invariant(description:string) = '@invariant' + ' description:' + description.escape():surround + '\n'
	@note(text:string) = '@note' + ' text:' + text.escape():surround + '\n'
	@par(paragraph_title:string, paragraph:string) = '@par' + ' paragraph_title:' + paragraph_title.escape():surround + ' paragraph:' + paragraph.escape():surround + '\n'
	@param(dir:string, name:string, description:string) = '@param' + ' dir:' + dir.escape():surround + ' name:' + name.escape():surround + ' description:' + description.escape():surround + '\n'
	@parblock() = '@parblock' + '\n'
	@endparblock() = '@endparblock' + '\n'
	@tparam(name:string, description:string) = '@tparam' + ' name:' + name.escape():surround + ' description:' + description.escape():surround + '\n'
	@post(description:string) = '@post' + ' description:' + description.escape():surround + '\n'
	@pre(description:string) = '@pre' + ' description:' + description.escape():surround + '\n'
	@remark(text:string) = '@remark' + ' text:' + text.escape():surround + '\n'
	@remarks(text:string) = '@remarks' + ' text:' + text.escape():surround + '\n'
	@result(description:string) = '@result' + ' description:' + description.escape():surround + '\n'
	@return(description:string) = '@return' + ' description:' + description.escape():surround + '\n'
	@returns(description:string) = '@returns' + ' description:' + description.escape():surround + '\n'
	@retval(return_value:string, description:string) = '@retval' + ' return_value:' + return_value.escape():surround + ' description:' + description.escape():surround + '\n'
	@sa(references:string) = '@sa' + ' references:' + references.escape():surround + '\n'
	@see(references:string) = '@see' + ' references:' + references.escape():surround + '\n'
	@short(description:string) = '@short' + ' description:' + description.escape():surround + '\n'
	@since(text:string) = '@since' + ' text:' + text.escape():surround + '\n'
	@test(paragraph:string) = '@test' + ' paragraph:' + paragraph.escape():surround + '\n'
	@throw(exception_object:string, description:string) = '@throw' + ' exception_object:' + exception_object.escape():surround + ' description:' + description.escape():surround + '\n'
	@throws(exception_object:string, description:string) = '@throws' + ' exception_object:' + exception_object.escape():surround + ' description:' + description.escape():surround + '\n'
	@todo(paragraph:string) = '@todo' + ' paragraph:' + paragraph.escape():surround + '\n'
	@version(version_number:string) = '@version' + ' version_number:' + version_number.escape():surround + '\n'
	@warning(message:string) = '@warning' + ' message:' + message.escape():surround + '\n'
	@xrefitem(key:string, heading:string, list_title:string, text:string) = '@xrefitem' + ' key:' + key.escape():surround + ' heading:' + heading.escape():surround + ' list_title:' + list_title.escape():surround + ' text:' + text.escape():surround + '\n'
	@addindex(text:string) = '@addindex' + ' text:' + text.escape():surround + '\n'
	@anchor(word:string) = '@anchor' + ' word:' + word.escape():surround + '\n'
	@cite(label:string) = '@cite' + ' label:' + label.escape():surround + '\n'
	@endlink() = '@endlink' + '\n'
	@link(line_object:string) = '@link' + ' line_object:' + line_object.escape():surround + '\n'
	@ref(name:string, text:string) = '@ref' + ' name:' + name.escape():surround + ' text:' + text.escape():surround + '\n'
	@refitem(name:string) = '@refitem' + ' name:' + name.escape():surround + '\n'
	@secreflist() = '@secreflist' + '\n'
	@endsecreflist() = '@endsecreflist' + '\n'
	@subpage(name:string, text:string) = '@subpage' + ' name:' + name.escape():surround + ' text:' + text.escape():surround + '\n'
	@tableofcontents() = '@tableofcontents' + '\n'
	@section(name:string, title:string) = '@section' + ' name:' + name.escape():surround + ' title:' + title.escape():surround + '\n'
	@subsection(name:string, title:string) = '@subsection' + ' name:' + name.escape():surround + ' title:' + title.escape():surround + '\n'
	@subsubsection(name:string, title:string) = '@subsubsection' + ' name:' + name.escape():surround + ' title:' + title.escape():surround + '\n'
	@paragrph(name:string, title:string) = '@paragrph' + ' name:' + name.escape():surround + ' title:' + title.escape():surround + '\n'
	@dontinclude(file_name:string) = '@dontinclude' + ' file_name:' + file_name.escape():surround + '\n'
	@include(file_name:string) = '@include' + ' file_name:' + file_name.escape():surround + '\n'
	@includelineno(file_name:string) = '@includelineno' + ' file_name:' + file_name.escape():surround + '\n'
	@line(pattern:string) = '@line' + ' pattern:' + pattern.escape():surround + '\n'
	@skip(pattern:string) = '@skip' + ' pattern:' + pattern.escape():surround + '\n'
	@skipline(pattern:string) = '@skipline' + ' pattern:' + pattern.escape():surround + '\n'
	@snippet(file_name:string, block_id:string) = '@snippet' + ' file_name:' + file_name.escape():surround + ' block_id:' + block_id.escape():surround + '\n'
	@until(pattern:string) = '@until' + ' pattern:' + pattern.escape():surround + '\n'
	@verbinclude(file_name:string) = '@verbinclude' + ' file_name:' + file_name.escape():surround + '\n'
	@htmlinclude(file_name:string) = '@htmlinclude' + ' file_name:' + file_name.escape():surround + '\n'
	@latexinclude(file_name:string) = '@latexinclude' + ' file_name:' + file_name.escape():surround + '\n'
	@a(word:string) = '@a' + ' word:' + word.escape():surround + '\n'
	@arg(description:string) = '@arg' + ' description:' + description.escape():surround + '\n'
	@b(word:string) = '@b' + ' word:' + word.escape():surround + '\n'
	@c(word:string) = '@c' + ' word:' + word.escape():surround + '\n'
	@code(word:string) = '@code' + ' word:' + word.escape():surround + '\n'
	@copydoc(link_object:string) = '@copydoc' + ' link_object:' + link_object.escape():surround + '\n'
	@copybrief(link_object:string) = '@copybrief' + ' link_object:' + link_object.escape():surround + '\n'
	@copydetails(link_object:string) = '@copydetails' + ' link_object:' + link_object.escape():surround + '\n'
	@docbookonly() = '@docbookonly' + '\n'
	@dot(caption:string, size:string) = '@dot' + ' caption:' + caption.escape():surround + ' size:' + size.escape():surround + '\n'
	@msc(caption:string, size:string) = '@msc' + ' caption:' + caption.escape():surround + ' size:' + size.escape():surround + '\n'
	@startuml(file:string, caption:string, size:string) = '@startuml' + ' file:' + file.escape():surround + ' caption:' + caption.escape():surround + ' size:' + size.escape():surround + '\n'
	@dotfile(file:string, caption:string, size:string) = '@dotfile' + ' file:' + file.escape():surround + ' caption:' + caption.escape():surround + ' size:' + size.escape():surround + '\n'
	@mscfile(file:string, caption:string, size:string) = '@mscfile' + ' file:' + file.escape():surround + ' caption:' + caption.escape():surround + ' size:' + size.escape():surround + '\n'
	@diafile(file:string, caption:string, size:string) = '@diafile' + ' file:' + file.escape():surround + ' caption:' + caption.escape():surround + ' size:' + size.escape():surround + '\n'
	@e(word:string) = '@e' + ' word:' + word.escape():surround + '\n'
	@em(word:string) = '@em' + ' word:' + word.escape():surround + '\n'
	@endcode() = '@endcode' + '\n'
	@endcodebookonly() = '@endcodebookonly' + '\n'
	@enddot() = '@enddot' + '\n'
	@enduml() = '@enduml' + '\n'
	@endhtmlonly() = '@endhtmlonly' + '\n'
	@endlatexonly() = '@endlatexonly' + '\n'
	@endmanonly() = '@endmanonly' + '\n'
	@endrtfonly() = '@endrtfonly' + '\n'
	@endverbatim() = '@endverbatim' + '\n'
	@endxmlonly() = '@endxmlonly' + '\n'
	// @f$() = ''
	// @f[() = ''
	// @f]() = ''
	// @f}() = ''
	@htmlonly(block:string) = '@htmlonly' + ' block:' + block.escape():surround + '\n'
	@image(format:string, file:string, caption:string, size:string) = '@image' + ' format:' + format.escape():surround + ' file:' + file.escape():surround + ' caption:' + caption.escape():surround + ' size:' + size.escape():surround + '\n'
	@latexonly() = '@latexonly' + '\n'
	@manonly() = '@manonly' + '\n'
	@li(description:string) = '@li' + ' description:' + description.escape():surround + '\n'
	@n() = '@n' + '\n'
	@p(word:string) = '@p' + ' word:' + word.escape():surround + '\n'
	@rtfonly() = '@rtfonly' + '\n'
	@verbatim() = '@verbatim' + '\n'
	@xmlonly() = '@xmlonly' + '\n'
	// @\() = ''
	// @@() = ''
	// @~(language_id:string) = ''
	// @&() = ''
	// @$() = ''
	// @#() = ''
	// @<() = ''
	// @>() = ''
	// @%() = ''
	// @"() = ''
	// @.() = ''
	// @::() = ''
	// @|() = ''
	// @--() = ''
	// @---() = ''
	// @{() = ''
	// @}() = ''
}
/*
Parser = class(doxygen.parser) {
	//-------------------------------------------------------------------------
	// Structural indicators 
	@addtogroup(name:string, title:string) = 'addtogroup' + name + ' ' + title
	@callgraph() = ''
	@hidecallgrph() = ''
	@callergraph() = ''
	@hidecallergraph() = ''
	@category(name:string, header_file:string, header_name:string) = ''
	@class(name:string, header_file:string, header_name:string) = ''
	@def(name:string) = ''
	@defgroup(name:string, group_title:string) = ''
	@dir(path_fragment:string) = ''
	@enum(name:string) = ''
	@example(file_name:string) = ''
	@endinternal() = ''
	@extends(name:string) = ''
	@file(name:string) = ''
	@fn(declaration:string) = ''
	@headerfile(header_file:string, header_name:string) = ''
	@hideinitializer() = ''
	@idlexcept(name:string) = ''
	@implements(name:string) = ''
	@ingroup(groupname:string) = ''
	@interface(name:string, header_file:string, header_name:string) = ''
	@internal() = ''
	@mainpage(title:string) = ''
	@memberof(name:string) = ''
	@name(header:string) = ''
	@namespace(name:string) = ''
	@nosubgrouping() = ''
	@overload(declaration:string) = '@overload' + \
		'declaration:' + declaration
	@package(name:string) = ''
	@page(name:string, title:string) = ''
	@private() = ''
	@privatesection() = ''
	@property(name:string) = ''
	@protected() = ''
	@protectedsection() = ''
	@protocol(name:string, header_file:string, header_name:string) = ''
	@public() = ''
	@publicsection() = ''
	@pure() = ''
	@relates(name:string) = ''
	@related(name:string) = ''
	@relatesalso(name:string) = ''
	@relatedalso(name:string) = ''
	@showinitializer() = ''
	@static() = ''
	@struct(name:string, header_file:string, header_name:string) = ''
	@typedef(declaration:string) = ''
	@union(name:string, header_file:string, header_name:string) = ''
	@var(declaration:string) = ''
	@vhdlflow(title_for_the_flow_chart:string) = ''
	@weakgroup(name:string, title:string) = ''
	//-------------------------------------------------------------------------
	// Section indicators
	@attention(text:string) = ''
	@author(list_of_authors:string) = ''
	@authors(list_of_authors:string) = ''
	@brief(description:string) = '@brief(' + description + ')'
	@bug(description:string) = ''
	@cond(section_label:string) = ''
	@copyright(description:string) = ''
	@date(description:string) = ''
	@deprecated(description:string) = ''
	@details(description:string) = ''
	@else() = ''
	@elseif(section_label:string) = ''
	@endcond() = ''
	@endif() = ''
	@exception(exception_object:string, description:string) = ''
	@if(section_label:string) = ''
	@ifnot(section_label:string) = ''
	@invariant(description:string) = ''
	@note(text:string) = ''
	@par(paragraph_title:string, paragraph:string) = ''
	@param(dir:string, name:string, description:string) = format('%s %s %s', name, dir, description)
	@parblock() = ''
	@endparblock() = ''
	@tparam(name:string, description:string) = ''
	@post(description:string) = ''
	@pre(description:string) = ''
	@remark(text:string) = ''
	@remarks(text:string) = ''
	@result(description:string) = ''
	@return(description:string) = ''
	@returns(description:string) = ''
	@retval(return_value:string, description:string) = ''
	@sa(references:string) = ''
	@see(references:string) = ''
	@short(description:string) = ''
	@since(text:string) = ''
	@test(paragraph:string) = ''
	@throw(exception_object:string, description:string) = ''
	@throws(exception_object:string, description:string) = ''
	@todo(paragraph:string) = ''
	@version(version_number:string) = ''
	@warning(message:string) = ''
	@xrefitem(key:string, heading:string, list_title:string, text:string) = ''
	//-------------------------------------------------------------------------
	// Commands to create links
	@addindex(text:string) = ''
	@anchor(word:string) = ''
	@cite(label:string) = ''
	@endlink() = ''
	@link(line_object:string) = ''
	@ref(name:string, text:string) = ''
	@refitem(name:string) = ''
	@secreflist() = ''
	@endsecreflist() = ''
	@subpage(name:string, text:string) = ''
	@tableofcontents() = ''
	@section(name:string, title:string) = ''
	@subsection(name:string, title:string) = ''
	@subsubsection(name:string, title:string) = ''
	@paragrph(name:string, title:string) = ''
	//-------------------------------------------------------------------------
	// Commands for displaying examples
	@dontinclude(file_name:string) = ''
	@include(file_name:string) = ''
	@includelineno(file_name:string) = ''
	@line(pattern:string) = ''
	@skip(pattern:string) = ''
	@skipline(pattern:string) = ''
	@snippet(file_name:string, block_id:string) = ''
	@until(pattern:string) = ''
	@verbinclude(file_name:string) = ''
	@htmlinclude(file_name:string) = ''
	@latexinclude(file_name:string) = ''
	//-------------------------------------------------------------------------
	// Commands for visual enhancements
	@a(word:string) = ''
	@arg(description:string) = ''
	@b(word:string) = '@b(' + word + ')'
	@c(word:string) = ''
	@code(word:string) = ''
	@copydoc(link_object:string) = ''
	@copybrief(link_object:string) = ''
	@copydetails(link_object:string) = ''
	@docbookonly() = ''
	@dot(caption:string, size:string) = ''
	@msc(caption:string, size:string) = ''
	@startuml(file:string, caption:string, size:string) = ''
	@dotfile(file:string, caption:string, size:string) = ''
	@mscfile(file:string, caption:string, size:string) = ''
	@diafile(file:string, caption:string, size:string) = ''
	@e(word:string) = ''
	@em(word:string) = ''
	@endcode() = ''
	@endcodebookonly() = ''
	@enddot() = ''
	@enduml() = ''
	@endhtmlonly() = ''
	@endlatexonly() = ''
	@endmanonly() = ''
	@endrtfonly() = ''
	@endverbatim() = ''
	@endxmlonly() = ''
	// @f$() = ''
	// @f[() = ''
	// @f]() = ''
	// @f}() = ''
	@htmlonly(block:string) = ''
	@image(format:string, file:string, caption:string, size:string) = ''
	@latexonly() = ''
	@manonly() = ''
	@li(description:string) = ''
	@n() = ''
	@p(word:string) = ''
	@rtfonly() = ''
	@verbatim() = ''
	@xmlonly() = ''
	// @\() = ''
	// @@() = ''
	// @~(language_id:string) = ''
	// @&() = ''
	// @$() = ''
	// @#() = ''
	// @<() = ''
	// @>() = ''
	// @%() = ''
	// @"() = ''
	// @.() = ''
	// @::() = ''
	// @|() = ''
	// @--() = ''
	// @---() = ''
	// @{() = ''
	// @}() = ''
	@bar() = 'bar'
	@foo_3(a, b, c) = 'foo' + a + b + c
	OnCommand(cmdName:string, args[]:string) = ''
}
*/
//parser = Parser()

testCases.head(1).each {|testCase, idx|
	printf('case #%d\n', idx + 1)
	Parser().parse(testCase.reader())
	println()
}
