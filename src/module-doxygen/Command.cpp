//=============================================================================
// Command.cpp
//=============================================================================
#include "stdafx.h"

Gura_BeginModuleScope(doxygen)

//-----------------------------------------------------------------------------
// ArgOwner
//-----------------------------------------------------------------------------
ArgOwner::~ArgOwner()
{
	Clear();
}

void ArgOwner::Clear()
{
	foreach (ArgOwner, ppArg, *this) {
		delete *ppArg;
	}
	clear();
}

//-----------------------------------------------------------------------------
// Command
//-----------------------------------------------------------------------------
std::unique_ptr<CommandDict> Command::_pCmdDict;

void Command::Initialize()
{
	const Arg::Attr Optional = Arg::ATTR_Optional;
	const Arg::Attr OptionalBracket = Arg::ATTR_OptionalBracket;
	static const Command *cmds[] = {
		// Structural indicators
		Create("addtogroup",
			   ArgWord("name"),
			   ArgLine("title", Optional)),
		Create("callgraph"),
		Create("hidecallgrph"),
		Create("callergraph"),
		Create("hidecallergraph"),
		Create("category",
			   ArgWord("name"),
			   ArgWord("header_file", Optional),
			   ArgWord("header_name", Optional)),
		Create("class",
			   ArgWord("name"),
			   ArgWord("header_file", Optional),
			   ArgWord("header_name", Optional)),
		Create("def",
			   ArgWord("name")),
		Create("defgroup",
			   ArgWord("name"),
			   ArgLine("group_title")),
		Create("dir",
			   ArgWord("path_fragment", Optional)),
		Create("enum",
			   ArgWord("name")),
		Create("example",
			   ArgWord("file_name")),
		Create("endinternal"),
		Create("extends",
			   ArgWord("name")),
		Create("file",
			   ArgWord("name", Optional)),
		Create("fn",
			   ArgLine("function_declaration")),
		Create("headerfile",
			   ArgWord("header_file"),
			   ArgWord("header_name", Optional)),
		Create("hideinitializer"),
		Create("idlexcept",
			   ArgWord("name")),
		Create("implements",
			   ArgWord("name")),
		Create("ingroup",
			   ArgWord("groupname")),
		Create("interface",
			   ArgWord("name"),
			   ArgWord("header_file", Optional),
			   ArgWord("header_name", Optional)),
		Create("internal"),
		Create("mainpage",
			   ArgLine("title", Optional)),
		Create("memberof",
			   ArgWord("name")),
		Create("name",
			   ArgLine("header", Optional)),
		Create("namespace",
			   ArgWord("name")),
		Create("nosubgrouping"),
		Create("overload"),
		Create("package"),
		Create("page"),
		Create("private"),
		Create("privatesection"),
		Create("property"),
		Create("protected"),
		Create("protectedsection"),
		Create("protocol"),
		Create("public"),
		Create("publicsection"),
		Create("pure"),
		Create("relates"),
		Create("related"),
		Create("relatedalso"),
		Create("showinitializer"),
		Create("static"),
		Create("struct"),
		Create("typedef"),
		Create("union"),
		Create("var"),
		Create("vhdlflow"),
		Create("weakgroup"),
		// Section indicators
		Create("attention"),
		Create("author"),
		Create("authors"),
		Create("brief"),
		Create("bug"),
		Create("cond"),
		Create("copyright"),
		Create("date"),
		Create("deprecated"),
		Create("details"),
		Create("else"),
		Create("elseif"),
		Create("endcond"),
		Create("endif"),
		Create("exception"),
		Create("if"),
		Create("ifnot"),
		Create("invariant"),
		Create("note"),
		Create("par"),
		Create("param",
			   ArgWord("dir", OptionalBracket),
			   ArgWord("parameter_name"),
			   ArgPara("parameter_description")),
		Create("parblock"),
		Create("endparblock"),
		Create("tparam"),
		Create("post"),
		Create("pre"),
		Create("remark"),
		Create("remarks"),
		Create("result"),
		Create("return",
			   ArgPara("description_of_the_return_value")),
		Create("returns"),
		Create("retval"),
		Create("sa",
			   ArgPara("references")),
		Create("see"),
		Create("short"),
		Create("since"),
		Create("test"),
		Create("throw"),
		Create("throws"),
		Create("todo"),
		Create("version"),
		Create("warning"),
		Create("xrefitem"),
		// Commands to create links
		Create("addindex"),
		Create("anchor"),
		Create("cite"),
		Create("endlink"),
		Create("link"),
		Create("ref"),
		Create("refitem"),
		Create("secreflist"),
		Create("endsecreflist"),
		Create("subpage"),
		Create("tableofcontents"),
		Create("section"),
		Create("subsection"),
		Create("subsubsection"),
		Create("paragrph"),
		// Commands for displaying examples
		Create("dontinclude"),
		Create("include"),
		Create("includelineno"),
		Create("line"),
		Create("skip"),
		Create("skipline"),
		Create("snippet"),
		Create("until"),
		Create("verbinclude"),
		Create("htmlinclude"),
		Create("latexinclude"),
		// Commands for visual enhancements
		Create("a"),
		Create("arg"),
		Create("b"),
		Create("c"),
		Create("code"),
		Create("copydoc"),
		Create("copybrief"),
		Create("copydetails"),
		Create("docbookonly"),
		Create("dot"),
		Create("msc"),
		Create("startuml"),
		Create("dotfile"),
		Create("diafile"),
		Create("e"),
		Create("em"),
		Create("endcode"),
		Create("endcodebookonly"),
		Create("enddot"),
		Create("enduml"),
		Create("endhtmlonly"),
		Create("endlatexonly"),
		Create("endmanonly"),
		Create("endrtfonly"),
		Create("endverbatim"),
		Create("endxmlonly"),
		Create("f$"),
		Create("f["),
		Create("f]"),
		Create("f}"),
		Create("htmlonly"),
		Create("image"),
		Create("latexonly"),
		Create("manonly"),
		Create("li"),
		Create("n"),
		Create("p"),
		Create("rtfonly"),
		Create("verbatim"),
		Create("xmlonly"),
		Create("\\"),
		Create("\\@"),
		Create("&"),
		Create("$"),
		Create("#"),
		Create("<"),
		Create(">"),
		Create("%"),
		Create("\""),
		Create("."),
		Create("::"),
		Create("|"),
		Create("--"),
		Create("---"),
	};
	_pCmdDict.reset(new CommandDict());
	for (size_t i = 0; i < ArraySizeOf(cmds); i++) {
		const Command *pCmd = cmds[i];
		(*_pCmdDict)[pCmd->GetName()] = pCmd;
	}
};
	
Gura_EndModuleScope(doxygen)
