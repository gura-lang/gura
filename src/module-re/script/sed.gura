#!/usr/bin/env gura
import(re)

exec(fileName:string, silentFlag:boolean) {block} = {
	linesSub = []
	cntReplaced = 0
	readlines(fileName) {|line, iLine|
		rtn = block(line, iLine)
		if (islist(rtn) || line != rtn) {
			if (!silentFlag) {
				(cntReplaced == 0) && printf('%s\n', fileName)
				printf('-- replaced at line.%d\n', iLine + 1)
			}
			cntReplaced += 1
		}
		rtn && linesSub.append(rtn)
	}
	(cntReplaced > 0) && open(fileName, 'w').addcr(false).print(linesSub)
}

glob(pattern:string):[silent] {`block} = {
	silentFlag = __arg__.isset(`silent)
	path.glob(pattern):file {|fileName|
		exec(fileName, silentFlag) {|block|}
	}
}

walk(directory?:directory, maxdepth?:number, pattern*:string):[silent] {`block} = {
	silentFlag = __arg__.isset(`silent)
	path.walk(directory, maxdepth, pattern*):file {|fileName|
		exec(fileName, silentFlag) {|block|}
	}
}