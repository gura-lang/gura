#!/usr/bin/env gura
import(modbuild)
srcs = [
'module-cairo.cpp'
'Class_context.cpp'
'Class_font_extents.cpp'
'Class_text_extents.cpp'
'Class_rectangle.cpp'
'Class_rectangle_int.cpp'
'Class_region.cpp'
'Class_font_face.cpp'
'Class_toy_font_face.cpp'
'Class_ft_font_face.cpp'
'Class_win32_font_face.cpp'
'Class_quartz_font_face.cpp'
'Class_user_font_face.cpp'
'Class_scaled_font.cpp'
'Class_font_options.cpp'
'Class_device.cpp'
'Class_surface.cpp'
'Class_image_surface.cpp'
'Class_Writer_surface.cpp'
'Class_pdf_surface.cpp'
'Class_recording_surface.cpp'
'Class_win32_surface.cpp'
'Class_svg_surface.cpp'
'Class_quartz_surface.cpp'
'Class_xcb_surface.cpp'
'Class_xlib_surface.cpp'
'Class_script_surface.cpp'
'Class_pattern.cpp'
'Class_raster_source_pattern.cpp'
'Class_mesh_pattern.cpp'
'Class_path.cpp'
'Class_glyph.cpp'
'Class_text_cluster.cpp'
]
if (sys.platform != `darwin) {
	srcs.append('Class_ps_surface.cpp')
}
builder = modbuild.Builder()
if (sys.platform == `mswin) {
	builder.precompile = 'stdafx.h'
	dirCairo = path.join(builder.guestDir, 'cairo-1.12.18/src')
	dirPNG = path.join(builder.guestDir, 'lpng1520/projects/vstudio/Release Library')
	builder.incDirs.append(dirCairo)
	builder.libDirs.append(path.join(dirCairo, 'release'), dirPNG)
	builder.libs.append('cairo-static.lib', 'libpng15.lib', 'zlib.lib', 'msimg32.lib')
} elsif (sys.platform == `linux) {
	builder.precompile = 'stdafx.h'
	builder.libs.append('cairo')
	builder.incDirs.append('/usr/local/include/cairo', '/usr/include/cairo')
	builder.debFiles = ['libcairo2']
	builder.rpmFiles = ['cairo']
	builder.debFilesDevel = ['libcairo2-dev']
	builder.rpmFilesDevel = ['cairo-devel']
} elsif (sys.platform == `darwin) {
	builder.precompile = 'stdafx.h'
	builder.incDirs.append('guest/include/cairo')
	builder.libDirs.append('guest/dylib')
	builder.libs.append('cairo')
}
builder.progressFlag = true
builder.build('cairo', srcs)
