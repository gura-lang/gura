#!/usr/bin/env gura
import(markdown):binary:mixin_type {*}

generate_html(out:stream:w, item:item):map:void = {
	if (item.type == `root) {
		//out.print('<html>\n')
		//out.print('<body>\n')
		generate_html(out, item.children)
		//out.print('</body>\n')
		//out.print('</html>\n')
	} elsif (item.type == `h1) {
		out.print('<h1>')
		generate_html(out, item.children)
		out.print('</h1>\n')
	} elsif (item.type == `h2) {
		out.print('<h2>')
		generate_html(out, item.children)
		out.print('</h2>\n')
	} elsif (item.type == `h3) {
		out.print('<h3>')
		generate_html(out, item.children)
		out.print('</h3>\n')
	} elsif (item.type == `h4) {
		out.print('<h4>')
		generate_html(out, item.children)
		out.print('</h4>\n')
	} elsif (item.type == `h5) {
		out.print('<h5>')
		generate_html(out, item.children)
		out.print('</h5>\n')
	} elsif (item.type == `h6) {
		out.print('<h6>')
		generate_html(out, item.children)
		out.print('</h6>\n')
	} elsif (item.type == `p) {
		out.print('<p>\n')
		generate_html(out, item.children)
		out.println()
		out.print('</p>\n')
	} elsif (item.type == `normal) {
		out.print(item.text)
	} elsif (item.type == `em) {
		out.print('<em>', item.text, '</em>')
	} elsif (item.type == `strong) {
		out.print('<strong>', item.text, '</strong>')
	} elsif (item.type == `code) {
		out.print('<code>', item.text, '</code>')
	} elsif (item.type == `pre) {
		out.print('<pre><code>')
		generate_html(out, item.children)
		out.print('</code></pre>\n')
	} elsif (item.type == `ol) {
		out.print('<ol>\n')
		generate_html(out, item.children)
		out.print('</ol>\n')
	} elsif (item.type == `ul) {
		out.print('<ul>\n')
		generate_html(out, item.children)
		out.print('</ul>\n')
	} elsif (item.type == `li) {
		out.print('<li>')
		generate_html(out, item.children)
		out.print('</li>\n')
	} elsif (item.type == `line) {
		generate_html(out, item.children)
		out.print('\n')
	}
}

addgenerator('html', generate_html)
