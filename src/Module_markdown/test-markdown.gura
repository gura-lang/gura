#!/usr/bin/env gura
import(markdown):binary

text = R'''
No Header
===hoge

No Header
---hoge

-3 is less than zero

No Header
=
=

No Header
-
-

`code`
*emphasis*
**strong**
text
`not terminated code
text
*not terminated emphasis
text
**not terminated strong
text

    #include <stdio.h>
    int main()
    {
        -3;
        =a+2
        return 0;
        ======
        hoge
        for (int i = 0; i < 10; i++) {
            printf("hello\n");
        }
        ------
    }

paragraph
    // just after paragraph with no space between
    #include <stdio.h>
    int main()
    {
        -3;
        =a+2
        return 0;
        ======
        hoge
        for (int i = 0; i < 10; i++) {
            printf("hello\n");
        }
        ------
    }
  normal text
    void sub1()
    {
    }
  
    void sub2()
    {
    // 3 blank lines below
    
    
    
    // 3 blank lines above
    }
- item 1
- item 2
- item 3
  - item 3-1
  - item 3-2
  - item 3-3
    - item 3-3-1
    - item 3-3-2
- item 4
  - item 4-1
  - item 4-2
  - item 4-3

Header1
==

Header1
===

Header1
=======

Header2
--

Header2
---

Header2
-------

Build for Windows
-----
Build for Windows

- hoge

1. first
2. second
33. third
444. fourth
5555. fifth

1. Check if Visual Studio 2010 has been installed. You can use Express version as well.
2. Run a batch file `gura\src\setup-gura-guest.bat`, which downloads necessary packages
   from Git repository (https://github.com/ypsitau/gura-guest.git) and build them.
   The batch file may occur an error that says it cannot find `vcvarsall.bat`.
   In such a case, you have to edit `gura\gura-guest\setup.bat
   and modify `VCVARSALL` variable so that it points to a right directory of Visual Studio.
3. Open `gura\src\gura.sln` with Visual Studio 2010, switch the configuration to Release
   and build it.
'''

markdown.parse(text.reader()).print()
