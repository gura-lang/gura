<root>
  <p>
    <normal>'No Header ===hoge'
  <p>
    <normal>'No Header ---hoge'
  <p>
    <normal>'-3 is less than zero'
  <h1>
    <normal>'Header1'
  <h2>
    <normal>'Header2'
  <ul>
    <li>
      <normal>'item1'
    <li>
      <normal>'item2'
      <em>
        <normal>'emphasis'
  <ul>
    <li>
      <normal>'item1'
    <li>
      <normal>'item2 +100 yen'
    <li>
      <normal>'item3 +100 yen'
    <li>
      <normal>'item4'
  <p>
    <code>'code'
    <em>
      <normal>'emphasis'
    <strong>
      <normal>'strong'
    <normal>'text '
    <code>'not terminated code'
    <normal>'text'
    <em>
      <normal>'not terminated emphasis'
    <normal>'text'
    <strong>
      <normal>'not terminated strong'
    <normal>'text'
  <pre>
    <line>
      <normal>'#include <stdio.h>'
    <line>
      <normal>'int main()'
    <line>
      <normal>'{'
    <line>
      <normal>'    -3;'
    <line>
      <normal>'    =a+2'
    <line>
      <normal>'    return 0;'
    <line>
      <normal>'    ======'
    <line>
      <normal>'    hoge'
    <line>
      <normal>'    for (int i = 0; i < 10; i++) {'
    <line>
      <normal>'        printf("hello\n");'
    <line>
      <normal>'    }'
    <line>
      <normal>'    ------'
    <line>
      <normal>'}'
  <p>
    <normal>'paragraph'
  <pre>
    <line>
      <normal>'// just after paragraph with no space between'
    <line>
      <normal>'#include <stdio.h>'
    <line>
      <normal>'int main()'
    <line>
      <normal>'{'
    <line>
      <normal>'    -3;'
    <line>
      <normal>'    =a+2'
    <line>
      <normal>'    return 0;'
    <line>
      <normal>'    ======'
    <line>
      <normal>'    hoge'
    <line>
      <normal>'    for (int i = 0; i < 10; i++) {'
    <line>
      <normal>'        printf("hello\n");'
    <line>
      <normal>'    }'
    <line>
      <normal>'    ------'
    <line>
      <normal>'}'
  <p>
    <normal>'normal text'
  <pre>
    <line>
      <normal>'void sub1()'
    <line>
      <normal>'{'
    <line>
      <normal>'}'
  <pre>
    <line>
      <normal>'void sub2()'
    <line>
      <normal>'{'
    <line>
      <normal>'// 3 blank lines below'
    <line>
      <normal>''
    <line>
      <normal>''
    <line>
      <normal>''
    <line>
      <normal>'// 3 blank lines above'
    <line>
      <normal>'}'
  <ul>
    <li>
      <normal>'item 1'
    <li>
      <normal>'item 2'
    <li>
      <normal>'item 3'
      <em>
        <normal>'strong'
    <ul>
      <li>
        <normal>'item 3-1'
        <em>
          <normal>'strong'
      <li>
        <normal>'item 3-2 '
        <em>
          <normal>'strong'
        <normal>' '
        <code>'code'
      <li>
        <normal>'item 3-3'
      <ul>
        <li>
          <normal>'item 3-3-1'
        <li>
          <normal>'item 3-3-2'
    <li>
      <normal>'item 4'
    <ul>
      <li>
        <normal>'item 4-1'
      <li>
        <normal>'item 4-2'
      <li>
        <normal>'item 4-3'
  <h1>
    <normal>'Header1'
  <h1>
    <normal>'Header1'
  <h1>
    <normal>'Header1'
  <h2>
    <normal>'Header2'
  <h2>
    <normal>'Header2'
  <h2>
    <normal>'Header2'
  <h2>
    <normal>'Build for Windows'
  <p>
    <normal>'Build for Windows'
  <ul>
    <li>
      <normal>'hoge'
  <ol>
    <li>
      <normal>'first'
    <li>
      <normal>'second'
    <li>
      <normal>'third'
    <li>
      <normal>'fourth'
    <li>
      <normal>'fifth'
  <ol>
    <li>
      <normal>'Check if Visual Studio 2010 has been installed. You can use Express version as well.'
    <li>
      <normal>'Run a batch file '
      <code>'gura\src\setup-gura-guest.bat'
      <normal>', which downloads necessary packages from Git repository (https://github.com/ypsitau/gura-guest.git) and build them. The batch file may occur an error that says it cannot find '
      <code>'vcvarsall.bat'
      <normal>'. In such a case, you have to edit '
      <code>'gura\gura-guest\setup.bat'
      <normal>' and modify '
      <code>'VCVARSALL'
      <normal>' variable so that it points to a right directory of Visual Studio.'
    <li>
      <normal>'Open '
      <code>'gura\src\gura.sln'
      <normal>' with Visual Studio 2010, switch the configuration to Release and build it.'
  <h1>
    <normal>'header1'
  <h2>
    <normal>'header2'
  <h3>
    <normal>'header3'
  <h4>
    <normal>'header4'
  <h5>
    <normal>'header5'
  <h6>
    <normal>'header6'
  <h6>
    <normal>'header6'
  <h1>
    <normal>'header1'
  <h1>
    <normal>'header1'
  <h1>
    <normal>'header1'
  <h1>
    <normal>'header1'
  <h1>
    <normal>'header1'
  <h1>
    <normal>'header1'
  <h1>
    <normal>'header1  #'
  <ul>
    <li>
      <p>
        <normal>'para1 hoge'
      <p>
        <normal>'para2'
      <p>
        <normal>'para3'
    <li>
      <normal>'single para '
      <strong>
        <normal>'strong'
      <normal>' hoge'
    <li>
      <normal>'single para again '
      <strong>
        <normal>'strong'
      <normal>' foo'
  <ol>
    <li>
      <p>
        <normal>'para1 hoge'
      <p>
        <normal>'para2'
      <p>
        <normal>'para3'
    <li>
      <normal>'single para '
      <strong>
        <normal>'strong'
      <normal>' hoge'
    <li>
      <normal>'single para again '
      <strong>
        <normal>'strong'
      <normal>' foo'
  <ul>
    <li>
      <p>
        <normal>'para1 hoge'
      <pre>
        <line>
          <normal>'#include <stdio.h>'
        <line>
          <normal>'main()'
        <line>
          <normal>'{'
        <line>
          <normal>'}'
      <p>
        <normal>'foo bar'
    <li>
      <p>
        <normal>'para1 hoge'
      <pre>
        <line>
          <normal>'#include <stdio.h>'
        <line>
          <normal>'main()'
        <line>
          <normal>'{'
        <line>
          <normal>'}'
      <p>
        <normal>'foo bar'
  <ol>
    <li>
      <p>
        <normal>'para1 hoge'
      <pre>
        <line>
          <normal>'#include <stdio.h>'
        <line>
          <normal>'main()'
        <line>
          <normal>'{'
        <line>
          <normal>'}'
      <p>
        <normal>'foo bar'
    <li>
      <p>
        <normal>'para1 hoge'
      <pre>
        <line>
          <normal>'#include <stdio.h>'
        <line>
          <normal>'main()'
        <line>
          <normal>'{'
        <line>
          <normal>'}'
      <p>
        <normal>'foo bar'
  <ul>
    <li>
      <normal>'item-1 -300 +200'
    <li>
      <normal>'item-2'
    <li>
      <normal>'item-3'
    <li>
      <normal>'item-4'
  <ul>
    <li>
      <normal>'item-1'
    <li>
      <normal>'item-2'
    <li>
      <normal>'item-3'
  <p>
    <normal>'hoge'
  <ol>
    <li>
      <normal>'item-1'
    <li>
      <normal>'item-2'
    <li>
      <normal>'item-3'
  <p>
    <normal>'hoge'
  <ul>
    <li>
      <normal>'item-1'
    <li>
      <normal>'item-2'
    <li>
      <normal>'item-3'
  <p>
    <em>
      <normal>'Emphasis'
  <ul>
    <li>
      <normal>'item-1'
    <li>
      <normal>'item-2'
    <li>
      <normal>'item-3'
  <p>
    <strong>
      <normal>'Strong'
  <ul>
    <li>
      <normal>'item-1'
    <li>
      <normal>'item-2'
    <li>
      <normal>'item-3'
  <p>
    <normal>'+Plus at beginning'
  <ul>
    <li>
      <normal>'item-1'
    <li>
      <normal>'item-2'
    <li>
      <normal>'item-3'
  <p>
    <normal>'-Hyphen at beginning'
  <p>
    <code>'<code>'
    <normal>' spans are delimited by backticks.'
  <p>
    <normal>'You can include literal backticks like '
    <code>'`this`'
    <normal>'.'
  <p>
    <code>'test` hoge'
  <p>
    <code>'`this`'
  <p>
    <em>
      <normal>'strong'
    <em>
      <code>'strong code'
    <em>
      <normal>'normal and '
      <code>'code'
      <normal>' in composition'
  <p>
    <strong>
      <normal>''
      <em>
        <normal>'strong-em'
      <normal>' '
    <strong>
      <em>
        <normal>'strong-em'
    <strong>
      <normal>'head'
      <em>
        <normal>'strong-em'
      <normal>'tail'
