#!/usr/bin/env gura
import(gmp)
import(testutil) {*}

testcase('zero-division') {
	f(test:expr):map = {
		println(test)
		try {
			test.eval()
		} catch {|e|
			println('expected error occurs: ', e.text)
		}
	}
	tests = [
		`(3 / 0)
		`(3 / 0L)
		`(3 / 0.L)
		`(3 / 0Lr)
		`(3L / 0)
		`(3L / 0L)
		`(3L / 0.L)
		`(3L / 0Lr)
		`(3.L / 0)
		`(3.L / 0L)
		`(3.L / 0.L)
		//`(3.L / 0Lr)
		`(3Lr / 0)
		`(3Lr / 0L)
		//`(3Lr / 0.L)
		`(3Lr / 0Lr)
	]
	f(tests)
}
testcase('declaration') {
	tests = [
		`gmp.mpz(0)
		`gmp.mpq(0)
		`gmp.mpf(0)
		`0L
		`0Lr
		`0.L
		`gmp.mpz(1)
		`gmp.mpq(1)
		`gmp.mpf(1)
		`1L
		`1Lr
		`1.L
		`gmp.mpz(-1)
		`gmp.mpq(-1)
		`gmp.mpf(-1)
		`(-1L)
		`(-1Lr)
		`(-1.L)
		`gmp.mpz(314)
		`gmp.mpq(314)
		`gmp.mpf(314)
		`314L
		`314Lr
		`314.L
		`gmp.mpz('314')
		`gmp.mpq('314')
		`gmp.mpf('314')
		`'314'.mpz()
		`'314'.mpq()
		`'314'.mpf()
		`3.14L
		//`3.14Lr
		`123456789012345678901234567890123456789012345678901234567890L
		`123456789012345678901234567890123456789012345678901234567890Lr
		`0777777
		`0xffffffff
	]
	tester(tests)
}
testcase('operation for mpz') {
	tests = [
		`(+3L)
		`(-3L)
		`(3L + 4L)
		`(3L + 4)
		`(3 + 4L)
		`(3L - 4L)
		`(3L - 4)
		`(3 - 4L)
		`(3L * 4L)
		`(3L * 4)
		`(3 * 4L)
		`(12L / 4L)
		`(12L / 4)
		`(12 / 4L)
		`(3L == 4L)
		`(3L == 4)
		`(3 == 4L)
		`(3L == 3L)
		`(3L == 3)
		`(3 == 3L)
		`(3L < 4L)
		`(3L < 4)
		`(3 < 4L)
		`(5L < 4L)
		`(5L < 4)
		`(5 < 4L)
		`(3L > 4L)
		`(3L > 4)
		`(3 > 4L)
		`(5L > 4L)
		`(5L > 4)
		`(5 > 4L)
		`(3L <=> 4L)
		`(3L <=> 4)
		`(3 <=> 4L)
		`(3L <=> 3L)
		`(3L <=> 3)
		`(3 <=> 3L)
		`(5L <=> 4L)
		`(5L <=> 4)
		`(5 <=> 4L)
	]
	tester(tests)
}
