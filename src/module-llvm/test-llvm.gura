#!/usr/bin/env gura
import(llvm)

sub(n) = {
	println('hello', n)
}

foo = 322
//x = @@{{1, 2, 3}, {4, 5, 6}}
x = 'hello world'.split():list

Person = struct(name:string, age:number) {
	Print() = {
		printf('name:%s, age:%d\n', this.name, this.age)
	}
}

person = Person('Taro', 23)
people = @(Person) {
	{'Taro', 23}, {'Hanako', 21}, {'Kenta', 24}
}

rtn = llvm.gencode {
	//b'hello \x00 world'
	//[1, 2, 3, [4, 5, 6], 4, 5]
	//repeat (10) {|i|
	//	println(i)
	//}
	//printf('hello %d %d\n', 3, 4)
	//sub(3)
	//[1, 2, 3] + [1, 2, 3, 4]
	//[1, 2, 100..10]
	//foo + 3 + 4 + 2 * 3
	//-(3 + 4)
	//'hello world'
	//foo
	/*
	f() = {
		3 + 4
	}
	g() = {
		println('hello')
	}
	*/
	//y = 11
	//y = 3 + 4
	//x = y + 2
	//repeat(3) {
	//	println('hello')
	//}
	//println('hello world')
	//f(x, y) = {
	//	x + y
	//}
	//3 + 4
	//repeat(3) {
	//}
	//println('hello', 3, 4)
	//bar = 'hello 3'
	//foo = 3
	//a = 3
	//b = 'fdjafkjdas'
	//printf('a = %d\n', 111)
	//99
	//x[0..4]
	//foo += 3
	//x[2] = 'X'
	//x = !3
	//[a, b, c] = 3
	//x[2, 4, 6] = [33, 44]
	//[x, y, z] = [1, 2]
	//person.name
	//person.Print()
	people::name
	people:*age.sum()
	//'1234'.len()
	
}
println('rtn = ', rtn)
println(x)