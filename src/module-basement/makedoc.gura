#!/usr/bin/env gura
import(markdown)

text = R'''
# Built-in Functions
'''

text_formatting = R'''
## Formatting and Printing of Text
'''

text_repetition = R'''
## Repetition
'''

text_flow = R'''
## Flow Control
'''

text_branch = R'''
## Branch Control
'''

text_exception = R'''
## Handling Exception
'''

text_data_trans = R'''
## Data Transformation
'''

text_class = R'''
## Class Operations
'''

text_scope = R'''
## Scope Operations
'''

text_module = R'''
## Module Operations
'''

text_valuetype = R'''
## Value Type Information
'''

text_data_process = R'''
## Data Processing
'''

text_random = R'''
## Random
'''

text_help = R'''
## Help Information
'''

write(doc:markdown.document) = {
	doc << text
	doc << text_formatting
	doc << [
		format
		print
		printf
		println
	]
	doc << text_repetition
	doc << [
		cross
		for
		repeat
		while
	]
	doc << text_flow
	doc << [
		break
		continue
		return
	]
	doc << text_branch
	doc << [
		if
		elsif
		else
		end
		switch
		case
		default
	]
	doc << text_exception
	doc << [
		try
		catch
		finally
		raise
	]
	doc << text_data_trans
	doc << [
		chr
		hex
		int
		ord
		tonumber
		tostring
		tosymbol
	]
	doc << text_class
	doc << [
		class
		classref
		struct
		super
	]
	doc << text_scope
	doc << [
		//extern
		local
		locals
		outers
		public
		scope
	]
	doc << text_module
	doc << [
		import
		module
	]
	doc << text_valuetype
	doc << [
		isbinary
		isboolean
		isclass
		iscomplex
		isdatetime
		isdict
		isenvironment
		iserror
		isexpr
		isfunction
		isiterator
		islist
		ismatrix
		ismodule
		isnil
		isnumber
		isrational
		issemaphore
		isstring
		issymbol
		istimedelta
		isuri
		isdefined
		isinstance
		istype
		typename
		undef
	]
	doc << text_data_process
	doc << [
		choose
		cond
		conds
		dim
		max
		min
	]
	doc << text_random
	doc << [
		rand
		randseed
	]
	doc << text_help
	doc << [
		dir
		dirtype
		help
	]
	doc
}

if (__name__ == '__main__') {
	write(markdown.document()).render@html(sys.stdout)
}
