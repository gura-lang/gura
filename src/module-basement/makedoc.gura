#!/usr/bin/env gura
import(markdown)

text = R'''
# Built-in Functions


'''

write(doc:markdown.document) = {
	doc << text
	doc << '## Formatting and Printing of Text'
	doc << [
		format
		print
		printf
		println
	]
	doc << '## Repetition'
	doc << [
		cross
		for
		repeat
		while
	]
	doc << '## Flow Control'
	doc << [
		break
		continue
		return
	]
	doc << '## Branch Control'
	doc << [
		if
		elsif
		else
		end
		switch
		case
		default
	]
	doc << '## Handling Exception'
	doc << [
		try
		catch
		finally
		raise
	]
	doc << '## Data Transformation'
	doc << [
		chr
		hex
		int
		ord
		tonumber
		tostring
		tosymbol
	]
	doc << '## Class Operations'
	doc << [
		class
		classref
		struct
		super
	]
	doc << '## Scope Operations'
	doc << [
		//extern
		local
		locals
		outers
		public
		scope
	]
	doc << '## Module Operations'
	doc << [
		import
		module
	]
	doc << '## Value Type Information'
	doc << [
		isbinary
		isboolean
		isclass
		iscomplex
		isdatetime
		isdict
		isenvironment
		iserror
		isexpr
		isfunction
		isiterator
		islist
		ismatrix
		ismodule
		isnil
		isnumber
		isrational
		issemaphore
		isstring
		issymbol
		istimedelta
		isuri
		isdefined
		isinstance
		istype
		typename
		undef
	]
	doc << '## Data Processing'
	doc << [
		choose
		cond
		conds
		dim
		max
		min
	]
	doc << '## Random'
	doc << [
		rand
		randseed
	]
	doc << '## Help Information'
	doc << [
		dir
		dirtype
		help
	]
	doc
}

if (__name__ == '__main__') {
	write(markdown.document()).render@html(sys.stdout)
}
