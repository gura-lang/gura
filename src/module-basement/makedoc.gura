#!/usr/bin/env gura
import(markdown)

text = R'''
# Built-in Functions

## Formatting and Printing of Text

${markdown.funcdoc(
format
print
printf
println
)}

## Repetition

${markdown.funcdoc(
cross
for
repeat
while
)}

## Value Generator

${markdown.funcdoc(
dim
interval
range
)}

## Flow Control

${markdown.funcdoc(
break
continue
return
)}

## Branch Sequence

${markdown.funcdoc(
if
elsif
else
end
switch
case
default
)}

## Exception Handling

${markdown.funcdoc(
try
catch
finally
raise
)}

## Data Converter

${markdown.funcdoc(
chr
hex
int
ord
tonumber
tostring
tosymbol
)}

## Class Operations

${markdown.funcdoc(
class
classref
struct
super
)}

## Scope Operations

${markdown.funcdoc(
//extern
local
locals
outers
public
scope
)}

## Module Operations

${markdown.funcdoc(
import
module
)}

## Value Type Information

${markdown.funcdoc(
isbinary
isboolean
isclass
iscomplex
isdatetime
isdict
isenvironment
iserror
isexpr
isfunction
isiterator
islist
ismatrix
ismodule
isnil
isnumber
isrational
issemaphore
isstring
issymbol
istimedelta
isuri
isdefined
isinstance
istype
typename
undef
)}

## Data Processing

${markdown.funcdoc(
choose
cond
conds
max
min
)}

## Random

${markdown.funcdoc(
rand
rands
randseed
)}

## Property Listing

${markdown.funcdoc(
dir
dirtype
)}
'''.template().render()

write(doc:markdown.document) = {
	doc << text
	doc
}

if (__name__ == '__main__') {
	write(markdown.document()).render@html(sys.stdout)
}
