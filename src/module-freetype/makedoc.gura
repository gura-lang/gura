#!/usr/bin/env gura
import(markdown)
import(freetype)

write(doc:markdown.document) = {
	doc << R'''
	# freetype Module
	## Abstract
	## Sample
	'''
	doc << R'''
	## Module Functions
	'''
	doc << [
		freetype.sysfontpath
	]
	doc << R'''
	## freetype.BBox Class
	'''
	doc << [
	]
	doc << R'''
	## freetype.BDF_Property Class
	'''
	doc << [
	]
	doc << R'''
	## freetype.Bitmap Class
	'''
	doc << [
		freetype.Bitmap.Embolden
	]
	doc << R'''
	## freetype.CharMap Class
	'''
	doc << [
		freetype.CharMap.Get_Index
	]
	doc << R'''
	## freetype.FTC_CMapCache Class
	'''
	doc << [
	]
	doc << R'''
	## freetype.FTC_ImageCache Class
	'''
	doc << [
	]
	doc << R'''
	## freetype.FTC_ImageType Class
	'''
	doc << [
	]
	doc << R'''
	## freetype.FTC_Manager Class
	'''
	doc << [
	]
	doc << R'''
	## freetype.FTC_Node Class
	'''
	doc << [
	]
	doc << R'''
	## freetype.FTC_SBit Class
	'''
	doc << [
	]
	doc << R'''
	## freetype.FTC_SBitCache Class
	'''
	doc << [
	]
	doc << R'''
	## freetype.FTC_Scaler Class
	'''
	doc << [
	]
	doc << R'''
	## freetype.Face Class
	'''
	doc << [
		freetype.Face
		freetype.Face.CheckTrueTypePatents
		freetype.Face.Get_Advance
		freetype.Face.Get_Advances
		freetype.Face.Get_Glyph_Name
		freetype.Face.Get_Postscript_Name
		freetype.Face.Get_Kerning
		freetype.Face.Load_Char
		freetype.Face.Load_Glyph
		//freetype.Face.Select_Charmap
		freetype.Face.Set_Charmap
		freetype.Face.Set_Pixel_Sizes
	]
	doc << R'''
	## freetype.Glyph Class
	'''
	doc << [
		freetype.Glyph.Copy
		freetype.Glyph.Stroke
		freetype.Glyph.StrokeBorder
	]
	doc << R'''
	## freetype.GlyphSlot Class
	'''
	doc << [
		freetype.GlyphSlot.Get_Glyph
		freetype.GlyphSlot.Render
	]
	doc << R'''
	## freetype.Matrix Class
	'''
	doc << [
		freetype.Matrix
		freetype.Matrix.Multiply
		freetype.Matrix.Invert
	]
	doc << R'''
	## freetype.Outline Class
	'''
	doc << [
		freetype.Outline.Translate
		freetype.Outline.Transform
		freetype.Outline.Embolden
		//freetype.Outline.EmboldenXY
		freetype.Outline.Reverse
	]
	doc << R'''
	## freetype.Raster Class
	'''
	doc << [
	]
	doc << R'''
	## freetype.Span Class
	'''
	doc << [
	]
	doc << R'''
	## freetype.Stroker Class
	'''
	doc << [
		freetype.Stroker
		freetype.Stroker.BeginSubPath
	]
	doc << R'''
	## freetype.Vector Class
	'''
	doc << [
		freetype.Vector
		freetype.Vector.Length
		freetype.Vector.Transform
	]
	doc << R'''
	## freetype.font Class
	'''
	doc << [
		freetype.font
		freetype.font.cleardeco
		freetype.font.drawtext
		freetype.font.calcsize
		freetype.font.calcbbox
	]
	doc << R'''
	## Extension of image Class
	'''
	doc << [
		image.drawtext
	]
	doc
}

if (__name__ == '__main__') {
	write(markdown.document()).render@html(sys.stdout)
}
