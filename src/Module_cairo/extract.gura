#!/usr/bin/env gura
import(re)
fileName = 'resource.txt'
stat = `normal
generate(rtnType:string, rtnPtr:string, funcName:string, argsRaw:string) = {
	println(rtnType, ' ', rtnPtr, ' ', funcName)
	argsRaw.split(','):*strip().each() {|arg|
		if (m = arg.match(r'^(\w+)\s*(\*?)\s*(\w+)')) {
			[argType, argPtr, argName] = m[1, 2, 3]
			println('    ', argType, ' ', argPtr, ' ', argName)
		} else {
			println('invalid argument form: ', arg)
			sys.exit(1)
		}
	}
}
readlines(fileName) {|line|
	if (stat == `normal) {
		if (m = line.match(r'^(\w+)\s*(\*?)\s*(\w+)\s*\(([^\)]*)\)')) {
			[rtnType, rtnPtr, funcName] = m[1, 2, 3]
			argsRaw = m[4].strip()
			generate(rtnType, rtnPtr, funcName, argsRaw)
		} elsif (m = line.match(r'^(\w+)\s*(\*?)\s*(\w+)\s*\(([^\)]*)')) {
			[rtnType, rtnPtr, funcName] = m[1, 2, 3]
			argsRaw = m[4].strip()
			stat = `args
		}
	} elsif (stat == `args) {
		if (m = line.match(r'\s*([^\)]*)\)')) {
			argsRaw += m[1].strip()
			generate(rtnType, rtnPtr, funcName, argsRaw)
			stat = `normal
		} elsif (m = line.match(r'\s*([^\)]*)')) {
			argsRaw += m[1].strip()
		}
	}
}
