#!/usr/bin/env gura
// This Gura script has been ported from the original above by Yutaka SAITO.
import(wx)
import(resource)
import(colrdlgg)
import(dirdlgg)
import(filedlgg)
import(fontdlgg)

// Menu IDs
[
	DIALOGS_CHOOSE_COLOUR,
	DIALOGS_CHOOSE_COLOUR_GENERIC,
	DIALOGS_CHOOSE_FONT,
	DIALOGS_CHOOSE_FONT_GENERIC,
	DIALOGS_MESSAGE_BOX,
	DIALOGS_SINGLE_CHOICE,
	DIALOGS_MULTI_CHOICE,
	DIALOGS_TEXT_ENTRY,
	DIALOGS_PASSWORD_ENTRY,
	DIALOGS_FILE_OPEN,
	DIALOGS_FILE_OPEN2,
	DIALOGS_FILES_OPEN,
	DIALOGS_FILE_SAVE,
	DIALOGS_FILE_OPEN_GENERIC,
	DIALOGS_FILES_OPEN_GENERIC,
	DIALOGS_FILE_SAVE_GENERIC,
	DIALOGS_DIR_CHOOSE,
	DIALOGS_DIRNEW_CHOOSE,
	DIALOGS_GENERIC_DIR_CHOOSE,
	DIALOGS_TIP,
	DIALOGS_NUM_ENTRY,
	DIALOGS_LOG_DIALOG,
	DIALOGS_MODAL,
	DIALOGS_MODELESS,
	DIALOGS_CENTRE_SCREEN,
	DIALOGS_CENTRE_PARENT,
	DIALOGS_MODELESS_BTN,
	DIALOGS_PROGRESS,
	DIALOGS_ABOUTDLG_SIMPLE,
	DIALOGS_ABOUTDLG_FANCY,
	DIALOGS_ABOUTDLG_FULL,
	DIALOGS_ABOUTDLG_CUSTOM,
	DIALOGS_BUSYINFO,
	DIALOGS_FIND,
	DIALOGS_REPLACE,
	DIALOGS_REQUEST,
	DIALOGS_PROPERTY_SHEET,
	DIALOGS_PROPERTY_SHEET_TOOLBOOK,
	DIALOGS_PROPERTY_SHEET_BUTTONTOOLBOOK
] = wx.ID_HIGHEST..

myCanvas = nil

MyApp = class(wx.App) {
	OnInit() = {
		wx.InitAllImageHandlers();
		self.m_canvasTextColour = wx.BLACK;
		self.m_canvasFont = wx.NORMAL_FONT;
		// Create the main frame window
		frame = MyFrame(nil, 'wxWidgets dialogs example');
		// Make a menubar
		menuDlg = wx.Menu()
		menuDlg.Append(DIALOGS_MESSAGE_BOX, '&Message box\tCtrl-M');
		choices_menu = wx.Menu()
		choices_menu.Append(DIALOGS_CHOOSE_COLOUR, '&Choose colour');
		choices_menu.Append(DIALOGS_CHOOSE_FONT, 'Choose &font');
		choices_menu.Append(DIALOGS_SINGLE_CHOICE,  '&Single choice\tCtrl-C');
		choices_menu.Append(DIALOGS_MULTI_CHOICE,  'M&ultiple choice\tCtrl-U');
		choices_menu.AppendSeparator();
		choices_menu.Append(DIALOGS_CHOOSE_COLOUR_GENERIC, '&Choose colour (generic)');
		choices_menu.Append(DIALOGS_CHOOSE_FONT_GENERIC, 'Choose &font (generic)');
		menuDlg.Append(wx.ID_ANY,'&Choices and selectors',choices_menu);
		entry_menu = wx.Menu()
		entry_menu.Append(DIALOGS_TEXT_ENTRY,  'Text &entry\tCtrl-E');
		entry_menu.Append(DIALOGS_PASSWORD_ENTRY,  '&Password entry\tCtrl-P');
		entry_menu.Append(DIALOGS_NUM_ENTRY, '&Numeric entry\tCtrl-N');
		menuDlg.Append(wx.ID_ANY,'&Entry dialogs',entry_menu);
		filedlg_menu = wx.Menu()
		filedlg_menu.Append(DIALOGS_FILE_OPEN,  '&Open file\tCtrl-O');
		filedlg_menu.Append(DIALOGS_FILE_OPEN2,  '&Second open file\tCtrl-2');
		filedlg_menu.Append(DIALOGS_FILES_OPEN,  'Open &files\tCtrl-Q');
		filedlg_menu.Append(DIALOGS_FILE_SAVE,  'Sa&ve file\tCtrl-S');
		filedlg_menu.AppendSeparator();
		filedlg_menu.Append(DIALOGS_FILE_OPEN_GENERIC,  '&Open file (generic)');
		filedlg_menu.Append(DIALOGS_FILES_OPEN_GENERIC,  'Open &files (generic)');
		filedlg_menu.Append(DIALOGS_FILE_SAVE_GENERIC,  'Sa&ve file (generic)');
		menuDlg.Append(wx.ID_ANY,'&File operations',filedlg_menu);
		dir_menu = wx.Menu()
		dir_menu.Append(DIALOGS_DIR_CHOOSE,  '&Choose a directory\tCtrl-D');
		dir_menu.Append(DIALOGS_DIRNEW_CHOOSE,  'Choose a directory (with \"Ne&w\" button)\tShift-Ctrl-D');
		menuDlg.Append(wx.ID_ANY, '&Directory operations', dir_menu);
		dir_menu.AppendSeparator();
		dir_menu.Append(DIALOGS_GENERIC_DIR_CHOOSE,  '&Choose a directory (generic)');
		info_menu = wx.Menu()
		info_menu.Append(DIALOGS_TIP,  '&Tip of the day\tCtrl-T');
		info_menu.Append(DIALOGS_PROGRESS, 'Pro&gress dialog\tCtrl-G');
		info_menu.Append(DIALOGS_BUSYINFO, '&Busy info dialog\tCtrl-B');
		info_menu.Append(DIALOGS_LOG_DIALOG, '&Log dialog\tCtrl-L');
		menuDlg.Append(wx.ID_ANY, '&Informative dialogs', info_menu);
		find_menu = wx.Menu()
		find_menu.AppendCheckItem(DIALOGS_FIND, '&Find dialog\tCtrl-F');
		find_menu.AppendCheckItem(DIALOGS_REPLACE, 'Find and &replace dialog\tShift-Ctrl-F');
		menuDlg.Append(wx.ID_ANY,'&Searching',find_menu);
		dialogs_menu = wx.Menu()
		dialogs_menu.Append(DIALOGS_MODAL, '&Modal dialog\tCtrl-W');
		dialogs_menu.AppendCheckItem(DIALOGS_MODELESS, 'Mode&less dialog\tCtrl-Z');
		dialogs_menu.Append(DIALOGS_CENTRE_SCREEN, 'Centered on &screen\tShift-Ctrl-1');
		dialogs_menu.Append(DIALOGS_CENTRE_PARENT, 'Centered on &parent\tShift-Ctrl-2');
		menuDlg.Append(wx.ID_ANY, '&Generic dialogs', dialogs_menu);
		sheet_menu = wx.Menu()
		sheet_menu.Append(DIALOGS_PROPERTY_SHEET, '&Standard property sheet\tShift-Ctrl-P');
		sheet_menu.Append(DIALOGS_PROPERTY_SHEET_TOOLBOOK, '&Toolbook sheet\tShift-Ctrl-T');
		menuDlg.Append(wx.ID_ANY, '&Property sheets', sheet_menu);
		menuDlg.Append(DIALOGS_REQUEST, '&Request user attention\tCtrl-R');
		menuDlg.AppendSeparator();
		menuDlg.Append(wx.ID_EXIT, 'E&xit\tAlt-X');
		menuHelp = wx.Menu()
		menuHelp.Append(DIALOGS_ABOUTDLG_SIMPLE, '&About (simple)...\tF1');
		menuHelp.Append(DIALOGS_ABOUTDLG_FANCY, 'About (&fancy)...\tShift-F1');
		menuHelp.Append(DIALOGS_ABOUTDLG_FULL, 'About (f&ull)...\tCtrl-F1');
		menuHelp.Append(DIALOGS_ABOUTDLG_CUSTOM, 'About (&custom)...\tCtrl-Shift-F1');
		menubar = wx.MenuBar()
		menubar.Append(menuDlg, '&Dialogs');
		menubar.Append(menuHelp, '&Help');
		frame.SetMenuBar(menubar);
		myCanvas:extern = MyCanvas(frame);
		myCanvas.SetBackgroundColour(wx.WHITE);
		frame.Centre(wx.BOTH);
		// Show the frame
		frame.Show(true);
		self.SetTopWindow(frame);
		true;
	}
}

/*
// a trivial example of a custom dialog class
MyAboutDialog = class(wx.GenericAboutDialog) {
	__init__(info:wx.AboutDialogInfo) = {
		self.Create(info);
	}
	// add some custom controls
	DoAddCustomControls() = {
		self.AddControl(wx.StaticLine(self), wx.SizerFlags().Expand())
		self.AddText('Some custom text')
		self.AddControl(wx.StaticLine(self), wx.SizerFlags().Expand());
	}
};
*/

MyFrame = class(wx.Frame) {
	__init__(parent:wx.Window:nil, title:string) = {|parent, wx.ID_ANY, title|
		self.SetIcon(wx.IconFromXPMData(resource.sample_xpm))
		self.m_dialog = nil
		self.m_findData = wx.FindReplaceData()
		self.m_dlgFind = nil
		self.m_dlgReplace = nil
		self.m_clrData = wx.ColourData()
	}
	MessageBox(event:wx.CommandEvent) = {
	}
	ChooseColour(event:wx.CommandEvent) = {
	}
	ChooseFont(event:wx.CommandEvent) = {
	}
	LogDialog(event:wx.CommandEvent) = {
	}
	SingleChoice(event:wx.CommandEvent) = {
	}
	MultiChoice(event:wx.CommandEvent) = {
	}
	TextEntry(event:wx.CommandEvent) = {
	}
	PasswordEntry(event:wx.CommandEvent) = {
	}
	NumericEntry(event:wx.CommandEvent) = {
	}
	FileOpen(event:wx.CommandEvent) = {
	}
	FileOpen2(event:wx.CommandEvent) = {
	}
	FilesOpen(event:wx.CommandEvent) = {
	}
	FileSave(event:wx.CommandEvent) = {
	}
	FileOpenGeneric(event:wx.CommandEvent) = {
	}
	FilesOpenGeneric(event:wx.CommandEvent) = {
	}
	FileSaveGeneric(event:wx.CommandEvent) = {
	}
	DirChoose(event:wx.CommandEvent) = {
	}
	DirChooseNew(event:wx.CommandEvent) = {
	}
	GenericDirChoose(event:wx.CommandEvent) = {
	}
	ShowTip(event:wx.CommandEvent) = {
	}
	ModalDlg(event:wx.CommandEvent) = {
	}
	ModelessDlg(event:wx.CommandEvent) = {
	}
	DlgCenteredScreen(event:wx.CommandEvent) = {
	}
	DlgCenteredParent(event:wx.CommandEvent) = {
	}
	ShowProgress(event:wx.CommandEvent) = {
	}
	ShowSimpleAboutDialog(event:wx.CommandEvent) = {
	}
	ShowFancyAboutDialog(event:wx.CommandEvent) = {
	}
	ShowFullAboutDialog(event:wx.CommandEvent) = {
	}
	ShowCustomAboutDialog(event:wx.CommandEvent) = {
	}
	ShowBusyInfo(event:wx.CommandEvent) = {
	}
	ShowFindDialog(event:wx.CommandEvent) = {
	}
	ShowReplaceDialog(event:wx.CommandEvent) = {
	}
	OnFindDialog(event:wx.FindDialogEvent) = {
	}
	ChooseColourGeneric(event:wx.CommandEvent) = {
	}
	ChooseFontGeneric(event:wx.CommandEvent) = {
	}
	OnPropertySheet(event:wx.CommandEvent) = {
	}
	OnRequestUserAttention(event:wx.CommandEvent) = {
	}
	OnExit(event:wx.CommandEvent) = {
	}
	DoDirChoose(style:number) = {
	}
}

// ----------------------------------------------------------------------------
// MyCanvas
// ----------------------------------------------------------------------------

MyCanvas = class(wx.ScrolledWindow) {
	__init__(parent:wx.Window) = {|parent, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.NO_FULL_REPAINT_ON_RESIZE|
	}
	OnPaint(event:wx.PaintEvent) = {
	}
};

// ----------------------------------------------------------------------------
// MyModelessDialog
// ----------------------------------------------------------------------------

MyModelessDialog = class(wx.Dialog) {
	__init__(parent:wx.Window) = {
	}
	OnButton(event:wx.CommandEvent) = {
	}
	OnClose(event:wx.CloseEvent) = {
	}
}

// ----------------------------------------------------------------------------
// MyModalDialog
// ----------------------------------------------------------------------------

MyModalDialog = class(wx.Dialog) {
	__init__(parent:wx.Window) = {
		self.m_btnModal = nil
		self.m_btnModeless = nil
		self.m_btnDelete = nil
	}
	OnButton(event:wx.CommandEvent) = {
	}
}

// ----------------------------------------------------------------------------
// SettingsDialog
// ----------------------------------------------------------------------------

SettingsDialog = class(wx.PropertySheetDialog) {
	[
		ID_SHOW_TOOLTIPS,
		ID_AUTO_SAVE,
		ID_AUTO_SAVE_MINS,
		ID_LOAD_LAST_PROJECT,
		ID_APPLY_SETTINGS_TO,
		ID_BACKGROUND_STYLE,
		ID_FONT_SIZE
	] = 100..
	__init__(parent:wx.Window, dialogType:number) = {
		self.m_imageList = nil
	}
	CreateGeneralSettingsPage(parent:wx.Window) = {
	}
	CreateAestheticSettingsPage(parent:wx.Window) = {
	}
};

wx.IMPLEMENT_APP(MyApp)
