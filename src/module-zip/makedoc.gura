#!/usr/bin/env gura
import(markdown)
import(zip)

text = R'''
# zip Module

The `zip` module provides measures to read/write ZIP files.

Below is an example to reads entries from an archive file:

    import(zip)
    zip.reader('foo.zip') {|r|
        println(r.entries():*stat:*filename)
    }

Below is an exapmple to create a ZIP archive file:

    import(zip)
    zip.writer('foo.zip') {|w|
        w.add('file1.txt')
        w.add('file2.txt')
        w.add('file3.txt')
        w.close()
    }		

## zip.reader Class

### Function to Create Instance

${markdown.funcdoc(
zip.reader
)}

### Method

${markdown.funcdoc(
zip.reader.entry
zip.reader.entries
)}

## zip.writer Class

### Function to Create Instance

${markdown.funcdoc(
zip.writer
)}

### Method

${markdown.funcdoc(
zip.writer.add
zip.writer.close
)}
'''.template().render()

write(doc:markdown.document) = {
	doc << text
	doc
}

if (__name__ == '__main__') {
	write(markdown.document()).render@html(sys.stdout)
}
