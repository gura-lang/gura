#!/usr/bin/env gura
import(markdown)
import(zip)

text = R'''
# zip Module

The `zip` module provides measures to read/write ZIP files.

Below is an example to reads entries from an archive file:

    import(zip)
    zip.reader('foo.zip') {|r|
        println(r.entries():*stat:*filename)
    }

Below is an exapmple to create a ZIP archive file:

    import(zip)
    zip.writer('foo.zip') {|w|
        w.add('file1.txt')
        w.add('file2.txt')
        w.add('file3.txt')
        w.close()
    }		
'''

write(doc:markdown.document) = {
	doc << text
	doc << R'''
	## zip.reader Class
	'''
	doc << [
		zip.reader
		zip.reader.entry
		zip.reader.entries
	]
	doc << R'''
	## zip.writer Class
	'''
	doc << [
		zip.writer
		zip.writer.add
		zip.writer.close
	]
	doc
}

if (__name__ == '__main__') {
	write(markdown.document()).render@html(sys.stdout)
}
