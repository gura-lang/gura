#!/usr/bin/env gura
import(moddoc)
import(zip)

text@en = R'''
# zip Module

The `zip` module provides measures to read/write ZIP files.

Below is an example to reads entries from an archive file:

    import(zip)
    zip.reader('foo.zip') {|r|
        println(r.entries():*stat:*filename)
    }

Below is an exapmple to create a ZIP archive file:

    import(zip)
    zip.writer('foo.zip') {|w|
        w.add('file1.txt')
        w.add('file2.txt')
        w.add('file3.txt')
        w.close()
    }		

## zip.reader Class

### Function to Create Instance

${moddoc.funcdoc(`en
zip.reader
)}

### Method

${moddoc.funcdoc(`en
zip.reader.entry
zip.reader.entries
)}

## zip.writer Class

### Function to Create Instance

${moddoc.funcdoc(`en
zip.writer
)}

### Method

${moddoc.funcdoc(`en
zip.writer.add
zip.writer.close
)}


## Thanks

This module uses zlib and bzip2 library which are distributed in the following sites:

- [http://zlib.net/](http://zlib.net/)
- [http://www.bzip.org/](http://www.bzip.org/)
'''.template().render()

moddoc.register(locals(), %{`en => text@en})
