#!/usr/bin/env gura
import(moddoc)
import(zip)

text@en = R'''
# zip Module

The `zip` module provides measures to read/write ZIP files.

Below is an example to reads entries from an archive file:

    import(zip)
    zip.reader('foo.zip') {|r|
        println(r.entries():*stat:*filename)
    }

Below is an exapmple to create a ZIP archive file:

    import(zip)
    zip.writer('foo.zip') {|w|
        w.add('file1.txt')
        w.add('file2.txt')
        w.add('file3.txt')
        w.close()
    }		

## zip.reader Class

### Constructor

${moddoc.reference(`en
zip.reader
)}

### Method

${moddoc.reference(`en
zip.reader.entry
zip.reader.entries
)}

## zip.writer Class

### Constructor

${moddoc.reference(`en
zip.writer
)}

### Method

${moddoc.reference(`en
zip.writer.add
zip.writer.close
)}


## zip.stat Class

### Property

<table>
<tr><th>Property</th><th>Type</th><th>R/W</th><th>Explanation</th></tr>

<tr><td><code>filename</code></td><td><code>string</code></td><td>R</td>
<td> </td></tr>

<tr><td><code>comment</code></td><td><code>string</code></td><td>R</td>
<td> </td></tr>

<tr><td><code>mtime</code></td><td><code>datetime</code></td><td>R</td>
<td> </td></tr>

<tr><td><code>crc32</code></td><td><code>number</code></td><td>R</td>
<td> </td></tr>

<tr><td><code>compression_method</code></td><td><code>number</code></td><td>R</td>
<td> </td></tr>

<tr><td><code>size</code></td><td><code>number</code></td><td>R</td>
<td> </td></tr>

<tr><td><code>compressed_size</code></td><td><code>number</code></td><td>R</td>
<td> </td></tr>

<tr><td><code>attributes</code></td><td><code>number</code></td><td>R</td>
<td> </td></tr>

</table>


## Thanks

This module uses zlib and bzip2 library which are distributed in the following sites:

- [http://zlib.net/](http://zlib.net/)
- [http://www.bzip.org/](http://www.bzip.org/)
'''.embed()

moddoc.register(locals(), %{`en => text@en})
