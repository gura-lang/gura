#!/usr/bin/env gura
import(sdl2, sdl)

App = class {
	MainLoop(caption:string:nil, width:number, height:number, flags:number) = {
		sdl.Init(sdl.INIT_VIDEO)
		this.window = sdl.CreateWindow(caption || path.filename(sys.argv[0]),
							sdl.WINDOWPOS_CENTERED, sdl.WINDOWPOS_CENTERED,
							width, height, flags | sdl.WINDOW_OPENGL)
		this.context = sdl.GL_CreateContext(this.window)
		sdl.GL_SetAttribute * [
			[sdl.GL_RED_SIZE, 5], [sdl.GL_GREEN_SIZE, 5], [sdl.GL_BLUE_SIZE, 5],
			[sdl.GL_DEPTH_SIZE, 32], [sdl.GL_DOUBLEBUFFER, 0]
		]
		this.OnInit()
		this.OnResize(width, height)
		repeat {
			event = sdl.PollEvent()
			if (!event) {
				// nothing to do
			} elsif (event.type == sdl.WINDOWEVENT) {
				println(event)
				if (event.event == sdl.WINDOWEVENT_SHOWN) {
					this.OnDraw()
					this.SwapWindow()
				} elsif (event.event == sdl.WINDOWEVENT_RESIZED) {
					this.OnResize(event.w, event.h)
					this.OnDraw()
					this.SwapWindow()
				}
			} elsif (event.type == sdl.QUIT) {
				break
			} elsif (event.type == sdl.KEYDOWN) {
				(event.sym == sdl.K_ESCAPE) && break
				this.OnKeyDown(event)
			} elsif (event.type == sdl.KEYUP) {
				this.OnKeyUp(event)
			} elsif (event.type == sdl.MOUSEMOTION) {
				this.OnMouseMotion(event)
			} elsif (event.type == sdl.MOUSEBUTTONDOWN) {
				this.OnMouseButtonDown(event)
			} elsif (event.type == sdl.MOUSEBUTTONUP) {
				this.OnMouseButtonUp(event)
			}
			this.OnIdle()
		}
	}
	SwapWindow() = sdl.GL_SwapWindow(this.window)
	CheckKeyState(key:number) = sdl.CheckKeyState(key)
	OnInit() = {}
	OnIdle() = {}
	OnResize(width:number, height:number) = {}
	OnDraw() = {}
	OnKeyDown(event:sdl.Event) = {}
	OnKeyUp(event:sdl.Event) = {}
	OnMouseMotion(event:sdl.Event) = {}
	OnMouseButtonDown(event:sdl.Event) = {}
	OnMouseButtonUp(event:sdl.Event) = {}
}

if (__name__ == '__main__') {
	import(opengl) {*}
	AppEx = class(App) {
		OnInit() = {
		}
		OnIdle() = {
		}
		OnResize(width:number, height:number) = {
			println('OnResize')
		}
		OnDraw() = {
			println('OnDraw')
			glClearColor(0, 0, 1, 1)
			glClear(GL_COLOR_BUFFER_BIT)
			glFlush()
		}
		OnKeyDown(event:sdl.Event) = {
			println(event)
		}
		OnKeyUp(event:sdl.Event) = {
			println(event)
		}
		OnMouseMotion(event:sdl.Event) = {
			println(event)
		}
		OnMouseButtonDown(event:sdl.Event) = {
			println(event)
		}
		OnMouseButtonUp(event:sdl.Event) = {
			println(event)
		}
	}
	app = AppEx()
	app.MainLoop('sdlutil', 400, 300, sdl.WINDOW_RESIZABLE)
	sdl.Quit()
}
