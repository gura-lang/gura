#!/usr/bin/env gura
// Answer to the question: https://codeiq.jp/ace/araki/q1171

friendLink = %{
	`A => [`B, `C, `D, `E, `F, `G, `J]
	`B => [`A, `E, `G, `H]
	`C => [`A, `D, `E, `G, `J]
	`D => [`A, `C, `H, `I]
	`E => [`A, `B, `C, `G, `H, `J]
	`F => [`A, `G, `I]
	`G => [`A, `B, `C, `E, `F]
	`H => [`B, `D, `E, `I]
	`I => [`D, `F, `H]
	`J => [`A, `C, `E]
}

Person = class {
	__init__(person:symbol):map = {
		this.person = person
		friends = friendLink[person]
		excludes = list(friends, person)
		friendsOfFriend = set(friendLink.get(friends).flat())
		this.friendsOfFriendUniq:public = friendsOfFriend.filter(&{!($friend in excludes)}):list
		this.cntFriendsOfFriendUniq:public = this.friendsOfFriendUniq.len()
	}
	__str__() = {
		format('%s: number of friends of friends = %d (%s)',
			   this.person, this.cntFriendsOfFriendUniq, this.friendsOfFriendUniq.join(', '))
	}
}
people = Person(friendLink.keys())
println(people.sort(`descend, people:*cntFriendsOfFriendUniq):list)
