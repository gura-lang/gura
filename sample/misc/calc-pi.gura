#!/usr/bin/env gura
// pi calculation by Gibbons algorithm
import(gmp)

generate_pi() = {
	[q, r, t, i] = [1L, 180L, 60L, 2L]
	repeat():iter {
		u = 3 * (3 * i + 1) * (3 * i + 2)
		y = gmp.mpz((q * (27 * i - 12) + 5 * r) / (5 * t))
		[q, r] = [
			10 * q * i * (2 * i - 1)
			10 * u * (q * (5 * i - 2) + r - y * t)
		]
		t *= u
		i += 1
		y
	}
}
nBlocks = 0
println('3')
generate_pi().offset(1).head(10000).fold(10) {|n|
	printf('%d', n)
	nBlocks += 1
	if (nBlocks == 10) {
		println()
		nBlocks = 0
	} else {
		printf(' ')
	}
}
