#!/usr/bin/env gura
import(sdl2, sdl)
import(gif)
import(jpeg)
import(freetype)

I(filename:string) = path.join(sys.datadir, 'sample/resource', filename)

sdl.Init(sdl.INIT_EVERYTHING)
[wdScreen, htScreen] = [640, 480]
window = sdl.CreateWindow(path.filename(sys.argv[0]),
	sdl.WINDOWPOS_CENTERED, sdl.WINDOWPOS_CENTERED, wdScreen, htScreen, 0)
renderer = sdl.CreateRenderer(window, -1, 0)
wdImage = 140
//imageBg = image(I('Winter.jpg'), `rgb).resize(wdScreen, htScreen)
imageText = image(`rgba, wdScreen, htScreen)
imagesL = gif.content(I('chicken-anim.gif'), `rgba).images::resize(wdImage)
htImageMax = imagesL:*height.max()
imagesR = imagesL::flip(`horz)
xStep = wdImage / 10
font = freetype.font(I('mplus-1p-regular.ttf'))
font.height = 32, font.color = `white, font.mode = `alpha
Chicken = class {
	__init__(x:number, y:number, dir:symbol):map = {
		[this.x, this.y] = [x, y]
		if (dir == `right) { this.turnRight() } else { this.turnLeft() }
	}
	turnRight():void = {
		this.xDir = xStep
		this.imageIter = imagesR.cycle()
	}
	turnLeft():void = {
		this.xDir = -xStep
		this.imageIter = imagesL.cycle()
	}
	doAction(renderer:sdl.Renderer):void = {
		image = this.imageIter.next()
		sdl.CreateTextureFromSurface(renderer, image) {|texture|
			sdl.RenderCopy(renderer, texture, nil, sdl.Rect(
					this.x, this.y - image.height, image.width, image.height))
		}
		this.x += this.xDir
		if (this.x + wdImage > wdScreen) { this.turnLeft() }
		if (this.x < 0) { this.turnRight() }
	}
}

chickens = Chicken(
		rands(wdScreen - wdImage),
		rands(htScreen - htImageMax) + htImageMax,
		cond(rands() < .5, `left, `right)).head(3):list

timePrev = sdl.GetTicks()
repeat {
	timeCur = sdl.GetTicks()
	if (timePrev > timeCur || timeCur > timePrev + 100) {
		//sdl.CreateTextureFromSurface(renderer, imageBg) {|texture|
		//	sdl.RenderCopy(renderer, texture, nil, nil)
		//}
		sdl.SetRenderDrawColor(renderer, 0, 64, 0, 255)
		sdl.RenderClear(renderer)
		imageText.clear()
		imageText.drawtext(font, 10, 50, 'Chickens: %d' % chickens.len())
		sdl.CreateTextureFromSurface(renderer, imageText) {|texture|
			sdl.RenderCopy(renderer, texture, nil, nil)
		}
		chickens::doAction(renderer)
		sdl.RenderPresent(renderer)
		timePrev = timeCur
	}
	event = sdl.WaitEventTimeout(10)	// 10msec
	if (!event) {
		// nothing to do
	} elsif (event.type == sdl.QUIT) {
		break
	} elsif (event.type == sdl.KEYDOWN) {
		(event.sym == sdl.K_ESCAPE) && break
	} elsif (event.type == sdl.MOUSEBUTTONDOWN) {
		dir = choose(event.button, `left, `left, `right, `right)
		chickens.add(Chicken(event.x, event.y, dir))
	}
}
