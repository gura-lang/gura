#!/usr/bin/env gura
import(zip)
import(tar)

main() = {
	if (sys.argv.len() < 3) {
		R'''
		usage: gura archive.gura cmd file [args..]
		cmd:
		  c  create a new archive file
		  x  extract all entries
		  l  list all entries
		'''.template().render(sys.stderr)
		sys.exit(1)
	}
	[cmd, fileNameArc] = sys.argv[1, 2]
	if (cmd == 'c') {
		if (sys.argv.len() < 4) {
			sys.stderr.println('specify files to append')
			sys.exit(1)
		}
		DoCreate(fileNameArc, sys.argv[3..])
	} elsif (cmd == 'x') {
		DoExtract(fileNameArc)
	} elsif (cmd == 'l') {
		DoList(fileNameArc)
	} else {
		sys.stderr.println('unknown command ', cmd)
	}
}

RegulateName(filename:string):map = {
	filename.chop('/', '\\').replace('/', path.sep_file).replace('\\', path.sep_file)
}

DoCreate(fileNameArc:string, patterns[]:string) = {
	writer = PrepareWriter(fileNameArc)
	patterns.each() {|pattern|
		fileNames = path.glob(pattern):file
		fileNames.each {|fileName|
			println(fileName)
			writer.add(fileName, fileName)
		}
	}
	writer.close()
}

DoExtract(fileNameArc:string) = {
	reader = PrepareReader(fileNameArc)
	reader.entries {|entry|
		println('Extracting  ', RegulateName(entry.stat.filename))
		[dirName, fileName] = path.split(entry.stat.filename)
		!path.exists(dirName) && fs.mkdir(dirName):tree
		!fileName.isempty() && stream.copy(entry, entry.stat.filename):finalize
	}
}

DoList(fileNameArc:string) = {
	reader = PrepareReader(fileNameArc)
	println(RegulateName(reader.entries():*stat:*filename))
}

PrepareReader(fileNameArc:string) = {
	if (fileNameArc.endswith(['.tar.gz', '.tar.bz2', '.tar']).or()) {
		reader = tar.reader(fileNameArc)
	} elsif (fileNameArc.endswith('.zip')) {
		reader = zip.reader(fileNameArc)
	} else {
		sys.stderr.println('unknown archive type')
		sys.exit(1)
	}
	reader
}

PrepareWriter(fileNameArc:string) = {
	if (fileNameArc.endswith(['.tar.gz', '.tar.bz2', '.tar']).or()) {
		writer = tar.writer(fileNameArc)
	} elsif (fileNameArc.endswith('.zip')) {
		writer = zip.writer(fileNameArc)
	} else {
		sys.stderr.println('unknown archive type')
		sys.exit(1)
	}
	writer
}

main()
