#!/usr/bin/env gura
import(argopt)

GeneratePassword(lenWord:number) = {
	digits = chr(ord('0') .. ord('9')):list
	alphasUpper = chr(ord('A') .. ord('Z')):list
	alphasLower = chr(ord('a') .. ord('z')):list
	chars = []
	chars.append(digits).append(alphasUpper).append(alphasLower)
	result = []
	result.append(digits[rand(digits.len())])
	result.append(alphasUpper[rand(alphasUpper.len())])
	result.append(alphasLower[rand(alphasLower.len())])
	result.append(chars[rands(chars.len(), lenWord - 3)])
	result.shuffle().join()
}

main() = {
	argopt.Parser {|p|
		try {
			[cfg, argv] = p.parse(sys.argv)
		} catch {|e|
			println(e.text)
			sys.exit(1)
		}
	}
	try {
		lenWord = if (argv.len() < 1) { 8 } else { argv[0].tonumber():raise:strict }
	} catch {
		sys.stderr.println('number must be specified for length of password')
		sys.exit(1)
	}
	if (lenWord < 3) {
		sys.stderr.println('length of password must be more than 3')
		sys.exit(1)
	}
	try {
		nWords = if (argv.len() < 2) { 1 } else { argv[1].tonumber():raise:strict }
	} catch {
		sys.stderr.println('number must be specified for number of password')
		sys.exit(1)
	}
	randseed(os.clock())
	repeat (nWords) {
		println(GeneratePassword(lenWord))
	}
}

main()
