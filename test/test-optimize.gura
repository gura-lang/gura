#!/usr/bin/env gura
import(helper.test) {*}

testcase {
	tests = [
		// neg
		`(-4)
		`(-(-x))
		`(-(-(-x)))
		`(-(-(-(-x))))
		`(-(-(-(-(-x)))))
		// plus
		`(3 + 4)
		`(0 + y)
		`(x + 0)
		`(x + (-y))
		`(x + x)
		`(x + x * 1)
		`(x + x * 2)
		`(x + x * 3)
		`(x + x * y)
		`(x * 1 + x)
		`(x * 2 + x)
		`(x * 3 + x)
		`(x * y + x)
		`(x * 1 + x * 1)
		`(x * 2 + x * 2)
		`(x * 3 + x * 3)
		`(x * 2 + x * 5)
		`(x * 5 + x * 2)
		`(x * y + x * 5)
		// minus
		`(3 - 4)
		`(0 - y)
		`(x - 0)
		`(x - (-y))
		`(x - x)
		`(x - x * 1)
		`(x - x * 2)
		`(x - x * 3)
		`(x - x * y)
		`(x * 1 - x)
		`(x * 2 - x)
		`(x * 3 - x)
		`(x * y - x)
		`(x * 1 - x * 1)
		`(x * 2 - x * 2)
		`(x * 3 - x * 3)
		`(x * 2 - x * 5)
		`(x * 5 - x * 2)
		`(x * y - x * 5)
		// multiply
		`(3 * 4)
		`(x * 0)
		`(0 * y)
		`(1 * y)
		`(x * 1)
		`(-1 * y)
		`(x * (-1))
		`((-x) * (-y))
		`((-x) * y)
		`(-x * (-y))
		`(x * x)
		`(x * x ** 1)
		`(x * x ** 2)
		`(x * x ** 3)
		`(x * x ** y)
		`(x ** 1 * x)
		`(x ** 2 * x)
		`(x ** 3 * x)
		`(x ** y * x)
		`(x ** 1 * x ** 1)
		`(x ** 2 * x ** 2)
		`(x ** 3 * x ** 3)
		`(x ** 2 * x ** 5)
		`(x ** 5 * x ** 2)
		`(x ** y * x ** 5)
		// divide
		`(3 / 4)
		`(0 / y)
		`(x / 1)
		`(x / (-1))
		`((-x) / (-y))
		`((-x) / y)
		`(-x / (-y))
		`(x / x)
		`(x / x ** 1)
		`(x / x ** 2)
		`(x / x ** 3)
		`(x / x ** y)
		`(x ** 1 / x)
		`(x ** 2 / x)
		`(x ** 3 / x)
		`(x ** y / x)
		`(x ** 1 / x ** 1)
		`(x ** 2 / x ** 2)
		`(x ** 3 / x ** 3)
		`(x ** 2 / x ** 5)
		`(x ** 5 / x ** 2)
		`(x ** y / x ** 5)
		// power
		`(3 ** 4)
		`(0 ** y)
		`(1 ** y)
		`(x ** 0)
		`(x ** 1)
		`(x ** (-1))
		`((-x) ** 1)
		`((-x) ** 2)
		`((-x) ** 3)
		`((-x) ** 4)
		`((-x) ** 5)
		`((-x) ** 6)
		`(x ** 3 ** 4)
		`((-x) ** 3 ** 4)
	]
	printf('%s -> %s\n', tests:*tostring(), math.optimize(tests):*tostring())
}
