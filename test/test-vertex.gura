#!/usr/bin/env gura
import(helper.test) {*}

testcase('constructor') {
	tester(`vertex(30, 40))
	tester(`vertex(30, 40, 50))
}
testcase('operator') {
	v1 = vertex(30, 40, 50)
	v2 = vertex(5, 6, 7)
	tester(`v1)
	tester(`v2)
	tester(`(-v1))
	tester(`(v1 + v2))
	tester(`(v1 - v2))
	tester(`(v1 / 4))
	tester(`(v1 * 4))
}
testcase('vertex.tolist()') {
	v = vertex(30, 40, 50)
	tester(`v.tolist())
}
testcase('vertex.translate()') {
	tester(`vertex(3, 4, 5).translate(1, 2, 3))
	tester(`vertex(3, 4, 5).translate(-3, -2, -1))
}
testcase('vertex.rotate@X()') {
	tester(`vertex(3, 4, 5).rotate@x(math.pi / 2))
	tester(`vertex(3, 4, 5).rotate@y(math.pi / 2))
	tester(`vertex(3, 4, 5).rotate@z(math.pi / 2))
	tester(`vertex(3, 4, 5).rotate@x(90):deg)
	tester(`vertex(3, 4, 5).rotate@y(90):deg)
	tester(`vertex(3, 4, 5).rotate@z(90):deg)
}
testcase('vertex.normal') {
	tester(`vertex.normal(vertex(1, 1, 2), vertex(0, -2, 1), vertex(3, -1, 0)))
	tester(`vertex.normal(vertex(1, 1, 2), vertex(0, -2, 1), vertex(3, -1, 0)):unit)
	tester(`vertex.normal(vertex.zero, vertex.zero, vertex.zero))
	tester(`vertex.normal(vertex.zero, vertex.zero, vertex.zero):unit)
}
testcase('vertex.cross') {
	tester(`vertex.cross(vertex(2, -1, 3), vertex(1, -2, -3)))
	tester(`vertex.cross(vertex(1, 2, -4), vertex(2, 3, 1)))
}
testcase('vertex.inner') {
	tester(`vertex.inner(vertex(2, -1, 3), vertex(6, -2, 4)))
	tester(`vertex.inner(vertex(3, -1, 3), vertex(-3, -5, 2)))
}
