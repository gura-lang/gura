#!/bin/bash
cases=
cases="$cases application"
cases="$cases binary"
cases="$cases block"
cases="$cases codec"
cases="$cases color"
cases="$cases complex"
cases="$cases csv"
cases="$cases datetime"
cases="$cases declaration"
cases="$cases dict"
cases="$cases diff"
cases="$cases error"
cases="$cases expr"
cases="$cases filter"
cases="$cases formatter"
cases="$cases fraction"
cases="$cases fs"
cases="$cases function"
cases="$cases hash"
cases="$cases image"
cases="$cases list-iterator"
cases="$cases map"
cases="$cases markdown"
cases="$cases math"
cases="$cases matrix"
#cases="$cases midi"
cases="$cases module"
cases="$cases object"
cases="$cases opengl"
cases="$cases operator"
cases="$cases optimize"
cases="$cases path"
cases="$cases re"
cases="$cases repeater"
cases="$cases sqlite3"
cases="$cases stream"
cases="$cases string"
cases="$cases template"
cases="$cases value"
cases="$cases xml"
cases="$cases xhtml"
cases="$cases yaml"

if [ $# -eq 0 ]; then
	echo "usage: tester all/casename [genscript/update]"
	exit
fi
if [ "$1" != "all" ]; then
	cases="$1"
fi
if [ $# -eq 1 ]; then
	for case in $cases
	do
		echo "$case"
		gura test-$case.gura > result/test-$case.result.txt
		diff -u --strip-trailing-cr result/test-$case.sample.txt result/test-$case.result.txt
	done	
elif [ "$2" = "genscript" ]; then
	for case in $cases
	do
		echo "genscript: $case"
		gura genscript.gura --eval test-$case.gura > result/test-$case.result.txt
		diff -u --strip-trailing-cr result/test-$case.sample.txt result/test-$case.result.txt
	done	
elif [ "$2" = "update" ]; then
	for case in $cases
	do
		echo "update: $case"
		gura test-$case.gura > result/test-$case.sample.txt
	done
fi
