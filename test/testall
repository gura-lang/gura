#!/bin/bash
cases=
cases="$cases application.gura"
cases="$cases binary.gura"
cases="$cases block.gura"
cases="$cases codec.gura"
cases="$cases color.gura"
cases="$cases complex.gura"
cases="$cases csv.gura"
cases="$cases datetime.gura"
cases="$cases declaration.gura"
cases="$cases dict.gura"
cases="$cases diff.gura"
cases="$cases error.gura"
cases="$cases expr.gura"
cases="$cases filter.gura"
cases="$cases formatter.gura"
cases="$cases fraction.gura"
cases="$cases fs.gura"
cases="$cases function.gura"
cases="$cases hash.gura"
cases="$cases image.gura"
cases="$cases list-iterator.gura"
cases="$cases map.gura"
cases="$cases markdown.gura"
cases="$cases math.gura"
cases="$cases matrix.gura"
#cases="$cases midi.gura"
cases="$cases module.gura"
cases="$cases object.gura"
cases="$cases opengl.gura"
cases="$cases operator.gura"
cases="$cases optimize.gura"
cases="$cases path.gura"
cases="$cases re.gura"
cases="$cases repeater.gura"
cases="$cases sqlite3.gura"
cases="$cases stream.gura"
cases="$cases string.gura"
cases="$cases template.gura"
cases="$cases value.gura"
cases="$cases xml.gura"
cases="$cases xhtml.gura"
cases="$cases yaml.gura"

if [ "$1" = "" ]; then
	for case in $cases
	do
		echo $case
		gura test-$case.gura > result/test-$case.result.txt
		diff -u --strip-trailing-cr result/test-$case.sample.txt result/test-$case.result.txt
	done	
elif [ "$1" = "genscript" ]; then
	for case in $cases
	do
		echo $case
		gura genscript.gura --eval test-$case.gura > result/test-$case.result.txt
		diff -u --strip-trailing-cr result/test-$case.sample.txt result/test-$case.result.txt
	done	
elif [ "$1" = "update" ]; then
	for case in $cases
	do
		echo $case
		gura test-$case.gura > result/test-$case.sample.txt
	done	
else
	case="$1"
	echo $case
	gura test-$case.gura > result/test-$case.result.txt
	diff -u --strip-trailing-cr result/test-$case.sample.txt result/test-$case.result.txt
fi
