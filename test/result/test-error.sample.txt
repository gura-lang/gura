======== error test ========
======== #1 ========

 [0,0,0] [0,0,1] [0,0,2] [0,1,0] [0,1,1] [0,1,2] [0,2,0] [0,2,1] [0,2,2] [1,0,0] [1,0,1] [1,0,2] [1,1,0] [1,1,1] [1,1,2] [1,2,0] [1,2,1] [1,2,2] [2,0,0] [2,0,1] [2,0,2]catch(IteratorError)
end-of-function
 [0,0,0] [0,0,1] [0,0,2] [0,1,0] [0,1,1] [0,1,2] [0,2,0] [0,2,1] [0,2,2] [1,0,0] [1,0,1] [1,0,2] [1,1,0] [1,1,1] [1,1,2] [1,2,0] [1,2,1] [1,2,2] [2,0,0] [2,0,1] [2,0,2]catch()
end-of-function
 [0,0,0] [0,0,1] [0,0,2] [0,1,0] [0,1,1] [0,1,2] [0,2,0] [0,2,1] [0,2,2] [1,0,0] [1,0,1] [1,0,2] [1,1,0] [1,1,1] [1,1,2] [1,2,0] [1,2,1] [1,2,2] [2,0,0] [2,0,1] [2,0,2] [2,1,0] [2,1,1] [2,1,2] [2,2,0] [2,2,1] [2,2,2]else
end-of-function

======== #2 ========

  1  3  5  7  9
end-of-function

======== #3 ========

  0  1  2  3  4  5  6  7  8
end-of-function

======== #4 ========

try

======== #5 ========

expected error occurs: TypeError: variable 'p' cannot take list value in 'p:Person'

======== #6 ========

ValueError detected: ValueError: undefined symbol 'a'
other error detected: IndexError: index is out of range
no error

======== #7 ========

catch(IndexError) .. IndexError: intentional error for handling test
catch(ValueError) .. ValueError: intentional error for handling test
catch(IOError) .. IOError: intentional error for handling test
catch(SystemError, CodecError) .. SystemError: intentional error for handling test
catch(SystemError, CodecError) .. CodecError: intentional error for handling test
catch() .. AttributeError: intentional error for handling test
else()

======== #8 ========

ValueError: undefined symbol 'b1'
  [1] for (x in b1 .. 10) { b }
ValueError: undefined symbol 'b'
  [1] x[b]
ValueError: undefined symbol 'b'
  [1] b
  [2] try { a } catch { b }
ValueError: undefined symbol 'a'
  [1] a
  [2] scope { a }
ValueError: invalid value type
  [1] 3
  [2] xml.element('hoge') { 3 }
TypeError: not enough arguments
  [1] block(1, 2, 3)
  [2] f {|a, b, c, d| println('hello') }
ValueError detected: ValueError: unhandled error
