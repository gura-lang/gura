======== #1 declaration ========

gmp.mpz(0) .. 0L
gmp.mpq(0) .. 0Lr
gmp.mpf(0) .. 0.L
0L .. 0L
0Lr .. 0Lr
0.L .. 0.L
gmp.mpz(1) .. 1L
gmp.mpq(1) .. 1Lr
gmp.mpf(1) .. 1.L
1L .. 1L
1Lr .. 1Lr
1.L .. 1.L
gmp.mpz(-1) .. -1L
gmp.mpq(-1) .. -1Lr
gmp.mpf(-1) .. -1.L
-1L .. -1L
-1Lr .. -1Lr
-1.L .. -1.L
gmp.mpz(314) .. 314L
gmp.mpq(314) .. 314Lr
gmp.mpf(314) .. 314.L
314L .. 314L
314Lr .. 314Lr
314.L .. 314.L
gmp.mpz('314') .. 314L
gmp.mpq('314') .. 314Lr
gmp.mpf('314') .. 314.L
'314'.mpz() .. 314L
'314'.mpq() .. 314Lr
'314'.mpf() .. 314.L
3.14L .. 3.14L
123456789012345678901234567890123456789012345678901234567890L .. 123456789012345678901234567890123456789012345678901234567890L
123456789012345678901234567890123456789012345678901234567890Lr .. 123456789012345678901234567890123456789012345678901234567890Lr
0777777 .. 262143
0b10101010 .. 170
0xffffffff .. 4294967295

======== #2 generic test for unary operators ========

gmp.mpz
+3L .. 3L
-3L .. -3L
~3L .. -4L
!3L .. false
..3L .. TypeError: can't evaluate (.. gmp.mpz)
?3L .. TypeError: can't evaluate (? gmp.mpz)
gmp.mpf
+3.L .. 3.L
-3.L .. -3.L
~3.L .. TypeError: can't evaluate (~ gmp.mpf)
!3.L .. false
..3.L .. TypeError: can't evaluate (.. gmp.mpf)
?3.L .. TypeError: can't evaluate (? gmp.mpf)
gmp.mpq
+3Lr .. 3Lr
-3Lr .. -3Lr
~3Lr .. TypeError: can't evaluate (~ gmp.mpq)
!3Lr .. false
..3Lr .. TypeError: can't evaluate (.. gmp.mpq)
?3Lr .. TypeError: can't evaluate (? gmp.mpq)

======== #3 generic test for binary operators ========

number, number
3 + 4 .. 7
3 - 4 .. -1
3 * 4 .. 12
3 / 4 .. 0.75
3 % 4 .. 3
3 ** 4 .. 81
3 == 4 .. false
3 < 4 .. true
3 > 4 .. false
3 <= 4 .. true
3 >= 4 .. false
3 <=> 4 .. -1
3 in 4 .. false
3 & 4 .. 0
3 | 4 .. 7
3 ^ 4 .. 7
3 << 4 .. 48
3 >> 4 .. 0
3 || 4 .. 3
3 && 4 .. 4
3 => 4 .. [3, 4]
number, gmp.mpz
3 + 4L .. 7L
3 - 4L .. -1L
3 * 4L .. 12L
3 / 4L .. 0.75L
3 % 4L .. 3L
3 ** 4L .. TypeError: can't evaluate (number ** gmp.mpz)
3 == 4L .. false
3 < 4L .. true
3 > 4L .. false
3 <= 4L .. true
3 >= 4L .. false
3 <=> 4L .. -1
3 in 4L .. false
3 & 4L .. 0L
3 | 4L .. 7L
3 ^ 4L .. 7L
3 << 4L .. TypeError: can't evaluate (number << gmp.mpz)
3 >> 4L .. TypeError: can't evaluate (number >> gmp.mpz)
3 || 4L .. 3
3 && 4L .. 4L
3 => 4L .. [3, 4L]
number, gmp.mpf
3 + 4.L .. 7.L
3 - 4.L .. -1.L
3 * 4.L .. 12.L
3 / 4.L .. 0.75L
3 % 4.L .. TypeError: can't evaluate (number % gmp.mpf)
3 ** 4.L .. TypeError: can't evaluate (number ** gmp.mpf)
3 == 4.L .. false
3 < 4.L .. true
3 > 4.L .. false
3 <= 4.L .. true
3 >= 4.L .. false
3 <=> 4.L .. -1
3 in 4.L .. false
3 & 4.L .. TypeError: can't evaluate (number & gmp.mpf)
3 | 4.L .. TypeError: can't evaluate (number | gmp.mpf)
3 ^ 4.L .. TypeError: can't evaluate (number ^ gmp.mpf)
3 << 4.L .. TypeError: can't evaluate (number << gmp.mpf)
3 >> 4.L .. TypeError: can't evaluate (number >> gmp.mpf)
3 || 4.L .. 3
3 && 4.L .. 4.L
3 => 4.L .. [3, 4.L]
number, gmp.mpq
3 + 4Lr .. 7Lr
3 - 4Lr .. -1Lr
3 * 4Lr .. 12Lr
3 / 4Lr .. 3/4Lr
3 % 4Lr .. TypeError: can't evaluate (number % gmp.mpq)
3 ** 4Lr .. TypeError: can't evaluate (number ** gmp.mpq)
3 == 4Lr .. false
3 < 4Lr .. true
3 > 4Lr .. false
3 <= 4Lr .. true
3 >= 4Lr .. false
3 <=> 4Lr .. -1
3 in 4Lr .. false
3 & 4Lr .. TypeError: can't evaluate (number & gmp.mpq)
3 | 4Lr .. TypeError: can't evaluate (number | gmp.mpq)
3 ^ 4Lr .. TypeError: can't evaluate (number ^ gmp.mpq)
3 << 4Lr .. TypeError: can't evaluate (number << gmp.mpq)
3 >> 4Lr .. TypeError: can't evaluate (number >> gmp.mpq)
3 || 4Lr .. 3
3 && 4Lr .. 4Lr
3 => 4Lr .. [3, 4Lr]
gmp.mpz, number
3L + 4 .. 7L
3L - 4 .. -1L
3L * 4 .. 12L
3L / 4 .. 0.75L
3L % 4 .. 3L
3L ** 4 .. TypeError: can't evaluate (gmp.mpz ** number)
3L == 4 .. false
3L < 4 .. true
3L > 4 .. false
3L <= 4 .. true
3L >= 4 .. false
3L <=> 4 .. -1
3L in 4 .. false
3L & 4 .. 0L
3L | 4 .. 7L
3L ^ 4 .. 7L
3L << 4 .. 48L
3L >> 4 .. 0L
3L || 4 .. 3L
3L && 4 .. 4
3L => 4 .. TypeError: can't evaluate (gmp.mpz => number)
gmp.mpz, gmp.mpz
3L + 4L .. 7L
3L - 4L .. -1L
3L * 4L .. 12L
3L / 4L .. 0.75L
3L % 4L .. 3L
3L ** 4L .. TypeError: can't evaluate (gmp.mpz ** gmp.mpz)
3L == 4L .. false
3L < 4L .. true
3L > 4L .. false
3L <= 4L .. true
3L >= 4L .. false
3L <=> 4L .. -1
3L in 4L .. false
3L & 4L .. 0L
3L | 4L .. 7L
3L ^ 4L .. 7L
3L << 4L .. TypeError: can't evaluate (gmp.mpz << gmp.mpz)
3L >> 4L .. TypeError: can't evaluate (gmp.mpz >> gmp.mpz)
3L || 4L .. 3L
3L && 4L .. 4L
3L => 4L .. TypeError: can't evaluate (gmp.mpz => gmp.mpz)
gmp.mpz, gmp.mpf
3L + 4.L .. 7.L
3L - 4.L .. -1.L
3L * 4.L .. 12.L
3L / 4.L .. 0.75L
3L % 4.L .. TypeError: can't evaluate (gmp.mpz % gmp.mpf)
3L ** 4.L .. TypeError: can't evaluate (gmp.mpz ** gmp.mpf)
3L == 4.L .. false
3L < 4.L .. true
3L > 4.L .. false
3L <= 4.L .. true
3L >= 4.L .. false
3L <=> 4.L .. -1
3L in 4.L .. false
3L & 4.L .. TypeError: can't evaluate (gmp.mpz & gmp.mpf)
3L | 4.L .. TypeError: can't evaluate (gmp.mpz | gmp.mpf)
3L ^ 4.L .. TypeError: can't evaluate (gmp.mpz ^ gmp.mpf)
3L << 4.L .. TypeError: can't evaluate (gmp.mpz << gmp.mpf)
3L >> 4.L .. TypeError: can't evaluate (gmp.mpz >> gmp.mpf)
3L || 4.L .. 3L
3L && 4.L .. 4.L
3L => 4.L .. TypeError: can't evaluate (gmp.mpz => gmp.mpf)
gmp.mpz, gmp.mpq
3L + 4Lr .. 7Lr
3L - 4Lr .. -1Lr
3L * 4Lr .. 12Lr
3L / 4Lr .. 3/4Lr
3L % 4Lr .. TypeError: can't evaluate (gmp.mpz % gmp.mpq)
3L ** 4Lr .. TypeError: can't evaluate (gmp.mpz ** gmp.mpq)
3L == 4Lr .. false
3L < 4Lr .. true
3L > 4Lr .. false
3L <= 4Lr .. true
3L >= 4Lr .. false
3L <=> 4Lr .. -1
3L in 4Lr .. false
3L & 4Lr .. TypeError: can't evaluate (gmp.mpz & gmp.mpq)
3L | 4Lr .. TypeError: can't evaluate (gmp.mpz | gmp.mpq)
3L ^ 4Lr .. TypeError: can't evaluate (gmp.mpz ^ gmp.mpq)
3L << 4Lr .. TypeError: can't evaluate (gmp.mpz << gmp.mpq)
3L >> 4Lr .. TypeError: can't evaluate (gmp.mpz >> gmp.mpq)
3L || 4Lr .. 3L
3L && 4Lr .. 4Lr
3L => 4Lr .. TypeError: can't evaluate (gmp.mpz => gmp.mpq)
gmp.mpf, number
3.L + 4 .. 7.L
3.L - 4 .. -1.L
3.L * 4 .. 12.L
3.L / 4 .. 0.75L
3.L % 4 .. TypeError: can't evaluate (gmp.mpf % number)
3.L ** 4 .. TypeError: can't evaluate (gmp.mpf ** number)
3.L == 4 .. false
3.L < 4 .. true
3.L > 4 .. false
3.L <= 4 .. true
3.L >= 4 .. false
3.L <=> 4 .. -1
3.L in 4 .. false
3.L & 4 .. TypeError: can't evaluate (gmp.mpf & number)
3.L | 4 .. TypeError: can't evaluate (gmp.mpf | number)
3.L ^ 4 .. TypeError: can't evaluate (gmp.mpf ^ number)
3.L << 4 .. TypeError: can't evaluate (gmp.mpf << number)
3.L >> 4 .. TypeError: can't evaluate (gmp.mpf >> number)
3.L || 4 .. 3.L
3.L && 4 .. 4
3.L => 4 .. TypeError: can't evaluate (gmp.mpf => number)
gmp.mpf, gmp.mpz
3.L + 4L .. 7.L
3.L - 4L .. -1.L
3.L * 4L .. 12.L
3.L / 4L .. 0.75L
3.L % 4L .. TypeError: can't evaluate (gmp.mpf % gmp.mpz)
3.L ** 4L .. TypeError: can't evaluate (gmp.mpf ** gmp.mpz)
3.L == 4L .. false
3.L < 4L .. true
3.L > 4L .. false
3.L <= 4L .. true
3.L >= 4L .. false
3.L <=> 4L .. -1
3.L in 4L .. false
3.L & 4L .. TypeError: can't evaluate (gmp.mpf & gmp.mpz)
3.L | 4L .. TypeError: can't evaluate (gmp.mpf | gmp.mpz)
3.L ^ 4L .. TypeError: can't evaluate (gmp.mpf ^ gmp.mpz)
3.L << 4L .. TypeError: can't evaluate (gmp.mpf << gmp.mpz)
3.L >> 4L .. TypeError: can't evaluate (gmp.mpf >> gmp.mpz)
3.L || 4L .. 3.L
3.L && 4L .. 4L
3.L => 4L .. TypeError: can't evaluate (gmp.mpf => gmp.mpz)
gmp.mpf, gmp.mpf
3.L + 4.L .. 7.L
3.L - 4.L .. -1.L
3.L * 4.L .. 12.L
3.L / 4.L .. 0.75L
3.L % 4.L .. TypeError: can't evaluate (gmp.mpf % gmp.mpf)
3.L ** 4.L .. TypeError: can't evaluate (gmp.mpf ** gmp.mpf)
3.L == 4.L .. false
3.L < 4.L .. true
3.L > 4.L .. false
3.L <= 4.L .. true
3.L >= 4.L .. false
3.L <=> 4.L .. -1
3.L in 4.L .. false
3.L & 4.L .. TypeError: can't evaluate (gmp.mpf & gmp.mpf)
3.L | 4.L .. TypeError: can't evaluate (gmp.mpf | gmp.mpf)
3.L ^ 4.L .. TypeError: can't evaluate (gmp.mpf ^ gmp.mpf)
3.L << 4.L .. TypeError: can't evaluate (gmp.mpf << gmp.mpf)
3.L >> 4.L .. TypeError: can't evaluate (gmp.mpf >> gmp.mpf)
3.L || 4.L .. 3.L
3.L && 4.L .. 4.L
3.L => 4.L .. TypeError: can't evaluate (gmp.mpf => gmp.mpf)
gmp.mpf, gmp.mpq
3.L + 4Lr .. 7.L
3.L - 4Lr .. -1.L
3.L * 4Lr .. 12.L
3.L / 4Lr .. 7.L
3.L % 4Lr .. TypeError: can't evaluate (gmp.mpf % gmp.mpq)
3.L ** 4Lr .. TypeError: can't evaluate (gmp.mpf ** gmp.mpq)
3.L == 4Lr .. false
3.L < 4Lr .. true
3.L > 4Lr .. false
3.L <= 4Lr .. true
3.L >= 4Lr .. false
3.L <=> 4Lr .. -1
3.L in 4Lr .. false
3.L & 4Lr .. TypeError: can't evaluate (gmp.mpf & gmp.mpq)
3.L | 4Lr .. TypeError: can't evaluate (gmp.mpf | gmp.mpq)
3.L ^ 4Lr .. TypeError: can't evaluate (gmp.mpf ^ gmp.mpq)
3.L << 4Lr .. TypeError: can't evaluate (gmp.mpf << gmp.mpq)
3.L >> 4Lr .. TypeError: can't evaluate (gmp.mpf >> gmp.mpq)
3.L || 4Lr .. 3.L
3.L && 4Lr .. 4Lr
3.L => 4Lr .. TypeError: can't evaluate (gmp.mpf => gmp.mpq)
gmp.mpq, number
3Lr + 4 .. 7Lr
3Lr - 4 .. -1Lr
3Lr * 4 .. 12Lr
3Lr / 4 .. 3/4Lr
3Lr % 4 .. TypeError: can't evaluate (gmp.mpq % number)
3Lr ** 4 .. TypeError: can't evaluate (gmp.mpq ** number)
3Lr == 4 .. false
3Lr < 4 .. true
3Lr > 4 .. false
3Lr <= 4 .. true
3Lr >= 4 .. false
3Lr <=> 4 .. -1
3Lr in 4 .. false
3Lr & 4 .. TypeError: can't evaluate (gmp.mpq & number)
3Lr | 4 .. TypeError: can't evaluate (gmp.mpq | number)
3Lr ^ 4 .. TypeError: can't evaluate (gmp.mpq ^ number)
3Lr << 4 .. TypeError: can't evaluate (gmp.mpq << number)
3Lr >> 4 .. TypeError: can't evaluate (gmp.mpq >> number)
3Lr || 4 .. 3Lr
3Lr && 4 .. 4
3Lr => 4 .. TypeError: can't evaluate (gmp.mpq => number)
gmp.mpq, gmp.mpz
3Lr + 4L .. 7Lr
3Lr - 4L .. -1Lr
3Lr * 4L .. 12Lr
3Lr / 4L .. 3/4Lr
3Lr % 4L .. TypeError: can't evaluate (gmp.mpq % gmp.mpz)
3Lr ** 4L .. TypeError: can't evaluate (gmp.mpq ** gmp.mpz)
3Lr == 4L .. false
3Lr < 4L .. true
3Lr > 4L .. false
3Lr <= 4L .. true
3Lr >= 4L .. false
3Lr <=> 4L .. -1
3Lr in 4L .. false
3Lr & 4L .. TypeError: can't evaluate (gmp.mpq & gmp.mpz)
3Lr | 4L .. TypeError: can't evaluate (gmp.mpq | gmp.mpz)
3Lr ^ 4L .. TypeError: can't evaluate (gmp.mpq ^ gmp.mpz)
3Lr << 4L .. TypeError: can't evaluate (gmp.mpq << gmp.mpz)
3Lr >> 4L .. TypeError: can't evaluate (gmp.mpq >> gmp.mpz)
3Lr || 4L .. 3Lr
3Lr && 4L .. 4L
3Lr => 4L .. TypeError: can't evaluate (gmp.mpq => gmp.mpz)
gmp.mpq, gmp.mpf
3Lr + 4.L .. 7.L
3Lr - 4.L .. -1.L
3Lr * 4.L .. 12.L
3Lr / 4.L .. 7.L
3Lr % 4.L .. TypeError: can't evaluate (gmp.mpq % gmp.mpf)
3Lr ** 4.L .. TypeError: can't evaluate (gmp.mpq ** gmp.mpf)
3Lr == 4.L .. false
3Lr < 4.L .. true
3Lr > 4.L .. false
3Lr <= 4.L .. true
3Lr >= 4.L .. false
3Lr <=> 4.L .. -1
3Lr in 4.L .. false
3Lr & 4.L .. TypeError: can't evaluate (gmp.mpq & gmp.mpf)
3Lr | 4.L .. TypeError: can't evaluate (gmp.mpq | gmp.mpf)
3Lr ^ 4.L .. TypeError: can't evaluate (gmp.mpq ^ gmp.mpf)
3Lr << 4.L .. TypeError: can't evaluate (gmp.mpq << gmp.mpf)
3Lr >> 4.L .. TypeError: can't evaluate (gmp.mpq >> gmp.mpf)
3Lr || 4.L .. 3Lr
3Lr && 4.L .. 4.L
3Lr => 4.L .. TypeError: can't evaluate (gmp.mpq => gmp.mpf)
gmp.mpq, gmp.mpq
3Lr + 4Lr .. 7Lr
3Lr - 4Lr .. -1Lr
3Lr * 4Lr .. 12Lr
3Lr / 4Lr .. 3/4Lr
3Lr % 4Lr .. TypeError: can't evaluate (gmp.mpq % gmp.mpq)
3Lr ** 4Lr .. TypeError: can't evaluate (gmp.mpq ** gmp.mpq)
3Lr == 4Lr .. false
3Lr < 4Lr .. true
3Lr > 4Lr .. false
3Lr <= 4Lr .. true
3Lr >= 4Lr .. false
3Lr <=> 4Lr .. -1
3Lr in 4Lr .. false
3Lr & 4Lr .. TypeError: can't evaluate (gmp.mpq & gmp.mpq)
3Lr | 4Lr .. TypeError: can't evaluate (gmp.mpq | gmp.mpq)
3Lr ^ 4Lr .. TypeError: can't evaluate (gmp.mpq ^ gmp.mpq)
3Lr << 4Lr .. TypeError: can't evaluate (gmp.mpq << gmp.mpq)
3Lr >> 4Lr .. TypeError: can't evaluate (gmp.mpq >> gmp.mpq)
3Lr || 4Lr .. 3Lr
3Lr && 4Lr .. 4Lr
3Lr => 4Lr .. TypeError: can't evaluate (gmp.mpq => gmp.mpq)

======== #4 zero-division ========

number, number
3 / 0 .. ZeroDivisionError: divide by zero
3 % 0 .. ZeroDivisionError: divide by zero
number, gmp.mpz
3 / 0L .. ZeroDivisionError: divide by zero
3 % 0L .. ZeroDivisionError: divide by zero
number, gmp.mpf
3 / 0.L .. ZeroDivisionError: divide by zero
3 % 0.L .. TypeError: can't evaluate (number % gmp.mpf)
number, gmp.mpq
3 / 0Lr .. ZeroDivisionError: divide by zero
3 % 0Lr .. TypeError: can't evaluate (number % gmp.mpq)
gmp.mpz, number
3L / 0 .. ZeroDivisionError: divide by zero
3L % 0 .. ZeroDivisionError: divide by zero
gmp.mpz, gmp.mpz
3L / 0L .. ZeroDivisionError: divide by zero
3L % 0L .. ZeroDivisionError: divide by zero
gmp.mpz, gmp.mpf
3L / 0.L .. ZeroDivisionError: divide by zero
3L % 0.L .. TypeError: can't evaluate (gmp.mpz % gmp.mpf)
gmp.mpz, gmp.mpq
3L / 0Lr .. ZeroDivisionError: divide by zero
3L % 0Lr .. TypeError: can't evaluate (gmp.mpz % gmp.mpq)
gmp.mpf, number
3.L / 0 .. ZeroDivisionError: divide by zero
3.L % 0 .. TypeError: can't evaluate (gmp.mpf % number)
gmp.mpf, gmp.mpz
3.L / 0L .. ZeroDivisionError: divide by zero
3.L % 0L .. TypeError: can't evaluate (gmp.mpf % gmp.mpz)
gmp.mpf, gmp.mpf
3.L / 0.L .. ZeroDivisionError: divide by zero
3.L % 0.L .. TypeError: can't evaluate (gmp.mpf % gmp.mpf)
gmp.mpf, gmp.mpq
3.L / 0Lr .. ZeroDivisionError: divide by zero
3.L % 0Lr .. TypeError: can't evaluate (gmp.mpf % gmp.mpq)
gmp.mpq, number
3Lr / 0 .. ZeroDivisionError: divide by zero
3Lr % 0 .. TypeError: can't evaluate (gmp.mpq % number)
gmp.mpq, gmp.mpz
3Lr / 0L .. ZeroDivisionError: divide by zero
3Lr % 0L .. TypeError: can't evaluate (gmp.mpq % gmp.mpz)
gmp.mpq, gmp.mpf
3Lr / 0.L .. ZeroDivisionError: divide by zero
3Lr % 0.L .. TypeError: can't evaluate (gmp.mpq % gmp.mpf)
gmp.mpq, gmp.mpq
3Lr / 0Lr .. ZeroDivisionError: divide by zero
3Lr % 0Lr .. TypeError: can't evaluate (gmp.mpq % gmp.mpq)

======== #5 comparator ========

number, number
3 == 4 .. false
3 < 4 .. true
3 > 4 .. false
3 <= 4 .. true
3 >= 4 .. false
3 <=> 4 .. -1
number, gmp.mpz
3 == 4L .. false
3 < 4L .. true
3 > 4L .. false
3 <= 4L .. true
3 >= 4L .. false
3 <=> 4L .. -1
number, gmp.mpf
3 == 4.L .. false
3 < 4.L .. true
3 > 4.L .. false
3 <= 4.L .. true
3 >= 4.L .. false
3 <=> 4.L .. -1
number, gmp.mpq
3 == 4Lr .. false
3 < 4Lr .. true
3 > 4Lr .. false
3 <= 4Lr .. true
3 >= 4Lr .. false
3 <=> 4Lr .. -1
gmp.mpz, number
3L == 4 .. false
3L < 4 .. true
3L > 4 .. false
3L <= 4 .. true
3L >= 4 .. false
3L <=> 4 .. -1
gmp.mpz, gmp.mpz
3L == 4L .. false
3L < 4L .. true
3L > 4L .. false
3L <= 4L .. true
3L >= 4L .. false
3L <=> 4L .. -1
gmp.mpz, gmp.mpf
3L == 4.L .. false
3L < 4.L .. true
3L > 4.L .. false
3L <= 4.L .. true
3L >= 4.L .. false
3L <=> 4.L .. -1
gmp.mpz, gmp.mpq
3L == 4Lr .. false
3L < 4Lr .. true
3L > 4Lr .. false
3L <= 4Lr .. true
3L >= 4Lr .. false
3L <=> 4Lr .. -1
gmp.mpf, number
3.L == 4 .. false
3.L < 4 .. true
3.L > 4 .. false
3.L <= 4 .. true
3.L >= 4 .. false
3.L <=> 4 .. -1
gmp.mpf, gmp.mpz
3.L == 4L .. false
3.L < 4L .. true
3.L > 4L .. false
3.L <= 4L .. true
3.L >= 4L .. false
3.L <=> 4L .. -1
gmp.mpf, gmp.mpf
3.L == 4.L .. false
3.L < 4.L .. true
3.L > 4.L .. false
3.L <= 4.L .. true
3.L >= 4.L .. false
3.L <=> 4.L .. -1
gmp.mpf, gmp.mpq
3.L == 4Lr .. false
3.L < 4Lr .. true
3.L > 4Lr .. false
3.L <= 4Lr .. true
3.L >= 4Lr .. false
3.L <=> 4Lr .. -1
gmp.mpq, number
3Lr == 4 .. false
3Lr < 4 .. true
3Lr > 4 .. false
3Lr <= 4 .. true
3Lr >= 4 .. false
3Lr <=> 4 .. -1
gmp.mpq, gmp.mpz
3Lr == 4L .. false
3Lr < 4L .. true
3Lr > 4L .. false
3Lr <= 4L .. true
3Lr >= 4L .. false
3Lr <=> 4L .. -1
gmp.mpq, gmp.mpf
3Lr == 4.L .. false
3Lr < 4.L .. true
3Lr > 4.L .. false
3Lr <= 4.L .. true
3Lr >= 4.L .. false
3Lr <=> 4.L .. -1
gmp.mpq, gmp.mpq
3Lr == 4Lr .. false
3Lr < 4Lr .. true
3Lr > 4Lr .. false
3Lr <= 4Lr .. true
3Lr >= 4Lr .. false
3Lr <=> 4Lr .. -1
number, number
4 == 4 .. true
4 < 4 .. false
4 > 4 .. false
4 <= 4 .. true
4 >= 4 .. true
4 <=> 4 .. 0
number, gmp.mpz
4 == 4L .. true
4 < 4L .. false
4 > 4L .. false
4 <= 4L .. true
4 >= 4L .. true
4 <=> 4L .. 0
number, gmp.mpf
4 == 4.L .. true
4 < 4.L .. false
4 > 4.L .. false
4 <= 4.L .. true
4 >= 4.L .. true
4 <=> 4.L .. 0
number, gmp.mpq
4 == 4Lr .. true
4 < 4Lr .. false
4 > 4Lr .. false
4 <= 4Lr .. true
4 >= 4Lr .. true
4 <=> 4Lr .. 0
gmp.mpz, number
4L == 4 .. true
4L < 4 .. false
4L > 4 .. false
4L <= 4 .. true
4L >= 4 .. true
4L <=> 4 .. 0
gmp.mpz, gmp.mpz
4L == 4L .. true
4L < 4L .. false
4L > 4L .. false
4L <= 4L .. true
4L >= 4L .. true
4L <=> 4L .. 0
gmp.mpz, gmp.mpf
4L == 4.L .. true
4L < 4.L .. false
4L > 4.L .. false
4L <= 4.L .. true
4L >= 4.L .. true
4L <=> 4.L .. 0
gmp.mpz, gmp.mpq
4L == 4Lr .. true
4L < 4Lr .. false
4L > 4Lr .. false
4L <= 4Lr .. true
4L >= 4Lr .. true
4L <=> 4Lr .. 0
gmp.mpf, number
4.L == 4 .. true
4.L < 4 .. false
4.L > 4 .. false
4.L <= 4 .. true
4.L >= 4 .. true
4.L <=> 4 .. 0
gmp.mpf, gmp.mpz
4.L == 4L .. true
4.L < 4L .. false
4.L > 4L .. false
4.L <= 4L .. true
4.L >= 4L .. true
4.L <=> 4L .. 0
gmp.mpf, gmp.mpf
4.L == 4.L .. true
4.L < 4.L .. false
4.L > 4.L .. false
4.L <= 4.L .. true
4.L >= 4.L .. true
4.L <=> 4.L .. 0
gmp.mpf, gmp.mpq
4.L == 4Lr .. true
4.L < 4Lr .. false
4.L > 4Lr .. false
4.L <= 4Lr .. true
4.L >= 4Lr .. true
4.L <=> 4Lr .. 0
gmp.mpq, number
4Lr == 4 .. true
4Lr < 4 .. false
4Lr > 4 .. false
4Lr <= 4 .. true
4Lr >= 4 .. true
4Lr <=> 4 .. 0
gmp.mpq, gmp.mpz
4Lr == 4L .. true
4Lr < 4L .. false
4Lr > 4L .. false
4Lr <= 4L .. true
4Lr >= 4L .. true
4Lr <=> 4L .. 0
gmp.mpq, gmp.mpf
4Lr == 4.L .. true
4Lr < 4.L .. false
4Lr > 4.L .. false
4Lr <= 4.L .. true
4Lr >= 4.L .. true
4Lr <=> 4.L .. 0
gmp.mpq, gmp.mpq
4Lr == 4Lr .. true
4Lr < 4Lr .. false
4Lr > 4Lr .. false
4Lr <= 4Lr .. true
4Lr >= 4Lr .. true
4Lr <=> 4Lr .. 0
number, number
5 == 4 .. false
5 < 4 .. false
5 > 4 .. true
5 <= 4 .. false
5 >= 4 .. true
5 <=> 4 .. 1
number, gmp.mpz
5 == 4L .. false
5 < 4L .. false
5 > 4L .. true
5 <= 4L .. false
5 >= 4L .. true
5 <=> 4L .. 1
number, gmp.mpf
5 == 4.L .. false
5 < 4.L .. false
5 > 4.L .. true
5 <= 4.L .. false
5 >= 4.L .. true
5 <=> 4.L .. 1
number, gmp.mpq
5 == 4Lr .. false
5 < 4Lr .. false
5 > 4Lr .. true
5 <= 4Lr .. false
5 >= 4Lr .. true
5 <=> 4Lr .. 1
gmp.mpz, number
5L == 4 .. false
5L < 4 .. false
5L > 4 .. true
5L <= 4 .. false
5L >= 4 .. true
5L <=> 4 .. 1
gmp.mpz, gmp.mpz
5L == 4L .. false
5L < 4L .. false
5L > 4L .. true
5L <= 4L .. false
5L >= 4L .. true
5L <=> 4L .. 1
gmp.mpz, gmp.mpf
5L == 4.L .. false
5L < 4.L .. false
5L > 4.L .. true
5L <= 4.L .. false
5L >= 4.L .. true
5L <=> 4.L .. 1
gmp.mpz, gmp.mpq
5L == 4Lr .. false
5L < 4Lr .. false
5L > 4Lr .. true
5L <= 4Lr .. false
5L >= 4Lr .. true
5L <=> 4Lr .. 1
gmp.mpf, number
5.L == 4 .. false
5.L < 4 .. false
5.L > 4 .. true
5.L <= 4 .. false
5.L >= 4 .. true
5.L <=> 4 .. 1
gmp.mpf, gmp.mpz
5.L == 4L .. false
5.L < 4L .. false
5.L > 4L .. true
5.L <= 4L .. false
5.L >= 4L .. true
5.L <=> 4L .. 1
gmp.mpf, gmp.mpf
5.L == 4.L .. false
5.L < 4.L .. false
5.L > 4.L .. true
5.L <= 4.L .. false
5.L >= 4.L .. true
5.L <=> 4.L .. 1
gmp.mpf, gmp.mpq
5.L == 4Lr .. false
5.L < 4Lr .. false
5.L > 4Lr .. true
5.L <= 4Lr .. false
5.L >= 4Lr .. true
5.L <=> 4Lr .. 1
gmp.mpq, number
5Lr == 4 .. false
5Lr < 4 .. false
5Lr > 4 .. true
5Lr <= 4 .. false
5Lr >= 4 .. true
5Lr <=> 4 .. 1
gmp.mpq, gmp.mpz
5Lr == 4L .. false
5Lr < 4L .. false
5Lr > 4L .. true
5Lr <= 4L .. false
5Lr >= 4L .. true
5Lr <=> 4L .. 1
gmp.mpq, gmp.mpf
5Lr == 4.L .. false
5Lr < 4.L .. false
5Lr > 4.L .. true
5Lr <= 4.L .. false
5Lr >= 4.L .. true
5Lr <=> 4.L .. 1
gmp.mpq, gmp.mpq
5Lr == 4Lr .. false
5Lr < 4Lr .. false
5Lr > 4Lr .. true
5Lr <= 4Lr .. false
5Lr >= 4Lr .. true
5Lr <=> 4Lr .. 1

======== #6 precision for mpf ========

prec=10    3.14159292035398230088
prec=100   3.141592920353982300884955752212389380531
prec=1000  3.141592920353982300884955752212389380530973451327433628318584070796460176991150442477876106194690265486725663716814159292035398230088495575221238938053097345132743362831858407079646017699115044247787610619469026548672566371681415929203539823008849557522123893805309734513274336283185840707964601769911504424779
prec=10000 3.1415929203539823008849557522123893805309734513274336283185840707964601769911504424778761061946902654867256637168141592920353982300884955752212389380530973451327433628318584070796460176991150442477876106194690265486725663716814159292035398230088495575221238938053097345132743362831858407079646017699115044247787610619469026548672566371681415929203539823008849557522123893805309734513274336283185840707964601769911504424778761061946902654867256637168141592920353982300884955752212389380530973451327433628318584070796460176991150442477876106194690265486725663716814159292035398230088495575221238938053097345132743362831858407079646017699115044247787610619469026548672566371681415929203539823008849557522123893805309734513274336283185840707964601769911504424778761061946902654867256637168141592920353982300884955752212389380530973451327433628318584070796460176991150442477876106194690265486725663716814159292035398230088495575221238938053097345132743362831858407079646017699115044247787610619469026548672566371681415929203539823008849557522123893805309734513274336283185840707964601769911504424778761061946902654867256637168141592920353982300884955752212389380530973451327433628318584070796460176991150442477876106194690265486725663716814159292035398230088495575221238938053097345132743362831858407079646017699115044247787610619469026548672566371681415929203539823008849557522123893805309734513274336283185840707964601769911504424778761061946902654867256637168141592920353982300884955752212389380530973451327433628318584070796460176991150442477876106194690265486725663716814159292035398230088495575221238938053097345132743362831858407079646017699115044247787610619469026548672566371681415929203539823008849557522123893805309734513274336283185840707964601769911504424778761061946902654867256637168141592920353982300884955752212389380530973451327433628318584070796460176991150442477876106194690265486725663716814159292035398230088495575221238938053097345132743362831858407079646017699115044247787610619469026548672566371681415929203539823008849557522123893805309734513274336283185840707964601769911504424778761061946902654867256637168141592920353982300884955752212389380530973451327433628318584070796460176991150442477876106194690265486725663716814159292035398230088495575221238938053097345132743362831858407079646017699115044247787610619469026548672566371681415929203539823008849557522123893805309734513274336283185840707964601769911504424778761061946902654867256637168141592920353982300884955752212389380530973451327433628318584070796460176991150442477876106194690265486725663716814159292035398230088495575221238938053097345132743362831858407079646017699115044247787610619469026548672566371681415929203539823008849557522123893805309734513274336283185840707964601769911504424778761061946902654867256637168141592920353982300884955752212389380530973451327433628318584070796460176991150442477876106194690265486725663716814159292035398230088495575221238938053097345132743362831858407079646017699115044247787610619469026548673

======== #7 Formatter test - basic ========

%d        |0                   |0                   
%u        |0                   |0                   
%o        |0                   |0                   
%x        |0                   |0                   
%e        |0.000000e+00        |0.000000e+00        
%f        |0.000000            |0.000000            
%g        |0                   |0                   
%d        |0                   |0                   
%u        |0                   |0                   
%o        |0                   |0                   
%x        |0                   |0                   
%e        |0.000000e+00        |0.000000e+00        
%f        |0.000000            |0.000000            
%g        |0                   |0                   
%d        |1                   |1                   
%u        |1                   |1                   
%o        |1                   |1                   
%x        |1                   |1                   
%e        |1.000000e+00        |1.000000e+00        
%f        |1.000000            |1.000000            
%g        |1                   |1                   
%d        |2                   |2                   
%u        |2                   |2                   
%o        |2                   |2                   
%x        |2                   |2                   
%e        |2.000000e+00        |2.000000e+00        
%f        |2.000000            |2.000000            
%g        |2                   |2                   
%d        |8                   |8                   
%u        |8                   |8                   
%o        |10                  |10                  
%x        |8                   |8                   
%e        |8.000000e+00        |8.000000e+00        
%f        |8.000000            |8.000000            
%g        |8                   |8                   
%d        |10                  |10                  
%u        |10                  |10                  
%o        |12                  |12                  
%x        |a                   |a                   
%e        |1.000000e+01        |1.000000e+01        
%f        |10.000000           |10.000000           
%g        |10                  |10                  
%d        |16                  |16                  
%u        |16                  |16                  
%o        |20                  |20                  
%x        |10                  |10                  
%e        |1.600000e+01        |1.600000e+01        
%f        |16.000000           |16.000000           
%g        |16                  |16                  

======== #8 Formatter test - specifier in upper case ========

%x        |bc614e              |bc614e              
%X        |BC614E              |BC614E              
%e        |1.234568e-10        |1.234568e-10        
%E        |1.234568E-10        |1.234568E-10        
%g        |1.23457e-10         |1.23457e-10         
%G        |1.23457E-10         |1.23457E-10         

======== #9 Formatter test - specifier d, u, o, x ========

%1d       |12345678            |12345678            
%10d      |  12345678          |  12345678          
%-10d$    |12345678  $         |12345678  $         
%010d     |0012345678          |0012345678          
%-010d    |12345678            |12345678            
%#d       |12345678            |12345678            
%#010d    |0012345678          |0012345678          
%1u       |12345678            |12345678            
%10u      |  12345678          |  12345678          
%-10u$    |12345678  $         |12345678  $         
%010u     |0012345678          |0012345678          
%-010u    |12345678            |12345678            
%#u       |12345678            |12345678            
%#010u    |0012345678          |0012345678          
%1o       |57060516            |57060516            
%10o      |  57060516          |  57060516          
%-10o$    |57060516  $         |57060516  $         
%010o     |0057060516          |0057060516          
%-010o    |57060516            |57060516            
%#o       |057060516           |057060516           
%#010o    |0057060516          |0057060516          
%1x       |bc614e              |bc614e              
%10x      |    bc614e          |    bc614e          
%-10x$    |bc614e    $         |bc614e    $         
%010x     |0000bc614e          |0000bc614e          
%-010x    |bc614e              |bc614e              
%#x       |0xbc614e            |0xbc614e            
%#010x    |000xbc614e          |0x00bc614e          

======== #10 Formatter test - specifier e, f, g ========

%1e       |0.000000e+00        |0.000000e+00        
%10e      |0.000000e+00        |0.000000e+00        
%.e       |0.000000e+00        |0e+00               
%.0e      |0e+00               |0e+00               
%.1e      |0.0e+00             |0.0e+00             
%.6e      |0.000000e+00        |0.000000e+00        
%.10e     |0.0000000000e+00    |0.0000000000e+00    
%.20e     |0.00000000000000000000e+00|0.00000000000000000000e+00
%3.3e     |0.000e+00           |0.000e+00           
%13.3e    |    0.000e+00       |    0.000e+00       
%-13.3e$  |0.000e+00    $      |0.000e+00    $      
%013.3e   |00000.000e+00       |00000.000e+00       
%1e       |1.428571e+04        |1.428571e+04        
%10e      |1.428571e+04        |1.428571e+04        
%.e       |1.428571e+04        |1.42857142857142857143e+04
%.0e      |1e+04               |1e+04               
%.1e      |1.4e+04             |1.4e+04             
%.6e      |1.428571e+04        |1.428571e+04        
%.10e     |1.4285714286e+04    |1.4285714286e+04    
%.20e     |1.42857142857142860000e+04|1.42857142857142857143e+04
%3.3e     |1.429e+04           |1.429e+04           
%13.3e    |    1.429e+04       |    1.429e+04       
%-13.3e$  |1.429e+04    $      |1.429e+04    $      
%013.3e   |00001.429e+04       |00001.429e+04       
%1f       |0.000000            |0.000000            
%10f      |  0.000000          |  0.000000          
%.f       |0.000000            |0                   
%.0f      |0                   |0                   
%.1f      |0.0                 |0.0                 
%.6f      |0.000000            |0.000000            
%.10f     |0.0000000000        |0.0000000000        
%.20f     |0.00000000000000000000|0.00000000000000000000
%3.3f     |0.000               |0.000               
%13.3f    |        0.000       |        0.000       
%-13.3f$  |0.000        $      |0.000        $      
%013.3f   |000000000.000       |000000000.000       
%1f       |14285.714286        |14285.714286        
%10f      |14285.714286        |14285.714286        
%.f       |14285.714286        |14285.7142857142857143
%.0f      |14286               |14286               
%.1f      |14285.7             |14285.7             
%.6f      |14285.714286        |14285.714286        
%.10f     |14285.7142857143    |14285.7142857143    
%.20f     |14285.71428571428600000000|14285.71428571428571430000
%3.3f     |14285.714           |14285.714           
%13.3f    |    14285.714       |    14285.714       
%-13.3f$  |14285.714    $      |14285.714    $      
%013.3f   |000014285.714       |000014285.714       
%1g       |0                   |0                   
%10g      |         0          |         0          
%.g       |0                   |0                   
%.0g      |0                   |0                   
%.1g      |0                   |0                   
%.6g      |0                   |0                   
%.10g     |0                   |0                   
%.20g     |0                   |0                   
%3.3g     |  0                 |  0                 
%13.3g    |            0       |            0       
%-13.3g$  |0            $      |0            $      
%013.3g   |0000000000000       |0000000000000       
%1g       |14285.7             |14285.7             
%10g      |   14285.7          |   14285.7          
%.g       |14285.7             |14285.7142857142857143
%.0g      |1e+04               |1e+04               
%.1g      |1e+04               |1e+04               
%.6g      |14285.7             |14285.7             
%.10g     |14285.71429         |14285.71429         
%.20g     |14285.714285714286  |14285.714285714285714
%3.3g     |1.43e+04            |1.43e+04            
%13.3g    |     1.43e+04       |     1.43e+04       
%-13.3g$  |1.43e+04     $      |1.43e+04     $      
%013.3g   |000001.43e+04       |000001.43e+04       

======== #11 Formatter test - big numbers ========

%d        |12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
%10d      |12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
%100d     |12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
%200d     |12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
%201d     | 12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
%210d     |          12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890
%-210d$   |12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890          $
%0210d    |000000000012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890

======== #12 sequence ========

format('%d', 1L .. 10L).join(',') .. 1,2,3,4,5,6,7,8,9,10
format('%d', 10L .. 1L).join(',') .. 10,9,8,7,6,5,4,3,2,1
format('%d', (1L..).head(10)).join(',') .. 1,2,3,4,5,6,7,8,9,10
format('%d', 1000000000000000L .. 1000000000000010L).join(',') .. 1000000000000000,1000000000000001,1000000000000002,1000000000000003,1000000000000004,1000000000000005,1000000000000006,1000000000000007,1000000000000008,1000000000000009,1000000000000010
format('%d', (1000000000000000L..).head(10)).join(',') .. 1000000000000000,1000000000000001,1000000000000002,1000000000000003,1000000000000004,1000000000000005,1000000000000006,1000000000000007,1000000000000008,1000000000000009
