======== #1 struct's instance passed as arguments ========

1 2 3
4 5 6

======== #2 struct and methods ========

<class:T(a, b, c) {block?}>
7, 5, 3
0, 0, 0
7, 5, 3
expected error: DeclarationError: struct can't have constructor

======== #3 instantiation with a list ========

knots_t(a => point_t(x => 0, y => 0), b => point_t(x => 0, y => 100), c => point_t(x => 100, y => 100), d => point_t(x => 100, y => 0))
knots_t(a => point_t(x => 0, y => 0), b => point_t(x => 75, y => 100), c => point_t(x => 25, y => 100), d => point_t(x => 100, y => 0))
knots_t(a => point_t(x => 0, y => 0), b => point_t(x => 100, y => 100), c => point_t(x => 0, y => 100), d => point_t(x => 100, y => 0))
knots_t(a => point_t(x => 0, y => 0), b => point_t(x => 150, y => 100), c => point_t(x => -50, y => 100), d => point_t(x => 100, y => 0))
knots_t(a => point_t(x => 0, y => 0), b => point_t(x => 100, y => 200), c => point_t(x => 0, y => -100), d => point_t(x => 100, y => 100))

======== #4 struct declaration with arguments that has default value ========

Taro: 23
Jiro: 23
Jiro: 23
Taro: 25
Takeshi: 21

======== #5 struct with implicit-mapping ========

spade 1
spade 2
spade 3
spade 4
spade 5
spade 6
spade 7
spade 8
spade 9
spade 10
spade 11
spade 12
spade 13
