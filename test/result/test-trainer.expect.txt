======== #1 node information ========

node@a = +a .. unary@pos
node@a.input .. nil
node@a.inputgrad .. nil
node@a = -a .. unary@neg
node@a.input .. nil
node@a.inputgrad .. nil
node@a = a + b .. binary@add
node@a.input@left .. nil
node@a.input@right .. nil
node@a.inputgrad@left .. nil
node@a.inputgrad@right .. nil
node@a = a - b .. binary@sub
node@a.input@left .. nil
node@a.input@right .. nil
node@a.inputgrad@left .. nil
node@a.inputgrad@right .. nil
node@a = a * b .. binary@mul
node@a.input@left .. nil
node@a.input@right .. nil
node@a.inputgrad@left .. nil
node@a.inputgrad@right .. nil
node@a = a / b .. binary@div
node@a.input@left .. nil
node@a.input@right .. nil
node@a.inputgrad@left .. nil
node@a.inputgrad@right .. nil
node@a = a ** b .. binary@pow
node@a.input@left .. nil
node@a.input@right .. nil
node@a.inputgrad@left .. nil
node@a.inputgrad@right .. nil
node@a = a |.| b .. binary@dot
node@a.input@left .. nil
node@a.input@right .. nil
node@a.inputgrad@left .. nil
node@a.inputgrad@right .. nil
node@a = a |*| gear@conv1d(array.zeros([3])) .. gear@conv1d
<gear@conv1d:filter_num=none:channel_num=none:size=3:strides=1:padding=same:channel_pos=none>
node@a.input .. nil
node@a.inputgrad .. nil
node@a = a |*| gear@conv2d(array.zeros([3, 3])) .. gear@conv2d
<gear@conv2d:filter_num=none:channel_num=none:size=(3,3):strides=(1,1):padding=same:channel_pos=none>
node@a.input .. nil
node@a.inputgrad .. nil
node@a = a |*| gear@maxpool1d(3) .. gear@maxpool1d
<gear@maxpool1d:size=3:strides=1:padding=same:channel_pos=last>
node@a.input .. nil
node@a.inputgrad .. nil
node@a = a |*| gear@maxpool2d([3, 3]) .. gear@maxpool2d
<gear@maxpool2d:size=(3,3):strides=(1,1):padding=same:channel_pos=last>
node@a.input .. nil
node@a.inputgrad .. nil
node@a = a |*| gear@maxpool3d([3, 3, 3]) .. gear@maxpool3d
<gear@maxpool3d:size=(3,3,3):strides=(1,1,1):padding=same:channel_pos=last>
node@a.input .. nil
node@a.inputgrad .. nil
node@a = a |*| gear@relu() .. gear@relu
<gear@relu>
node@a.input .. nil
node@a.inputgrad .. nil
node@a = a |*| gear@sigmoid() .. gear@sigmoid
<gear@sigmoid>
node@a.input .. nil
node@a.inputgrad .. nil
node@a = a |*| gear@softmax() .. gear@softmax
<gear@softmax>
node@a.input .. nil
node@a.inputgrad .. nil
node@a = a |*| gear@tanh() .. gear@tanh
<gear@tanh>
node@a.input .. nil
node@a.inputgrad .. nil

======== #2 input values in trainer#eval() ========

no inputs specified
{ x = 3, tr.eval() } .. 3
{ x = 5, tr.eval() } .. 3
x is specified as an input
{ x = 7, tr.eval() } .. 7
{ x = 9, tr.eval() } .. 9

======== #3 trainer#eval() ========

a + b
{ a = 3, b = 5, tr.eval() } .. 8
a - b
{ a = 3, b = 5, tr.eval() } .. -2
a * b
{ a = 3, b = 5, tr.eval() } .. 15
a / b
{ a = 3, b = 5, tr.eval() } .. 0.6
a |.| b
{ a = 3, b = 5, tr.eval() } .. 15

======== #4 gear@conv2d ========

------------------------------------------------------------------------------
target:[H, W] filter:[FH, FW]
model .. x |*| g
x.shape .. [5, 5]
g .. <gear@conv2d:filter_num=none:channel_num=none:size=(2,2):strides=(1,1):padding=valid:channel_pos=none>
x.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{0, 0, 0, 0, 1},
 {0, 0, 1, 1, 0},
 {1, 1, 1, 0, 0},
 {0, 1, 0, 0, 1},
 {1, 1, 0, 1, 1}}
g.array.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{1, 0},
 {0, 0}}
== OK ==
strDirect ..
{{0, 0, 0, 0},
 {0, 0, 1, 1},
 {1, 1, 1, 0},
 {0, 1, 0, 0}}
strTrainer ..
{{0, 0, 0, 0},
 {0, 0, 1, 1},
 {1, 1, 1, 0},
 {0, 1, 0, 0}}
------------------------------------------------------------------------------
target:[H, W] filter:[FN, FH, FW]
model .. x |*| g
x.shape .. [5, 5]
g .. <gear@conv2d:filter_num=4:channel_num=none:size=(2,2):strides=(1,1):padding=valid:channel_pos=none>
x.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{0, 0, 0, 0, 1},
 {0, 0, 1, 1, 0},
 {1, 1, 1, 0, 0},
 {0, 1, 0, 0, 1},
 {1, 1, 0, 1, 1}}
g.array.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{{1, 0},
  {0, 0}},

 {{1, 0},
  {1, 0}},

 {{0, 0},
  {1, 0}},

 {{1, 1},
  {0, 0}}}
== OK ==
strDirect ..
{{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 1}},
 {{0, 1, 1, 0}, {0, 1, 1, 1}, {1, 2, 1, 2}, {1, 1, 0, 1}},
 {{1, 1, 0, 2}, {1, 2, 1, 2}, {1, 1, 0, 1}, {0, 0, 0, 0}},
 {{0, 1, 1, 1}, {1, 2, 1, 1}, {0, 0, 0, 0}, {0, 1, 1, 1}}}
strTrainer ..
{{{0, 0, 0, 0}, {0, 0, 0, 0}, {0, 1, 1, 0}, {0, 1, 1, 1}},
 {{0, 1, 1, 0}, {0, 1, 1, 1}, {1, 2, 1, 2}, {1, 1, 0, 1}},
 {{1, 1, 0, 2}, {1, 2, 1, 2}, {1, 1, 0, 1}, {0, 0, 0, 0}},
 {{0, 1, 1, 1}, {1, 2, 1, 1}, {0, 0, 0, 0}, {0, 1, 1, 1}}}
------------------------------------------------------------------------------
target:[N, H, W] filter:[FN, FH, FW]
x.expand_kernelvec2d([2, 2], [1, 1], [0, 0], `none) ..
{{{0, 0, 0, 0},
  {0, 0, 0, 1},
  {0, 0, 1, 1},
  {0, 1, 1, 0},
  {0, 0, 1, 1},
  {0, 1, 1, 1},
  {1, 1, 1, 0},
  {1, 0, 0, 0},
  {1, 1, 0, 1},
  {1, 1, 1, 0},
  {1, 0, 0, 0},
  {0, 0, 0, 1},
  {0, 1, 1, 1},
  {1, 0, 1, 0},
  {0, 0, 0, 1},
  {0, 1, 1, 1}},

 {{1, 0, 0, 1},
  {0, 0, 1, 0},
  {0, 0, 0, 0},
  {0, 1, 0, 0},
  {0, 1, 1, 0},
  {1, 0, 0, 1},
  {0, 0, 1, 1},
  {0, 0, 1, 0},
  {1, 0, 0, 1},
  {0, 1, 1, 0},
  {1, 1, 0, 1},
  {1, 0, 1, 0},
  {0, 1, 0, 1},
  {1, 0, 1, 1},
  {0, 1, 1, 1},
  {1, 0, 1, 0}},

 {{0, 1, 0, 0},
  {1, 0, 0, 0},
  {0, 1, 0, 0},
  {1, 1, 0, 0},
  {0, 0, 0, 1},
  {0, 0, 1, 1},
  {0, 0, 1, 1},
  {0, 0, 1, 1},
  {0, 1, 1, 1},
  {1, 1, 1, 0},
  {1, 1, 0, 1},
  {1, 1, 1, 0},
  {1, 1, 0, 1},
  {1, 0, 1, 0},
  {0, 1, 0, 0},
  {1, 0, 0, 1}}}
model .. x |*| g
x.shape .. [3, 5, 5]
g .. <gear@conv2d:filter_num=4:channel_num=none:size=(2,2):strides=(1,1):padding=valid:channel_pos=none>
x.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{{0, 0, 0, 0, 1},
  {0, 0, 1, 1, 0},
  {1, 1, 1, 0, 0},
  {0, 1, 0, 0, 1},
  {1, 1, 0, 1, 1}},

 {{1, 0, 0, 0, 1},
  {0, 1, 0, 0, 0},
  {1, 0, 1, 1, 0},
  {0, 1, 0, 1, 0},
  {0, 1, 1, 1, 0}},

 {{0, 1, 0, 1, 1},
  {0, 0, 0, 0, 0},
  {0, 1, 1, 1, 1},
  {1, 1, 0, 1, 0},
  {0, 1, 0, 0, 1}}}
g.array.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{{0, 0},
  {1, 0}},

 {{1, 1},
  {1, 1}},

 {{1, 0},
  {1, 0}},

 {{1, 1},
  {0, 1}}}
== OK ==
strDirect ..
{{{{0, 0, 0, 0}, {0, 1, 0, 1}, {1, 2, 1, 1}, {1, 2, 1, 1}},
  {{1, 2, 1, 1}, {1, 3, 1, 2}, {1, 3, 2, 2}, {0, 1, 1, 1}},
  {{0, 3, 1, 3}, {1, 3, 2, 2}, {0, 1, 1, 1}, {0, 1, 0, 1}},
  {{1, 3, 1, 2}, {1, 2, 2, 1}, {0, 1, 0, 1}, {1, 3, 1, 2}}},

 {{{0, 2, 1, 2}, {1, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 0, 1}},
  {{1, 2, 1, 1}, {0, 2, 1, 2}, {1, 2, 1, 1}, {1, 1, 1, 0}},
  {{0, 2, 1, 2}, {1, 2, 1, 1}, {0, 3, 1, 3}, {1, 2, 2, 1}},
  {{0, 2, 0, 2}, {1, 3, 2, 2}, {1, 3, 1, 2}, {1, 2, 2, 1}}},

 {{{0, 1, 0, 1}, {0, 1, 1, 1}, {0, 1, 0, 1}, {0, 2, 1, 2}},
  {{0, 1, 0, 1}, {1, 2, 1, 1}, {1, 2, 1, 1}, {1, 2, 1, 1}},
  {{1, 3, 1, 2}, {1, 3, 2, 2}, {0, 3, 1, 3}, {1, 3, 2, 2}},
  {{0, 3, 1, 3}, {1, 2, 2, 1}, {0, 1, 0, 1}, {0, 2, 1, 2}}}}
strTrainer ..
{{{{0, 0, 0, 0}, {0, 1, 0, 1}, {1, 2, 1, 1}, {1, 2, 1, 1}},
  {{1, 2, 1, 1}, {1, 3, 1, 2}, {1, 3, 2, 2}, {0, 1, 1, 1}},
  {{0, 3, 1, 3}, {1, 3, 2, 2}, {0, 1, 1, 1}, {0, 1, 0, 1}},
  {{1, 3, 1, 2}, {1, 2, 2, 1}, {0, 1, 0, 1}, {1, 3, 1, 2}}},

 {{{0, 2, 1, 2}, {1, 1, 1, 0}, {0, 0, 0, 0}, {0, 1, 0, 1}},
  {{1, 2, 1, 1}, {0, 2, 1, 2}, {1, 2, 1, 1}, {1, 1, 1, 0}},
  {{0, 2, 1, 2}, {1, 2, 1, 1}, {0, 3, 1, 3}, {1, 2, 2, 1}},
  {{0, 2, 0, 2}, {1, 3, 2, 2}, {1, 3, 1, 2}, {1, 2, 2, 1}}},

 {{{0, 1, 0, 1}, {0, 1, 1, 1}, {0, 1, 0, 1}, {0, 2, 1, 2}},
  {{0, 1, 0, 1}, {1, 2, 1, 1}, {1, 2, 1, 1}, {1, 2, 1, 1}},
  {{1, 3, 1, 2}, {1, 3, 2, 2}, {0, 3, 1, 3}, {1, 3, 2, 2}},
  {{0, 3, 1, 3}, {1, 2, 2, 1}, {0, 1, 0, 1}, {0, 2, 1, 2}}}}
------------------------------------------------------------------------------
target:[C, H, W] filter:[C, FH, FW]
x ..
{{{0, 0, 0, 0, 1},
  {0, 0, 1, 1, 0},
  {1, 1, 1, 0, 0},
  {0, 1, 0, 0, 1},
  {1, 1, 0, 1, 1}},

 {{1, 0, 0, 0, 1},
  {0, 1, 0, 0, 0},
  {1, 0, 1, 1, 0},
  {0, 1, 0, 1, 0},
  {0, 1, 1, 1, 0}},

 {{0, 1, 0, 1, 1},
  {0, 0, 0, 0, 0},
  {0, 1, 1, 1, 1},
  {1, 1, 0, 1, 0},
  {0, 1, 0, 0, 1}}}
model .. x |*| g
x.shape .. [3, 5, 5]
g .. <gear@conv2d:filter_num=none:channel_num=3:size=(2,2):strides=(1,1):padding=valid:channel_pos=first>
x.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{{0, 0, 0, 0, 1},
  {0, 0, 1, 1, 0},
  {1, 1, 1, 0, 0},
  {0, 1, 0, 0, 1},
  {1, 1, 0, 1, 1}},

 {{1, 0, 0, 0, 1},
  {0, 1, 0, 0, 0},
  {1, 0, 1, 1, 0},
  {0, 1, 0, 1, 0},
  {0, 1, 1, 1, 0}},

 {{0, 1, 0, 1, 1},
  {0, 0, 0, 0, 0},
  {0, 1, 1, 1, 1},
  {1, 1, 0, 1, 0},
  {0, 1, 0, 0, 1}}}
g.array.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{{0, 0},
  {1, 0}},

 {{1, 1},
  {1, 1}},

 {{1, 0},
  {1, 0}}}
== OK ==
strDirect ..
{{2, 2, 1, 3},
 {3, 4, 4, 2},
 {3, 5, 4, 4},
 {4, 6, 3, 4}}
strTrainer ..
{{2, 2, 1, 3},
 {3, 4, 4, 2},
 {3, 5, 4, 4},
 {4, 6, 3, 4}}
------------------------------------------------------------------------------
target:[C, H, W] filter:[FN, C, FH, FW]
x ..
{{{0, 0, 0, 0, 1},
  {0, 0, 1, 1, 0},
  {1, 1, 1, 0, 0},
  {0, 1, 0, 0, 1},
  {1, 1, 0, 1, 1}},

 {{1, 0, 0, 0, 1},
  {0, 1, 0, 0, 0},
  {1, 0, 1, 1, 0},
  {0, 1, 0, 1, 0},
  {0, 1, 1, 1, 0}},

 {{0, 1, 0, 1, 1},
  {0, 0, 0, 0, 0},
  {0, 1, 1, 1, 1},
  {1, 1, 0, 1, 0},
  {0, 1, 0, 0, 1}}}
model .. x |*| g
x.shape .. [3, 5, 5]
g .. <gear@conv2d:filter_num=4:channel_num=3:size=(2,2):strides=(1,1):padding=valid:channel_pos=first>
x.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{{0, 0, 0, 0, 1},
  {0, 0, 1, 1, 0},
  {1, 1, 1, 0, 0},
  {0, 1, 0, 0, 1},
  {1, 1, 0, 1, 1}},

 {{1, 0, 0, 0, 1},
  {0, 1, 0, 0, 0},
  {1, 0, 1, 1, 0},
  {0, 1, 0, 1, 0},
  {0, 1, 1, 1, 0}},

 {{0, 1, 0, 1, 1},
  {0, 0, 0, 0, 0},
  {0, 1, 1, 1, 1},
  {1, 1, 0, 1, 0},
  {0, 1, 0, 0, 1}}}
g.array.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{{{0, 0},
   {1, 0}},

  {{1, 1},
   {1, 1}},

  {{1, 0},
   {1, 0}}},


 {{{1, 1},
   {0, 1}},

  {{0, 1},
   {1, 0}},

  {{0, 1},
   {1, 0}}},


 {{{1, 1},
   {0, 1}},

  {{1, 1},
   {1, 0}},

  {{1, 0},
   {1, 0}}},


 {{{0, 0},
   {1, 1}},

  {{0, 0},
   {0, 0}},

  {{1, 1},
   {0, 1}}}}
== OK ==
strDirect ..
{{{2, 1, 1, 1}, {2, 2, 3, 2}, {1, 2, 1, 3}, {3, 3, 3, 3}},
 {{3, 3, 3, 3}, {4, 3, 4, 3}, {4, 4, 4, 2}, {2, 3, 3, 1}},
 {{3, 5, 5, 3}, {5, 6, 6, 3}, {4, 3, 4, 3}, {4, 4, 5, 3}},
 {{4, 4, 4, 5}, {6, 3, 5, 2}, {3, 4, 3, 2}, {4, 3, 5, 4}}}
strTrainer ..
{{{2, 1, 1, 1}, {2, 2, 3, 2}, {1, 2, 1, 3}, {3, 3, 3, 3}},
 {{3, 3, 3, 3}, {4, 3, 4, 3}, {4, 4, 4, 2}, {2, 3, 3, 1}},
 {{3, 5, 5, 3}, {5, 6, 6, 3}, {4, 3, 4, 3}, {4, 4, 5, 3}},
 {{4, 4, 4, 5}, {6, 3, 5, 2}, {3, 4, 3, 2}, {4, 3, 5, 4}}}
------------------------------------------------------------------------------
target:[N, C, H, W] filter:[FN, C, FH, FW]
x ..
{{{{0, 0, 0, 0, 1},
   {0, 0, 1, 1, 0},
   {1, 1, 1, 0, 0},
   {0, 1, 0, 0, 1},
   {1, 1, 0, 1, 1}},

  {{1, 0, 0, 0, 1},
   {0, 1, 0, 0, 0},
   {1, 0, 1, 1, 0},
   {0, 1, 0, 1, 0},
   {0, 1, 1, 1, 0}},

  {{0, 1, 0, 1, 1},
   {0, 0, 0, 0, 0},
   {0, 1, 1, 1, 1},
   {1, 1, 0, 1, 0},
   {0, 1, 0, 0, 1}}},


 {{{0, 0, 1, 0, 1},
   {1, 1, 1, 1, 0},
   {1, 0, 1, 1, 0},
   {1, 0, 1, 1, 0},
   {0, 1, 1, 0, 1}},

  {{1, 0, 1, 1, 1},
   {1, 0, 1, 0, 1},
   {0, 0, 0, 1, 1},
   {0, 0, 0, 0, 1},
   {1, 0, 1, 0, 0}},

  {{1, 1, 1, 1, 0},
   {1, 1, 0, 1, 0},
   {0, 1, 0, 0, 0},
   {1, 0, 1, 0, 1},
   {0, 1, 1, 0, 0}}},


 {{{0, 1, 0, 0, 1},
   {1, 0, 1, 1, 0},
   {0, 0, 1, 0, 1},
   {0, 0, 1, 0, 0},
   {0, 1, 0, 0, 1}},

  {{1, 0, 1, 0, 0},
   {1, 1, 1, 0, 1},
   {0, 0, 1, 1, 1},
   {1, 1, 1, 1, 1},
   {0, 1, 0, 1, 1}},

  {{1, 0, 0, 1, 0},
   {1, 0, 0, 0, 0},
   {0, 0, 1, 1, 1},
   {0, 0, 0, 1, 1},
   {0, 1, 1, 0, 1}}}}
model .. x |*| g
x.shape .. [3, 3, 5, 5]
g .. <gear@conv2d:filter_num=4:channel_num=3:size=(2,2):strides=(1,1):padding=valid:channel_pos=first>
x.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{{{0, 0, 0, 0, 1},
   {0, 0, 1, 1, 0},
   {1, 1, 1, 0, 0},
   {0, 1, 0, 0, 1},
   {1, 1, 0, 1, 1}},

  {{1, 0, 0, 0, 1},
   {0, 1, 0, 0, 0},
   {1, 0, 1, 1, 0},
   {0, 1, 0, 1, 0},
   {0, 1, 1, 1, 0}},

  {{0, 1, 0, 1, 1},
   {0, 0, 0, 0, 0},
   {0, 1, 1, 1, 1},
   {1, 1, 0, 1, 0},
   {0, 1, 0, 0, 1}}},


 {{{0, 0, 1, 0, 1},
   {1, 1, 1, 1, 0},
   {1, 0, 1, 1, 0},
   {1, 0, 1, 1, 0},
   {0, 1, 1, 0, 1}},

  {{1, 0, 1, 1, 1},
   {1, 0, 1, 0, 1},
   {0, 0, 0, 1, 1},
   {0, 0, 0, 0, 1},
   {1, 0, 1, 0, 0}},

  {{1, 1, 1, 1, 0},
   {1, 1, 0, 1, 0},
   {0, 1, 0, 0, 0},
   {1, 0, 1, 0, 1},
   {0, 1, 1, 0, 0}}},


 {{{0, 1, 0, 0, 1},
   {1, 0, 1, 1, 0},
   {0, 0, 1, 0, 1},
   {0, 0, 1, 0, 0},
   {0, 1, 0, 0, 1}},

  {{1, 0, 1, 0, 0},
   {1, 1, 1, 0, 1},
   {0, 0, 1, 1, 1},
   {1, 1, 1, 1, 1},
   {0, 1, 0, 1, 1}},

  {{1, 0, 0, 1, 0},
   {1, 0, 0, 0, 0},
   {0, 0, 1, 1, 1},
   {0, 0, 0, 1, 1},
   {0, 1, 1, 0, 1}}}}
g.array.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{{{1, 1},
   {1, 0}},

  {{1, 1},
   {1, 0}},

  {{1, 0},
   {1, 1}}},


 {{{1, 1},
   {1, 1}},

  {{1, 0},
   {0, 0}},

  {{1, 1},
   {0, 1}}},


 {{{0, 0},
   {1, 0}},

  {{0, 1},
   {0, 1}},

  {{0, 1},
   {1, 1}}},


 {{{1, 1},
   {1, 0}},

  {{0, 1},
   {0, 0}},

  {{0, 1},
   {0, 1}}}}
== OK ==
strDirect ..
{{{{1, 2, 2, 1}, {2, 2, 0, 0}, {1, 3, 2, 2}, {4, 4, 3, 4}},
  {{4, 3, 3, 3}, {5, 5, 4, 3}, {6, 4, 4, 4}, {4, 2, 2, 2}},
  {{5, 6, 4, 4}, {7, 5, 4, 5}, {5, 5, 4, 4}, {4, 4, 2, 1}},
  {{5, 6, 5, 5}, {6, 4, 3, 2}, {2, 2, 3, 2}, {6, 6, 2, 3}}},

 {{{6, 6, 4, 3}, {5, 5, 5, 4}, {7, 7, 4, 5}, {6, 4, 4, 3}},
  {{6, 7, 3, 5}, {5, 4, 2, 3}, {4, 6, 3, 4}, {5, 3, 3, 3}},
  {{3, 3, 3, 3}, {3, 4, 1, 2}, {5, 4, 3, 4}, {5, 4, 4, 4}},
  {{4, 4, 1, 2}, {4, 5, 5, 4}, {6, 4, 2, 3}, {2, 3, 2, 3}}},

 {{{6, 4, 3, 2}, {3, 2, 2, 2}, {3, 4, 2, 2}, {3, 3, 2, 2}},
  {{4, 3, 1, 2}, {4, 4, 3, 3}, {7, 5, 4, 4}, {5, 3, 4, 3}},
  {{1, 0, 1, 0}, {3, 3, 3, 3}, {7, 6, 5, 5}, {7, 5, 5, 4}},
  {{3, 3, 3, 2}, {7, 4, 4, 4}, {4, 3, 4, 3}, {5, 5, 4, 3}}}}
strTrainer ..
{{{{1, 2, 2, 1}, {2, 2, 0, 0}, {1, 3, 2, 2}, {4, 4, 3, 4}},
  {{4, 3, 3, 3}, {5, 5, 4, 3}, {6, 4, 4, 4}, {4, 2, 2, 2}},
  {{5, 6, 4, 4}, {7, 5, 4, 5}, {5, 5, 4, 4}, {4, 4, 2, 1}},
  {{5, 6, 5, 5}, {6, 4, 3, 2}, {2, 2, 3, 2}, {6, 6, 2, 3}}},

 {{{6, 6, 4, 3}, {5, 5, 5, 4}, {7, 7, 4, 5}, {6, 4, 4, 3}},
  {{6, 7, 3, 5}, {5, 4, 2, 3}, {4, 6, 3, 4}, {5, 3, 3, 3}},
  {{3, 3, 3, 3}, {3, 4, 1, 2}, {5, 4, 3, 4}, {5, 4, 4, 4}},
  {{4, 4, 1, 2}, {4, 5, 5, 4}, {6, 4, 2, 3}, {2, 3, 2, 3}}},

 {{{6, 4, 3, 2}, {3, 2, 2, 2}, {3, 4, 2, 2}, {3, 3, 2, 2}},
  {{4, 3, 1, 2}, {4, 4, 3, 3}, {7, 5, 4, 4}, {5, 3, 4, 3}},
  {{1, 0, 1, 0}, {3, 3, 3, 3}, {7, 6, 5, 5}, {7, 5, 5, 4}},
  {{3, 3, 3, 2}, {7, 4, 4, 4}, {4, 3, 4, 3}, {5, 5, 4, 3}}}}
------------------------------------------------------------------------------
target:[H, W, C] filter:[FH, FW, C]
model .. x |*| g
x.shape .. [5, 5, 3]
g .. <gear@conv2d:filter_num=none:channel_num=3:size=(2,2):strides=(1,1):padding=valid:channel_pos=last>
x.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 1, 1}, {1, 0, 0}},
 {{0, 1, 0}, {0, 1, 1}, {1, 0, 1}, {1, 1, 0}, {0, 0, 1}},
 {{0, 1, 0}, {0, 0, 1}, {0, 1, 1}, {0, 0, 1}, {0, 1, 0}},
 {{0, 1, 1}, {1, 0, 0}, {1, 0, 1}, {1, 0, 0}, {0, 0, 0}},
 {{0, 1, 1}, {1, 1, 1}, {1, 0, 1}, {0, 0, 1}, {0, 0, 1}}}
g.array.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{{0, 0, 1}, {0, 1, 1}},
 {{1, 1, 1}, {0, 1, 0}}}
== OK ==
strDirect ..
{{3, 4, 6, 3},
 {3, 4, 4, 3},
 {3, 4, 4, 3},
 {4, 4, 3, 1}}
strTrainer ..
{{3, 4, 6, 3},
 {3, 4, 4, 3},
 {3, 4, 4, 3},
 {4, 4, 3, 1}}
------------------------------------------------------------------------------
target:[H, W, C] filter:[FN, FH, FW, C]
model .. x |*| g
x.shape .. [5, 5, 3]
g .. <gear@conv2d:filter_num=4:channel_num=3:size=(2,2):strides=(1,1):padding=valid:channel_pos=last>
x.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 1, 1}, {1, 0, 0}},
 {{0, 1, 0}, {0, 1, 1}, {1, 0, 1}, {1, 1, 0}, {0, 0, 1}},
 {{0, 1, 0}, {0, 0, 1}, {0, 1, 1}, {0, 0, 1}, {0, 1, 0}},
 {{0, 1, 1}, {1, 0, 0}, {1, 0, 1}, {1, 0, 0}, {0, 0, 0}},
 {{0, 1, 1}, {1, 1, 1}, {1, 0, 1}, {0, 0, 1}, {0, 0, 1}}}
g.array.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{{{0, 0, 1}, {0, 1, 1}},
  {{1, 1, 1}, {0, 1, 0}}},

 {{{1, 1, 0}, {1, 0, 1}},
  {{1, 0, 0}, {1, 1, 0}}},

 {{{1, 1, 0}, {1, 1, 1}},
  {{1, 0, 1}, {0, 1, 0}}},

 {{{0, 0, 1}, {1, 0, 0}},
  {{0, 0, 1}, {1, 0, 1}}}}
== OK ==
strDirect ..
{{{3, 1, 2, 1}, {4, 3, 4, 3}, {6, 5, 6, 3}, {3, 3, 3, 3}},
 {{3, 2, 3, 1}, {4, 4, 5, 4}, {4, 2, 4, 4}, {3, 4, 5, 1}},
 {{3, 3, 3, 2}, {4, 3, 3, 3}, {4, 4, 4, 3}, {3, 1, 2, 1}},
 {{4, 4, 4, 5}, {4, 5, 5, 4}, {3, 3, 4, 4}, {1, 1, 2, 2}}}
strTrainer ..
{{{3, 1, 2, 1}, {4, 3, 4, 3}, {6, 5, 6, 3}, {3, 3, 3, 3}},
 {{3, 2, 3, 1}, {4, 4, 5, 4}, {4, 2, 4, 4}, {3, 4, 5, 1}},
 {{3, 3, 3, 2}, {4, 3, 3, 3}, {4, 4, 4, 3}, {3, 1, 2, 1}},
 {{4, 4, 4, 5}, {4, 5, 5, 4}, {3, 3, 4, 4}, {1, 1, 2, 2}}}
------------------------------------------------------------------------------
target:[N, H, W, C] filter:[FN, FH, FW, C]
model .. x |*| g
x.shape .. [3, 5, 5, 3]
g .. <gear@conv2d:filter_num=4:channel_num=3:size=(2,2):strides=(1,1):padding=valid:channel_pos=last>
x.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{{{0, 0, 0}, {0, 1, 0}, {0, 1, 1}, {0, 1, 1}, {1, 0, 0}},
  {{0, 1, 0}, {0, 1, 1}, {1, 0, 1}, {1, 1, 0}, {0, 0, 1}},
  {{0, 1, 0}, {0, 0, 1}, {0, 1, 1}, {0, 0, 1}, {0, 1, 0}},
  {{0, 1, 1}, {1, 0, 0}, {1, 0, 1}, {1, 0, 0}, {0, 0, 0}},
  {{0, 1, 1}, {1, 1, 1}, {1, 0, 1}, {0, 0, 1}, {0, 0, 1}}},

 {{{0, 0, 1}, {0, 1, 1}, {1, 1, 1}, {0, 1, 0}, {1, 1, 0}},
  {{1, 0, 1}, {1, 0, 0}, {1, 1, 0}, {1, 1, 0}, {1, 1, 1}},
  {{1, 0, 1}, {0, 1, 0}, {0, 0, 1}, {1, 0, 0}, {0, 0, 1}},
  {{1, 0, 1}, {0, 0, 1}, {1, 1, 1}, {0, 1, 1}, {0, 1, 0}},
  {{0, 1, 0}, {0, 0, 1}, {0, 1, 0}, {1, 0, 1}, {1, 0, 0}}},

 {{{0, 1, 0}, {0, 1, 1}, {0, 1, 1}, {0, 0, 0}, {1, 0, 1}},
  {{0, 0, 1}, {0, 0, 0}, {1, 0, 0}, {1, 1, 0}, {1, 0, 0}},
  {{1, 1, 1}, {0, 1, 0}, {0, 1, 1}, {1, 1, 1}, {1, 1, 1}},
  {{0, 1, 0}, {1, 1, 1}, {0, 0, 1}, {0, 1, 0}, {0, 0, 0}},
  {{0, 0, 1}, {1, 1, 0}, {0, 0, 1}, {1, 0, 1}, {1, 0, 1}}}}
g.array.tostring(cond(g.channel_pos == `last, 2, 1)) ..
{{{{1, 1, 1}, {0, 1, 1}},
  {{1, 0, 1}, {0, 1, 1}}},

 {{{1, 1, 1}, {1, 1, 0}},
  {{0, 0, 1}, {1, 0, 1}}},

 {{{0, 0, 1}, {0, 0, 1}},
  {{0, 1, 0}, {1, 1, 1}}},

 {{{1, 1, 1}, {0, 0, 1}},
  {{0, 0, 0}, {1, 0, 1}}}}
== OK ==
strDirect ..
{{{{3, 2, 3, 1}, {5, 5, 4, 4}, {7, 5, 4, 4}, {4, 4, 3, 3}},
  {{4, 3, 3, 3}, {6, 5, 4, 4}, {5, 6, 3, 3}, {5, 3, 2, 3}},
  {{3, 3, 3, 3}, {5, 4, 4, 4}, {5, 4, 3, 4}, {3, 2, 1, 1}},
  {{5, 6, 5, 4}, {5, 5, 4, 4}, {5, 5, 2, 3}, {3, 3, 1, 2}}},

 {{{5, 4, 3, 3}, {6, 5, 4, 4}, {6, 5, 4, 4}, {5, 5, 4, 3}},
  {{5, 4, 2, 2}, {3, 4, 2, 2}, {4, 6, 1, 3}, {6, 5, 2, 4}},
  {{6, 5, 2, 3}, {5, 4, 4, 4}, {5, 4, 4, 2}, {4, 2, 3, 2}},
  {{4, 3, 4, 4}, {5, 4, 3, 2}, {6, 6, 5, 6}, {5, 5, 2, 3}}},

 {{{4, 3, 1, 2}, {4, 4, 3, 4}, {4, 3, 3, 3}, {2, 2, 3, 2}},
  {{4, 2, 3, 1}, {2, 2, 3, 1}, {5, 6, 4, 3}, {6, 6, 4, 4}},
  {{6, 6, 5, 5}, {6, 4, 3, 3}, {6, 5, 3, 3}, {5, 5, 3, 4}},
  {{5, 5, 3, 3}, {6, 4, 4, 5}, {4, 5, 3, 3}, {4, 4, 2, 3}}}}
strTrainer ..
{{{{3, 2, 3, 1}, {5, 5, 4, 4}, {7, 5, 4, 4}, {4, 4, 3, 3}},
  {{4, 3, 3, 3}, {6, 5, 4, 4}, {5, 6, 3, 3}, {5, 3, 2, 3}},
  {{3, 3, 3, 3}, {5, 4, 4, 4}, {5, 4, 3, 4}, {3, 2, 1, 1}},
  {{5, 6, 5, 4}, {5, 5, 4, 4}, {5, 5, 2, 3}, {3, 3, 1, 2}}},

 {{{5, 4, 3, 3}, {6, 5, 4, 4}, {6, 5, 4, 4}, {5, 5, 4, 3}},
  {{5, 4, 2, 2}, {3, 4, 2, 2}, {4, 6, 1, 3}, {6, 5, 2, 4}},
  {{6, 5, 2, 3}, {5, 4, 4, 4}, {5, 4, 4, 2}, {4, 2, 3, 2}},
  {{4, 3, 4, 4}, {5, 4, 3, 2}, {6, 6, 5, 6}, {5, 5, 2, 3}}},

 {{{4, 3, 1, 2}, {4, 4, 3, 4}, {4, 3, 3, 3}, {2, 2, 3, 2}},
  {{4, 2, 3, 1}, {2, 2, 3, 1}, {5, 6, 4, 3}, {6, 6, 4, 4}},
  {{6, 6, 5, 5}, {6, 4, 3, 3}, {6, 5, 3, 3}, {5, 5, 3, 4}},
  {{5, 5, 3, 3}, {6, 4, 4, 5}, {4, 5, 3, 3}, {4, 4, 2, 3}}}}

======== #5 backward propagation ========

------------------------------------------------------------------------------
x ..
{{7, 8, 7, 9, 4},
 {3, 6, 1, 7, 9},
 {5, 5, 7, 5, 7},
 {5, 8, 8, 8, 3},
 {9, 4, 8, 6, 2}}
y ..
{{8, 2, 8, 6, 4},
 {8, 7, 4, 1, 3},
 {3, 3, 6, 9, 9},
 {4, 4, 2, 5, 7},
 {5, 3, 9, 2, 3}}
x + y ..
{{15, 10, 15, 15,  8},
 {11, 13,  5,  8, 12},
 { 8,  8, 13, 14, 16},
 { 9, 12, 10, 13, 10},
 {14,  7, 17,  8,  5}}
training_rtn ..
{{15, 10, 15, 15,  8},
 {11, 13,  5,  8, 12},
 { 8,  8, 13, 14, 16},
 { 9, 12, 10, 13, 10},
 {14,  7, 17,  8,  5}}
x ..
{{7.1, 8.1, 7.1, 9.1, 4.1},
 {3.1, 6.1, 1.1, 7.1, 9.1},
 {5.1, 5.1, 7.1, 5.1, 7.1},
 {5.1, 8.1, 8.1, 8.1, 3.1},
 {9.1, 4.1, 8.1, 6.1, 2.1}}
y ..
{{8.1, 2.1, 8.1, 6.1, 4.1},
 {8.1, 7.1, 4.1, 1.1, 3.1},
 {3.1, 3.1, 6.1, 9.1, 9.1},
 {4.1, 4.1, 2.1, 5.1, 7.1},
 {5.1, 3.1, 9.1, 2.1, 3.1}}
------------------------------------------------------------------------------
x ..
{{7, 8, 7, 9, 4},
 {3, 6, 1, 7, 9},
 {5, 5, 7, 5, 7},
 {5, 8, 8, 8, 3},
 {9, 4, 8, 6, 2}}
y ..
{{8, 2, 8, 6, 4},
 {8, 7, 4, 1, 3},
 {3, 3, 6, 9, 9},
 {4, 4, 2, 5, 7},
 {5, 3, 9, 2, 3}}
x - y ..
{{-1,  6, -1,  3,  0},
 {-5, -1, -3,  6,  6},
 { 2,  2,  1, -4, -2},
 { 1,  4,  6,  3, -4},
 { 4,  1, -1,  4, -1}}
training_rtn ..
{{-1,  6, -1,  3,  0},
 {-5, -1, -3,  6,  6},
 { 2,  2,  1, -4, -2},
 { 1,  4,  6,  3, -4},
 { 4,  1, -1,  4, -1}}
x ..
{{7.1, 8.1, 7.1, 9.1, 4.1},
 {3.1, 6.1, 1.1, 7.1, 9.1},
 {5.1, 5.1, 7.1, 5.1, 7.1},
 {5.1, 8.1, 8.1, 8.1, 3.1},
 {9.1, 4.1, 8.1, 6.1, 2.1}}
y ..
{{7.9, 1.9, 7.9, 5.9, 3.9},
 {7.9, 6.9, 3.9, 0.9, 2.9},
 {2.9, 2.9, 5.9, 8.9, 8.9},
 {3.9, 3.9, 1.9, 4.9, 6.9},
 {4.9, 2.9, 8.9, 1.9, 2.9}}
------------------------------------------------------------------------------
x ..
{{7, 8, 7, 9, 4},
 {3, 6, 1, 7, 9},
 {5, 5, 7, 5, 7},
 {5, 8, 8, 8, 3},
 {9, 4, 8, 6, 2}}
y ..
{{8, 2, 8, 6, 4},
 {8, 7, 4, 1, 3},
 {3, 3, 6, 9, 9},
 {4, 4, 2, 5, 7},
 {5, 3, 9, 2, 3}}
x * y ..
{{56, 16, 56, 54, 16},
 {24, 42,  4,  7, 27},
 {15, 15, 42, 45, 63},
 {20, 32, 16, 40, 21},
 {45, 12, 72, 12,  6}}
training_rtn ..
{{56, 16, 56, 54, 16},
 {24, 42,  4,  7, 27},
 {15, 15, 42, 45, 63},
 {20, 32, 16, 40, 21},
 {45, 12, 72, 12,  6}}
x ..
{{7.8, 8.2, 7.8, 9.6, 4.4},
 {3.8, 6.7, 1.4, 7.1, 9.3},
 {5.3, 5.3, 7.6, 5.9, 7.9},
 {5.4, 8.4, 8.2, 8.5, 3.7},
 {9.5, 4.3, 8.9, 6.2, 2.3}}
y ..
{{8.7, 2.8, 8.7, 6.9, 4.4},
 {8.3, 7.6, 4.1, 1.7, 3.9},
 {3.5, 3.5, 6.7, 9.5, 9.7},
 {4.5, 4.8, 2.8, 5.8, 7.3},
 {5.9, 3.4, 9.8, 2.6, 3.2}}
------------------------------------------------------------------------------
x ..
{{7, 8, 7, 9, 4},
 {3, 6, 1, 7, 9},
 {5, 5, 7, 5, 7},
 {5, 8, 8, 8, 3},
 {9, 4, 8, 6, 2}}
y ..
{{8, 2, 8, 6, 4},
 {8, 7, 4, 1, 3},
 {3, 3, 6, 9, 9},
 {4, 4, 2, 5, 7},
 {5, 3, 9, 2, 3}}
x / y ..
{{   0.875,        4,    0.875,      1.5,        1},
 {   0.375, 0.857143,     0.25,        7,        3},
 { 1.66667,  1.66667,  1.16667, 0.555556, 0.777778},
 {    1.25,        2,        4,      1.6, 0.428571},
 {     1.8,  1.33333, 0.888889,        3, 0.666667}}
training_rtn ..
{{   0.875,        4,    0.875,      1.5,        1},
 {   0.375, 0.857143,     0.25,        7,        3},
 { 1.66667,  1.66667,  1.16667, 0.555556, 0.777778},
 {    1.25,        2,        4,      1.6, 0.428571},
 {     1.8,  1.33333, 0.888889,        3, 0.666667}}
x ..
{{ 7.0125,    8.05,  7.0125, 9.01667,   4.025},
 { 3.0125, 6.01429,   1.025,     7.1, 9.03333},
 {5.03333, 5.03333, 7.01667, 5.01111, 7.01111},
 {  5.025,   8.025,    8.05,    8.02, 3.01429},
 {   9.02, 4.03333, 8.01111,    6.05, 2.03333}}
y ..
{{7.98906,     1.8, 7.98906,   5.975,   3.975},
 {7.99531, 6.98776, 3.99375,     0.3,     2.9},
 {2.94444, 2.94444, 5.98056, 8.99383, 8.99136},
 {3.96875,    3.95,     1.8,   4.968, 6.99388},
 {  4.964, 2.95556, 8.99012,    1.85, 2.97778}}
------------------------------------------------------------------------------
x ..
{{7, 8, 7, 9, 4},
 {3, 6, 1, 7, 9},
 {5, 5, 7, 5, 7},
 {5, 8, 8, 8, 3},
 {9, 4, 8, 6, 2}}
y ..
{{8, 2, 8, 6, 4},
 {8, 7, 4, 1, 3},
 {3, 3, 6, 9, 9},
 {4, 4, 2, 5, 7},
 {5, 3, 9, 2, 3}}
x |.| y ..
{{197, 139, 184, 166, 190},
 {148, 106, 149,  86, 115},
 {156, 107, 175, 137, 154},
 {175, 131, 163, 156, 181},
 {162, 100, 166, 164, 168}}
training_rtn ..
{{197, 139, 184, 166, 190},
 {148, 106, 149,  86, 115},
 {156, 107, 175, 137, 154},
 {175, 131, 163, 156, 181},
 {162, 100, 166, 164, 168}}
x ..
{{ 9.8, 10.3,   10, 11.2,  6.2},
 { 5.8,  8.3,    4,  9.2, 11.2},
 { 7.8,  7.3,   10,  7.2,  9.2},
 { 7.8, 10.3,   11, 10.2,  5.2},
 {11.8,  6.3,   11,  8.2,  4.2}}
y ..
{{10.9,  4.9, 10.9,  8.9,  6.9},
 {11.1, 10.1,  7.1,  4.1,  6.1},
 { 6.1,  6.1,  9.1, 12.1, 12.1},
 { 7.5,  7.5,  5.5,  8.5, 10.5},
 { 7.5,  5.5, 11.5,  4.5,  5.5}}
------------------------------------------------------------------------------
x ..
{{7, 8, 7, 9, 4},
 {3, 6, 1, 7, 9},
 {5, 5, 7, 5, 7},
 {5, 8, 8, 8, 3},
 {9, 4, 8, 6, 2}}
+x ..
{{7, 8, 7, 9, 4},
 {3, 6, 1, 7, 9},
 {5, 5, 7, 5, 7},
 {5, 8, 8, 8, 3},
 {9, 4, 8, 6, 2}}
training_rtn ..
{{7, 8, 7, 9, 4},
 {3, 6, 1, 7, 9},
 {5, 5, 7, 5, 7},
 {5, 8, 8, 8, 3},
 {9, 4, 8, 6, 2}}
x ..
{{7.1, 8.1, 7.1, 9.1, 4.1},
 {3.1, 6.1, 1.1, 7.1, 9.1},
 {5.1, 5.1, 7.1, 5.1, 7.1},
 {5.1, 8.1, 8.1, 8.1, 3.1},
 {9.1, 4.1, 8.1, 6.1, 2.1}}
------------------------------------------------------------------------------
x ..
{{7, 8, 7, 9, 4},
 {3, 6, 1, 7, 9},
 {5, 5, 7, 5, 7},
 {5, 8, 8, 8, 3},
 {9, 4, 8, 6, 2}}
-x ..
{{-7, -8, -7, -9, -4},
 {-3, -6, -1, -7, -9},
 {-5, -5, -7, -5, -7},
 {-5, -8, -8, -8, -3},
 {-9, -4, -8, -6, -2}}
training_rtn ..
{{-7, -8, -7, -9, -4},
 {-3, -6, -1, -7, -9},
 {-5, -5, -7, -5, -7},
 {-5, -8, -8, -8, -3},
 {-9, -4, -8, -6, -2}}
x ..
{{6.9, 7.9, 6.9, 8.9, 3.9},
 {2.9, 5.9, 0.9, 6.9, 8.9},
 {4.9, 4.9, 6.9, 4.9, 6.9},
 {4.9, 7.9, 7.9, 7.9, 2.9},
 {8.9, 3.9, 7.9, 5.9, 1.9}}
------------------------------------------------------------------------------
x ..
{{7, 8, 7, 9, 4},
 {3, 6, 1, 7, 9},
 {5, 5, 7, 5, 7},
 {5, 8, 8, 8, 3},
 {9, 4, 8, 6, 2}}
y ..
{{2, 2, 2, 2, 1},
 {0, 1, 0, 2, 2},
 {1, 1, 2, 1, 2},
 {1, 2, 2, 2, 0},
 {2, 1, 2, 1, 0}}
x ** y ..
{{49, 64, 49, 81,  4},
 { 1,  6,  1, 49, 81},
 { 5,  5, 49,  5, 49},
 { 5, 64, 64, 64,  1},
 {81,  4, 64,  6,  1}}
training_rtn ..
{{49, 64, 49, 81,  4},
 { 1,  6,  1, 49, 81},
 { 5,  5, 49,  5, 49},
 { 5, 64, 64, 64,  1},
 {81,  4, 64,  6,  1}}
x ..
{{ 8.4,  9.6,  8.4, 10.8,  4.1},
 {   3,  6.1,    1,  8.4, 10.8},
 { 5.1,  5.1,  8.4,  5.1,  8.4},
 { 5.1,  9.6,  9.6,  9.6,    3},
 {10.8,  4.1,  9.6,  6.1,    2}}
y ..
{{   11.535,   15.3084,    11.535,   19.7975,   1.55452},
 { 0.109861,   2.07506,         0,    11.535,   19.7975},
 {  1.80472,   1.80472,    11.535,   1.80472,    11.535},
 {  1.80472,   15.3084,   15.3084,   15.3084,  0.109861},
 {  19.7975,   1.55452,   15.3084,   2.07506, 0.0693147}}
