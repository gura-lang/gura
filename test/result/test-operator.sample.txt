+ [`number, `complex, `matrix, `timedelta]
- [`number, `complex, `matrix, `timedelta]
~ [`number]
! [`any]
.. [`number]
+ [[`number, `number], [`complex, `number], [`pointer, `number], [`number, `complex], [`complex, `complex], [`string, `any], [`any, `string], [`string, `string], [`binary, `string], [`string, `binary], [`binary, `binary], [`matrix, `matrix], [`timedelta, `datetime], [`datetime, `timedelta], [`timedelta, `timedelta]]
- [[`number, `number], [`complex, `number], [`pointer, `number], [`number, `complex], [`complex, `complex], [`pointer, `pointer], [`matrix, `matrix], [`datetime, `datetime], [`datetime, `timedelta], [`timedelta, `timedelta], [`color, `color]]
* [[`number, `number], [`complex, `number], [`string, `number], [`binary, `number], [`timedelta, `number], [`number, `complex], [`complex, `complex], [`function, `any], [`matrix, `any], [`number, `string], [`number, `binary], [`matrix, `list], [`any, `matrix], [`list, `matrix], [`matrix, `matrix], [`number, `timedelta]]
/ [[`number, `number], [`complex, `number], [`number, `complex], [`complex, `complex], [`matrix, `any]]
% [[`number, `number]]
** [[`number, `number], [`complex, `number], [`number, `complex], [`complex, `complex]]
== [[`any, `any]]
!= [[`any, `any]]
> [[`any, `any]]
< [[`any, `any]]
>= [[`any, `any]]
<= [[`any, `any]]
<=> [[`any, `any]]
in [[`any, `any]]
| [[`any, `nil], [`boolean, `boolean], [`number, `number], [`nil, `any]]
& [[`any, `nil], [`boolean, `boolean], [`number, `number], [`nil, `any]]
^ [[`boolean, `boolean], [`number, `number]]
<< [[`number, `number], [`stream, `any]]
>> [[`number, `number]]
|| [[`any, `any]]
&& [[`any, `any]]
.. [[`number, `number]]
+A
-A
~A
!A
A..
A + A
A - A
A * A
A / A
A % A
A ** A
A == A
A != A
A > A
A < A
A >= A
A <= A
A <=> A
A in A
A | A
A & A
A ^ A
A << A
A >> A
A .. A
__getitem__ 3
__getitemx__
__setitem__ 3 2
__setitemx__ 2
__getprop__ b
__setprop__ b 2
hello world
hello world
2nd line
3rd line
hello world
nil | 3 .. 3
3 | nil .. 3
nil | nil .. nil
nil & 3 .. nil
3 & nil .. nil
nil & nil .. nil
2 in 2 .. true
2 in 3 .. false
2 in 0 .. 10 .. true
2 in 4 .. 10 .. false
2 in [0 .. 10] .. true
2 in [4 .. 10] .. false
0 .. 10 in 4 .. [false, false, false, false, true, false, false, false, false, false, false]
0 .. 10 in (-2) .. [false, false, false, false, false, false, false, false, false, false, false]
0 .. 10 in 0 .. 5 .. [true, true, true, true, true, true, false, false, false, false, false]
0 .. 10 in 4 .. 8 .. [false, false, false, false, true, true, true, true, true, false, false]
0 .. 10 in [0 .. 5] .. [true, true, true, true, true, true, false, false, false, false, false]
0 .. 10 in [4 .. 8] .. [false, false, false, false, true, true, true, true, true, false, false]
[0 .. 10] in 4 .. [false, false, false, false, true, false, false, false, false, false, false]
[0 .. 10] in (-2) .. [false, false, false, false, false, false, false, false, false, false, false]
[0 .. 10] in 0 .. 5 .. [true, true, true, true, true, true, false, false, false, false, false]
[0 .. 10] in 4 .. 8 .. [false, false, false, false, true, true, true, true, true, false, false]
[0 .. 10] in [0 .. 5] .. [true, true, true, true, true, true, false, false, false, false, false]
[0 .. 10] in [4 .. 8] .. [false, false, false, false, true, true, true, true, true, false, false]
a=1, b=2, c=3
a=1, b=2, c=[3, 4, 5]
a=1, b=2, c=[3, 4, 5]
a=1, b=2, c=[]
name = apple, cnt = 0
Fruit + number
Fruit - number
Fruit * number
Fruit / number
Fruit % number
Fruit ** number
number + Fruit
number - Fruit
number * Fruit
number / Fruit
number % Fruit
number ** Fruit
Fruit == number
Fruit != number
Fruit < number
Fruit > number
Fruit <= number
Fruit >= number
Fruit <=> number
Fruit | number
Fruit & number
Fruit .. number
false & false .. false
false & true .. false
true & false .. false
true & true .. true
false | false .. false
false | true .. true
true | false .. true
true | true .. true
false ^ false .. false
false ^ true .. true
true ^ false .. true
true ^ true .. false
false & false & false .. false
false & false & true .. false
false & true & false .. false
false & true & true .. false
true & false & false .. false
true & false & true .. false
true & true & false .. false
true & true & true .. true
false | false | false .. false
false | false | true .. true
false | true | false .. true
false | true | true .. true
true | false | false .. true
true | false | true .. true
true | true | false .. true
true | true | true .. true
false | true & false .. false
x .. [true, false, false, true, false, true, false, false, true, true]
y .. [true, false, false, true, false, false, false, false, true, true]
z .. [false, false, false, true, false, false, false, true, true, false]
x | y .. [true, false, false, true, false, true, false, false, true, true]
x & y .. [true, false, false, true, false, false, false, false, true, true]
x ^ y .. [false, false, false, false, false, true, false, false, false, false]
x | y | z .. [true, false, false, true, false, true, false, true, true, true]
x & y & z .. [false, false, false, true, false, false, false, false, true, false]
x ^ y ^ z .. [false, false, false, true, false, true, false, true, true, false]
f(a:number, b:number, c:number, d:number):map = format('%d-%d-%d-%d', a, b, c, d)
f % [1, 2, 3, 4] .. 1-2-3-4
f % [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]] .. ['1-4-7-10', '2-5-8-11', '3-6-9-12']
f * [1, 2, 3, 4] .. 1-2-3-4
f * [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16], [17, 18, 19, 20]] .. ['1-2-3-4', '5-6-7-8', '9-10-11-12', '13-14-15-16', '17-18-19-20']
f(a:number, b:number, c:number, d:number):map = a + b + c + d
f % [1, 2, 3, 4] .. 10
f % [[1, 2, 3], [4, 5, 6], [7, 8, 9], [10, 11, 12]] .. [22, 26, 30]
f * [1, 2, 3, 4] .. 10
f * [[1, 2, 3, 4], [5, 6, 7, 8], [9, 10, 11, 12], [13, 14, 15, 16], [17, 18, 19, 20]] .. [10, 26, 42, 58, 74]
