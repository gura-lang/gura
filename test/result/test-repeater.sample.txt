======== #1 ========

for() with localized variable: a = 0
for() with extenal variable: a = 10

======== #2 ========

dim(3) .. [nil, nil, nil]
dim(3) {|i| i } .. [0, 1, 2]
dim(3, 4) .. [[nil, nil, nil, nil], [nil, nil, nil, nil], [nil, nil, nil, nil]]
dim(3, 4) {|i, j| format('%d %d', i, j) } .. [['0 0', '0 1', '0 2', '0 3'], ['1 0', '1 1', '1 2', '1 3'], ['2 0', '2 1', '2 2', '2 3']]
dim(2, 3, 4) {|i, j, k| format('%d %d %d', i, j, k) } .. [[['0 0 0', '0 0 1', '0 0 2', '0 0 3'], ['0 1 0', '0 1 1', '0 1 2', '0 1 3'], ['0 2 0', '0 2 1', '0 2 2', '0 2 3']], [['1 0 0', '1 0 1', '1 0 2', '1 0 3'], ['1 1 0', '1 1 1', '1 1 2', '1 1 3'], ['1 2 0', '1 2 1', '1 2 2', '1 2 3']]]
dim(2, 2, 2, 2) {|i, j, k, l| format('%d %d %d %d', i, j, k, l) } .. [[[['0 0 0 0', '0 0 0 1'], ['0 0 1 0', '0 0 1 1']], [['0 1 0 0', '0 1 0 1'], ['0 1 1 0', '0 1 1 1']]], [[['1 0 0 0', '1 0 0 1'], ['1 0 1 0', '1 0 1 1']], [['1 1 0 0', '1 1 0 1'], ['1 1 1 0', '1 1 1 1']]]]
dim(2, 3, 4, 2) {|i, j, k, l| format('%d %d %d %d', i, j, k, l) } .. [[[['0 0 0 0', '0 0 0 1'], ['0 0 1 0', '0 0 1 1'], ['0 0 2 0', '0 0 2 1'], ['0 0 3 0', '0 0 3 1']], [['0 1 0 0', '0 1 0 1'], ['0 1 1 0', '0 1 1 1'], ['0 1 2 0', '0 1 2 1'], ['0 1 3 0', '0 1 3 1']], [['0 2 0 0', '0 2 0 1'], ['0 2 1 0', '0 2 1 1'], ['0 2 2 0', '0 2 2 1'], ['0 2 3 0', '0 2 3 1']]], [[['1 0 0 0', '1 0 0 1'], ['1 0 1 0', '1 0 1 1'], ['1 0 2 0', '1 0 2 1'], ['1 0 3 0', '1 0 3 1']], [['1 1 0 0', '1 1 0 1'], ['1 1 1 0', '1 1 1 1'], ['1 1 2 0', '1 1 2 1'], ['1 1 3 0', '1 1 3 1']], [['1 2 0 0', '1 2 0 1'], ['1 2 1 0', '1 2 1 1'], ['1 2 2 0', '1 2 2 1'], ['1 2 3 0', '1 2 3 1']]]]

======== #3 ========

[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]
[[1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [1, 3, 0], [1, 3, 1], [1, 3, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2], [2, 3, 0], [2, 3, 1], [2, 3, 2], [3, 1, 0], [3, 1, 1], [3, 1, 2], [3, 2, 0], [3, 2, 1], [3, 2, 2], [3, 3, 0], [3, 3, 1], [3, 3, 2]]
[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]
[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]
[[0, 0, 0], [0, 0, 1], [0, 0, 2], [0, 1, 0], [0, 1, 1], [0, 1, 2], [0, 2, 0], [0, 2, 1], [0, 2, 2], [1, 0, 0], [1, 0, 1], [1, 0, 2], [1, 1, 0], [1, 1, 1], [1, 1, 2], [1, 2, 0], [1, 2, 1], [1, 2, 2], [2, 0, 0], [2, 0, 1], [2, 0, 2], [2, 1, 0], [2, 1, 1], [2, 1, 2], [2, 2, 0], [2, 2, 1], [2, 2, 2]]

======== #4 ========

primes: 2,3,5,7,11,13,17,19,23,29,31,37,41,43,47,53,59,61,67,71,73,79,83,89,97,101,103,107,109,113,127,131,137,139,149,151,157,163,167,173,179,181,191,193,197,199,211,223,227,229,233,239,241,251,257,263,269,271,277,281,283,293,307,311,313,317,331,337,347,349,353,359,367,373,379,383,389,397,401,409,419,421,431,433,439,443,449,457,461,463,467,479,487,491,499,503,509,521,523,541

======== #5 ========


======== #6 ========

[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
[0, 2, 4, 6, 8, 10, 12, 14, 16, 18]
[0, 1, 2, 3]
[1, 3, 5, 7, 9]
[1, 3, 5, 7, 9]
[1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765]

======== #7 ========

[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
[0, 2, 4, 6, 8, 10, 12, 14, 16, 18]
[1, 2, 3, 4]
[1, 3, 5, 7, 9]
[1, 3, 5, 7, 9]
[1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765]

======== #8 ========

expected error occurs
expected error occurs

======== #9 ========

[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
[0, 2, 4, 6, 8, 10, 12, 14, 16, 18]
[0, 1, 2, 3]
[1, 3, 5, 7, 9]
[1, 3, 5, 7, 9]
[[1, 10, 0], [2, 9, 1.11111], [3, 8, 2.22222], [4, 7, 3.33333], [5, 6, 4.44444], [6, 5, 5.55556], [7, 4, 6.66667], [8, 3, 7.77778], [9, 2, 8.88889], [10, 1, 10]]
[1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765]

======== #10 ========

[[1, 1], [1, 2], [1, 3], [2, 1], [2, 2], [2, 3], [3, 1], [3, 2], [3, 3]]
[1, 2, 3, 2, 4, 6, 3, 6, 9]
[[1, 1], [1, 2], [1, 3], [2, 1]]
[[1, 2], [2, 1], [2, 3], [3, 2]]
[[1, 2], [2, 1], [2, 3], [3, 2]]
[[1, 1, 1, 1], [1, 1, 1, 2], [1, 1, 1, 3], [1, 1, 2, 1], [1, 1, 2, 2], [1, 1, 2, 3], [1, 1, 3, 1], [1, 1, 3, 2], [1, 1, 3, 3], [1, 2, 1, 1], [1, 2, 1, 2], [1, 2, 1, 3], [1, 2, 2, 1], [1, 2, 2, 2], [1, 2, 2, 3], [1, 2, 3, 1], [1, 2, 3, 2], [1, 2, 3, 3], [1, 3, 1, 1], [1, 3, 1, 2], [1, 3, 1, 3], [1, 3, 2, 1], [1, 3, 2, 2], [1, 3, 2, 3], [1, 3, 3, 1], [1, 3, 3, 2], [1, 3, 3, 3], [2, 1, 1, 1], [2, 1, 1, 2], [2, 1, 1, 3], [2, 1, 2, 1], [2, 1, 2, 2], [2, 1, 2, 3], [2, 1, 3, 1], [2, 1, 3, 2], [2, 1, 3, 3], [2, 2, 1, 1], [2, 2, 1, 2], [2, 2, 1, 3], [2, 2, 2, 1], [2, 2, 2, 2], [2, 2, 2, 3], [2, 2, 3, 1], [2, 2, 3, 2], [2, 2, 3, 3], [2, 3, 1, 1], [2, 3, 1, 2], [2, 3, 1, 3], [2, 3, 2, 1], [2, 3, 2, 2], [2, 3, 2, 3], [2, 3, 3, 1], [2, 3, 3, 2], [2, 3, 3, 3], [3, 1, 1, 1], [3, 1, 1, 2], [3, 1, 1, 3], [3, 1, 2, 1], [3, 1, 2, 2], [3, 1, 2, 3], [3, 1, 3, 1], [3, 1, 3, 2], [3, 1, 3, 3], [3, 2, 1, 1], [3, 2, 1, 2], [3, 2, 1, 3], [3, 2, 2, 1], [3, 2, 2, 2], [3, 2, 2, 3], [3, 2, 3, 1], [3, 2, 3, 2], [3, 2, 3, 3], [3, 3, 1, 1], [3, 3, 1, 2], [3, 3, 1, 3], [3, 3, 2, 1], [3, 3, 2, 2], [3, 3, 2, 3], [3, 3, 3, 1], [3, 3, 3, 2], [3, 3, 3, 3]]
[1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765]

======== #11 ========

0000
0001
0010
0011
0100
0101
0110
0111
1000
1001
1010
1011
1100
1101
1110
1111

======== #12 ========

a=1, b=2, c=[3, 4, 5, 6]
a=11, b=12, c=[13, 14, 15, 16]
a=21, b=22, c=[23, 24, 25, 26]
expected error occurs

======== #13 ========

(for ([x, y] in [[1, 3], [5, 7], [9, 11], [13, 15]]):list { format('%d-%d', x, y) }).join(' ') .. 1-3 5-7 9-11 13-15
(cross ([x, y] in [[1, 3], [5, 7], [9, 11], [13, 15]]):list { format('%d-%d', x, y) }).join(' ') .. 1-3 5-7 9-11 13-15

======== #14 ========

cross (x in ['alpha', 'beta', 'gamm'], y in 0 .. 2):list {|n, i, j| if (y != j) { printf('test failed\n'), sys.exit(1) }, format('%d:%d-%s:%d', i, j, x, y) } .. ['0:0-alpha:0', '0:1-alpha:1', '0:2-alpha:2', '1:0-beta:0', '1:1-beta:1', '1:2-beta:2', '2:0-gamm:0', '2:1-gamm:1', '2:2-gamm:2']
cross (x in ['alpha', 'beta', 'gamm'], y in 0 .. 2, z in 0 .. 2):list {|n, i, j, k| if (y != j || z != k) { printf('test failed\n'), sys.exit(1) }, format('%d:%d:%d-%s:%d:%d', i, j, k, x, y, z) } .. ['0:0:0-alpha:0:0', '0:0:1-alpha:0:1', '0:0:2-alpha:0:2', '0:1:0-alpha:1:0', '0:1:1-alpha:1:1', '0:1:2-alpha:1:2', '0:2:0-alpha:2:0', '0:2:1-alpha:2:1', '0:2:2-alpha:2:2', '1:0:0-beta:0:0', '1:0:1-beta:0:1', '1:0:2-beta:0:2', '1:1:0-beta:1:0', '1:1:1-beta:1:1', '1:1:2-beta:1:2', '1:2:0-beta:2:0', '1:2:1-beta:2:1', '1:2:2-beta:2:2', '2:0:0-gamm:0:0', '2:0:1-gamm:0:1', '2:0:2-gamm:0:2', '2:1:0-gamm:1:0', '2:1:1-gamm:1:1', '2:1:2-gamm:1:2', '2:2:0-gamm:2:0', '2:2:1-gamm:2:1', '2:2:2-gamm:2:2']
cross (x in ['alpha', 'beta', 'gamm'], y in 0 .. 2, z in 0 .. 2, w in 0 .. 1):list {|n, i, j, k, l| if (y != j || z != k || w != l) { printf('test failed\n'), sys.exit(1) }, format('%d:%d:%d:%d-%s:%d:%d:%d', i, j, k, l, x, y, z, w) } .. ['0:0:0:0-alpha:0:0:0', '0:0:0:1-alpha:0:0:1', '0:0:1:0-alpha:0:1:0', '0:0:1:1-alpha:0:1:1', '0:0:2:0-alpha:0:2:0', '0:0:2:1-alpha:0:2:1', '0:1:0:0-alpha:1:0:0', '0:1:0:1-alpha:1:0:1', '0:1:1:0-alpha:1:1:0', '0:1:1:1-alpha:1:1:1', '0:1:2:0-alpha:1:2:0', '0:1:2:1-alpha:1:2:1', '0:2:0:0-alpha:2:0:0', '0:2:0:1-alpha:2:0:1', '0:2:1:0-alpha:2:1:0', '0:2:1:1-alpha:2:1:1', '0:2:2:0-alpha:2:2:0', '0:2:2:1-alpha:2:2:1', '1:0:0:0-beta:0:0:0', '1:0:0:1-beta:0:0:1', '1:0:1:0-beta:0:1:0', '1:0:1:1-beta:0:1:1', '1:0:2:0-beta:0:2:0', '1:0:2:1-beta:0:2:1', '1:1:0:0-beta:1:0:0', '1:1:0:1-beta:1:0:1', '1:1:1:0-beta:1:1:0', '1:1:1:1-beta:1:1:1', '1:1:2:0-beta:1:2:0', '1:1:2:1-beta:1:2:1', '1:2:0:0-beta:2:0:0', '1:2:0:1-beta:2:0:1', '1:2:1:0-beta:2:1:0', '1:2:1:1-beta:2:1:1', '1:2:2:0-beta:2:2:0', '1:2:2:1-beta:2:2:1', '2:0:0:0-gamm:0:0:0', '2:0:0:1-gamm:0:0:1', '2:0:1:0-gamm:0:1:0', '2:0:1:1-gamm:0:1:1', '2:0:2:0-gamm:0:2:0', '2:0:2:1-gamm:0:2:1', '2:1:0:0-gamm:1:0:0', '2:1:0:1-gamm:1:0:1', '2:1:1:0-gamm:1:1:0', '2:1:1:1-gamm:1:1:1', '2:1:2:0-gamm:1:2:0', '2:1:2:1-gamm:1:2:1', '2:2:0:0-gamm:2:0:0', '2:2:0:1-gamm:2:0:1', '2:2:1:0-gamm:2:1:0', '2:2:1:1-gamm:2:1:1', '2:2:2:0-gamm:2:2:0', '2:2:2:1-gamm:2:2:1']

======== #15 ========

t = [0, 5, 2, 1, 5, 9, 9, 9, 9, 9, 1, nil, 9, 9, 9, 1, 4, 7, 8, 2, 1, 0, nil, 1, 9, 6, 7, 8, 9, 5]
list:  [0, 5, 2, 1, 5, 9, 9, 9, 9, 9, 1, nil, 9, 9, 9, 1, 4, 7, 8, 2, 1, 0, nil, 1, 9, 6, 7, 8, 9, 5]
xlist: [0, 5, 2, 1, 5, 9, 9, 9, 9, 9, 1, 9, 9, 9, 1, 4, 7, 8, 2, 1, 0, 1, 9, 6, 7, 8, 9, 5]
set:   [0, 5, 2, 1, 9, nil, 4, 7, 8, 6]
xset:  [0, 5, 2, 1, 9, 4, 7, 8, 6]

======== #16 ========

2
4
6
0 is less than 3
1 is less than 3
2 is less than 3
3 is less than 6
4 is less than 6
5 is less than 6
6 is greater than 5
7 is greater than 5
8 is greater than 5
9 is greater than 5
10 is greater than 5

======== #17 ========

entry-1 30
entry-2 23
entry-3 29
entry-4 34
entry-1 30
entry-2 23
entry-3 29
entry-4 34

======== #18 ========

hello
hello
hello
hello
hello
['hello', 'hello', 'hello', 'hello']
['hello 0', '#', 'hello 2', '#', 'hello 4', '#', 'hello 6', '#', 'hello 8', '#']

======== #19 ========

  0  1  2  3  6  8  9
[1, 2, 3, 4, 5, 6, 7, 8, 9]
[1, '#', 3, 4, '#', 6, '#', 8, 9, '#']

======== #20 ========

  1  3  5  7  9
[1, 2, 4, 5, 7, 8, 10]
[1, 2, '#', 4, 5, '#', 7, 8, '#', 10]

======== #21 ========

f(2) .. nil
f(3) .. here
g(2) .. nil
g(3) .. here
h(2) .. nil

======== #22 ========

x is less than three.
x is greater than or equal to three.
return test in a nested loop
[0,0,0,1], [0,0,0,3], [0,0,0,-1], [0,0,0,2], [0,0,0,3], [0,0,0,4]
[0,0,1,1], [0,0,1,3], [0,0,1,-1], [0,0,1,2], [0,0,1,3], [0,0,1,4]
[0,0,2,1], [0,0,2,3], [0,0,2,-1], [0,0,2,2], [0,0,2,3], [0,0,2,4]
[0,0,3,1], [0,0,3,3], [0,0,3,-1], [0,0,3,2], [0,0,3,3], [0,0,3,4]
[0,0,4,1], [0,0,4,3], [0,0,4,-1], [0,0,4,2], [0,0,4,3], [0,0,4,4]
[0,1,0,1], [0,1,0,3], [0,1,0,-1], [0,1,0,2], [0,1,0,3], [0,1,0,4]
[0,1,1,1], [0,1,1,3], [0,1,1,-1], [0,1,1,2], [0,1,1,3], [0,1,1,4]
[0,1,2,1], [0,1,2,3], [0,1,2,-1], [0,1,2,2], [0,1,2,3], [0,1,2,4]
[0,1,3,1], [0,1,3,3], [0,1,3,-1], [0,1,3,2], [0,1,3,3], [0,1,3,4]
[0,1,4,1], [0,1,4,3], [0,1,4,-1], [0,1,4,2], [0,1,4,3], [0,1,4,4]
[0,2,0,1], [0,2,0,3], [0,2,0,-1], [0,2,0,2], [0,2,0,3], [0,2,0,4]
[0,2,1,1], [0,2,1,3], [0,2,1,-1], [0,2,1,2], [0,2,1,3], [0,2,1,4]
[0,2,2,1], [0,2,2,3], [0,2,2,-1], [0,2,2,2], [0,2,2,3], [0,2,2,4]
[0,2,3,1], [0,2,3,3], [0,2,3,-1], [0,2,3,2], [0,2,3,3], [0,2,3,4]
[0,2,4,1], [0,2,4,3], [0,2,4,-1], [0,2,4,2], [0,2,4,3], [0,2,4,4]
[0,3,0,1], [0,3,0,3], [0,3,0,-1], [0,3,0,2], [0,3,0,3], [0,3,0,4]
[0,3,1,1], [0,3,1,3], [0,3,1,-1], [0,3,1,2], [0,3,1,3], [0,3,1,4]
[0,3,2,1], [0,3,2,3], [0,3,2,-1], [0,3,2,2], [0,3,2,3], [0,3,2,4]
[0,3,3,1], [0,3,3,3], [0,3,3,-1], [0,3,3,2], [0,3,3,3], [0,3,3,4]
[0,3,4,1], [0,3,4,3], [0,3,4,-1], [0,3,4,2], [0,3,4,3], [0,3,4,4]
[0,4,0,1], [0,4,0,3], [0,4,0,-1], [0,4,0,2], [0,4,0,3], [0,4,0,4]
[0,4,1,1], [0,4,1,3], [0,4,1,-1], [0,4,1,2], [0,4,1,3], [0,4,1,4]
[0,4,2,1], [0,4,2,3], [0,4,2,-1], [0,4,2,2], [0,4,2,3], [0,4,2,4]
[0,4,3,1], [0,4,3,3], [0,4,3,-1], [0,4,3,2], [0,4,3,3], [0,4,3,4]
[0,4,4,1], [0,4,4,3], [0,4,4,-1], [0,4,4,2], [0,4,4,3], [0,4,4,4]
[1,0,0,1], [1,0,0,3], [1,0,0,-1], [1,0,0,2], [1,0,0,3], [1,0,0,4]
[1,0,1,1], [1,0,1,3], [1,0,1,-1], [1,0,1,2], [1,0,1,3], [1,0,1,4]
[1,0,2,1], [1,0,2,3], [1,0,2,-1], [1,0,2,2], [1,0,2,3], [1,0,2,4]
[1,0,3,1], [1,0,3,3], [1,0,3,-1], [1,0,3,2], [1,0,3,3], [1,0,3,4]
[1,0,4,1], [1,0,4,3], [1,0,4,-1], [1,0,4,2], [1,0,4,3], [1,0,4,4]
[1,1,0,1], [1,1,0,3], [1,1,0,-1], [1,1,0,2], [1,1,0,3], [1,1,0,4]
[1,1,1,1], [1,1,1,3], [1,1,1,-1], [1,1,1,2], [1,1,1,3], [1,1,1,4]
[1,1,2,1], [1,1,2,3], [1,1,2,-1], [1,1,2,2], [1,1,2,3], [1,1,2,4]
[1,1,3,1], [1,1,3,3], [1,1,3,-1], [1,1,3,2], [1,1,3,3], [1,1,3,4]
[1,1,4,1], [1,1,4,3], [1,1,4,-1], [1,1,4,2], [1,1,4,3], [1,1,4,4]
[1,2,0,1], [1,2,0,3], [1,2,0,-1], [1,2,0,2], [1,2,0,3], [1,2,0,4]
[1,2,1,1], [1,2,1,3], [1,2,1,-1], [1,2,1,2], [1,2,1,3], [1,2,1,4]
[1,2,2,1], [1,2,2,3], [1,2,2,-1]

======== #23 ========

 hello hello hello hello hello hello hello hello hello hello
[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]
[17, 13, 6, 0, 6, 4, 5, 11, 17, 17, 8, 7, 4, 8, 14, 9, 5, 19, 3, 4]
 1 4 9 16 25 36 49 64 81
 1 2 3 4 5 6 7 8 9
 2 4 6 8 10 12 14 16 18
 3 6 9 12 15 18 21 24 27
 4 8 12 16 20 24 28 32 36
 5 10 15 20 25 30 35 40 45
 6 12 18 24 30 36 42 48 54
 7 14 21 28 35 42 49 56 63
 8 16 24 32 40 48 56 64 72
 9 18 27 36 45 54 63 72 81
 1 2 3 4 5 6 7 8 9 2 4 6 8 10 12 14 16 18 3 6 9 12 15 18 21 24 27 4 8 12 16 20 24 28 32 36 5 10 15 20 25 30 35 40 45 6 12 18 24 30 36 42 48 54 7 14 21 28 35 42 49 56 63 8 16 24 32 40 48 56 64 72 9 18 27 36 45 54 63 72 81
--
[8, 6, 6, 7, 4, 9, 5, 2, 6, 8]

======== #24 ========

it's successful if you see an error below ;-)
expected error happens

======== #25 ========

0
1
2
0
1
2
3
0
1
2
3
4

======== #26 ========

 0 January
 1 February
 2 March
 3 April
 4 May
 5 June
 6 July
 7 August
 8 September
 9 October
10 November
11 December
 0  0 January
 1  1 June
 2  6 July

======== #27 ========

  0   0   0   0   0   0
 16   1   2   4   8  16
 32   2   4   8  16  32
 48   3   6  12  24  48
 64   4   8  16  32  64
 80   5  10  20  40  80
 96   6  12  24  48  96
112   7  14  28  56 112
128   8  16  32  64 128
144   9  18  36  72 144
160  10  20  40  80 160
176  11  22  44  88 176
192  12  24  48  96 192
208  13  26  52 104 208
224  14  28  56 112 224
240  15  30  60 120 240
256  16  32  64 128 256
272  17  34  68 136 272
288  18  36  72 144 288
304  19  38  76 152 304
320  20  40  80 160 320
336  21  42  84 168 336
352  22  44  88 176 352
368  23  46  92 184 368
384  24  48  96 192 384
400  25  50 100 200 400
416  26  52 104 208 416
432  27  54 108 216 432
448  28  56 112 224 448
464  29  58 116 232 464
480  30  60 120 240 480
496  31  62 124 248 496
512  32  64 128 256 512
