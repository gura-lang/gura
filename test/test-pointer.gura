#!/usr/bin/env gura
import(helper.test) {*}

testcase('operator on pointer - 1') {
	f(p:pointer) = {
		tester(`(p + 0))
		tester(`(p + 1))
		tester(`(p + 2))
		tester(`(p + 100))
		p.offset = 100
		println(p)
		tester(`p.pack('b', 22))
		p += 3
		println(p)
		p -= 100
	}
	f(binary())
	f(memory(100))
}
testcase('operator on pointer - 2') {
	f(p1:pointer, p2:pointer) = {
		tester(`(p1 - p2))
	}
	m1 = memory(100), m2 = memory(100)
	b1 = binary(), b2 = binary()
	f(b1.pointer(10), b1.pointer(3))
	f(b1.pointer(3), b1.pointer(10))
	f(b1, b2)
	f(m1, m2)
	f(b1, m2)
	f(m1, b2)
}
testcase('pointer#size') {
	m = memory(100)
	p = m.p
	tester(`p.size)
	tester(`(p + 20).size)
	tester(`(p + 40).size)
	tester(`(p + 60).size)
	tester(`(p + 80).size)
	tester(`(p + 100).size)
	tester(`(p + 120).size)
}
testcase('pointer#offset') {
	m = memory(100)
	p = m.p
	tester(`p.offset)
	tester(`(p + 20).offset)
	tester(`(p + 40).offset)
	tester(`(p + 60).offset)
	tester(`(p + 80).offset)
	tester(`(p + 100).offset)
	tester(`(p + 120).offset)
}
testcase('pointer#get@*()') {
	f(expr:expr) = {
		println(expr)
		p = buff.p
		x = while (n = expr.eval()):iter {format('%016x', n)}.fold(4):*join(' ')
		println(x)
	}
	buff = binary()
	buff.p.pack('256B', [0..255]*)
	f(`p.get@char():nil)
	f(`p.get@uchar():nil)
	f(`p.get@short():nil)
	f(`p.get@ushort():nil)
	f(`p.get@int32():nil)
	f(`p.get@uint32():nil)
	//f(`p.get@int64():nil)
	//f(`p.get@uint64():nil)
}
testcase('not-writable binary') {
	tester(`b''.p.put@char(0))
	tester(`b''.p.pack('b', 0))
}
testcase('pointer() constructor') {
	b = binary()
	pointer(b).pack('4i', 0, 1, 2, 3)
	b.dump()
	m = memory(16)
	pointer(m).pack('4i', 0, 1, 2, 3)
	m.dump()
}
testcase('pointer#hex()') {
	buff = binary()
	buff.p.pack('256B', [0..255]*)
	p = buff.pointer(0xa0)
	tester(`p.hex(16))
	tester(`p.hex(16):upper)
	tester(`p.hex(16):cstr)
	tester(`p.hex(16):cstr:upper)
	tester(`p.hex(16):carray)
	tester(`p.hex(16):carray:upper)
}
testcase('pointer#each@T()') {
	buff = b'\x01\x23\x45\x67\x89\xab\xcd\ef\xfe\xdc\xba\x98\x76\x54\x32\x10'
	tester(`buff.p.each@char():list)
	tester(`buff.p.each@uchar():list)
	tester(`buff.p.each@short():list)
	tester(`buff.p.each@ushort():list)
	tester(`buff.p.each@int32():list)
	tester(`buff.p.each@uint32():list)
	tester(`buff.p.each@char():be:list)
	tester(`buff.p.each@uchar():be:list)
	tester(`buff.p.each@short():be:list)
	tester(`buff.p.each@ushort():be:list)
	tester(`buff.p.each@int32():be:list)
	tester(`buff.p.each@uint32():be:list)
}
testcase('pointer#head() and pointer#tail()') {
	f(p:pointer) = {
		println(p.tail())
		p -= 24, println(p)
		println(p.head())
		println(p.seek(78))
	}
	f(binary.alloc(100))
	f(memory(100))
}
