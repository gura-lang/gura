#!/usr/bin/env gura
import(helper.test) {*}

testcase('operator on pointer - 1') {
	f(p:pointer) = {
		tester(`(p + 0))
		tester(`(p + 1))
		tester(`(p + 2))
		tester(`(p + 100))
		p.offset = 100
		println(p)
		tester(`p.pack('b', 22))
		p += 3
		println(p)
		p -= 100
	}
	f(binary())
	f(memory(100))
}
testcase('operator on pointer - 2') {
	f(p1:pointer, p2:pointer) = {
		tester(`(p1 - p2))
	}
	m1 = memory(100), m2 = memory(100)
	b1 = binary(), b2 = binary()
	f(b1.pointer(10), b1.pointer(3))
	f(b1.pointer(3), b1.pointer(10))
	f(b1, b2)
	f(m1, m2)
	f(b1, m2)
	f(m1, b2)
}
