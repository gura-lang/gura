#!/usr/bin/env gura
import(testutil) {*}

testcase {
	x = [3, 3 + 4j, 2 + 3j, 1 + 1j, 1 + math.sqrt(3) * 1j]
	printf('%s .. real=%d imag=%d abs=%f arg=%f arg:deg=%f\n', x, x:*real, x:*imag, x:*abs, x:*arg, x:*arg:deg)
	tester(`(1e-12j).roundoff())
	tester(`(3+1e-12j).roundoff())
	tester(`(1e-12+1e-12j).roundoff())
	tester(`(1e-12+4j).roundoff())
	tester(`(-1e-12-4j).roundoff())
	tester(`(-1e-12-1e-12j).roundoff())
}
testcase {
	[
		`((1 - 3j) - (2 - 5j))
		`((2 + 3j) * (1 - 1j))
		`((1 - 1j) ** 2)
		`(1j ** 3 + 1j ** 4 + 1j ** 5 + 1j ** 6)
		`((3 - 2j) / 1j)
		`((2 + 4j) / (1 + 1j))
		`((2 + 3j) ** 2)
		`((1 + 2j) ** 2 + (1 - 2j) ** 2)
		`((1 + 1j) ** 3)
		`((1 + 1j) * (1 - 2j) * (1 + 3j))
		`(1j ** 20)
		`(1j + (1 / 1j))
		`((1 - 1j) / (1 + 1j) + (1 + 1j) / (1 - 1j))
		`(1 / 1j ** 3)
		`(2j / (1 + 1j))
		`(2 / (1 - 1j) ** 2)
	].each {|test|
		printf('%s .. %s\n', test, test.eval().roundoff()):nomap
	}
}
