#!/usr/bin/env gura
import(helper.test) {*}

testcase('number.min@T, number.max@T') {
	printf('min@char .. %d\n', number.min@char)
	printf('max@char .. %d\n', number.max@char)
	printf('min@uchar .. %d\n', number.min@uchar)
	printf('max@uchar .. %d\n', number.max@uchar)
	printf('min@short .. %d\n', number.min@short)
	printf('max@short .. %d\n', number.max@short)
	printf('min@ushort .. %d\n', number.min@ushort)
	printf('max@ushort .. %d\n', number.max@ushort)
	printf('min@int32 .. %d\n', number.min@int32)
	printf('max@int32 .. %d\n', number.max@int32)
	printf('min@uint32 .. %d\n', number.min@uint32)
	printf('max@uint32 .. %d\n', number.max@uint32)
}
testcase('number.size@T') {
	printf('size@char .. %d\n', number.size@char)
	printf('size@uchar .. %d\n', number.size@uchar)
	printf('size@short .. %d\n', number.size@short)
	printf('size@ushort .. %d\n', number.size@ushort)
	printf('size@int32 .. %d\n', number.size@int32)
	printf('size@uint32 .. %d\n', number.size@uint32)
	printf('size@int64 .. %d\n', number.size@int64)
	printf('size@uint64 .. %d\n', number.size@uint64)
	printf('size@float .. %d\n', number.size@float)
	printf('size@double .. %d\n', number.size@double)
}
