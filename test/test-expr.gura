#!/usr/bin/env gura
import(testutil) {*}

testcase {
	shortBool(flag:boolean) = cond(flag, 'y', 'n')
	for (test in [`(-x), `(`x), `(x*), `(x + y), `(x = y),
	              `(x => y), `(x::y), `{}, `3, `[], `x[y], `x(y, z)]) {
		printf('%-8s %s %s %s %s %s %s %s %s %s %s %s\n', test.tostring(),
				shortBool(test.isunaryop()),
				shortBool(test.isquote()),
				shortBool(test.isbinaryop()),
				shortBool(test.isassign()),
				shortBool(test.ismember()),
				shortBool(test.isblock()),
				shortBool(test.islister()),
				shortBool(test.isvalue()),
				shortBool(test.isidentifier()),
				shortBool(test.isindexer()),
				shortBool(test.iscaller()))
	}
}
testcase {
	x = [
		`(-3)
		`(3 + 4)
		`(f(x))
		`(f(x) = {})
		`(f(x) = {|a, b| c})
		`(f(x):attr)[0]
	]
	printf('%-16s %s\n', x:*typename, x:*textize(`oneline))
}
testcase {
	x = [
		`'0123456789012345678901234567890123456789'
		`b'0123456789012345678901234567890123456789'
	]
	println(x:*textize(`oneline))
	println(x:*textize(`brief))
}
