#!/usr/bin/env gura
import(gif)
import(helper.test) {*}

testcase {
	colors = [
		color.black
		color.maroon
		color.green
		color.olive
		color.navy
		color.purple
		color.teal
		color.gray
		color.silver
		color.red
		color.lime
		color.yellow
		color.blue
		color.fuchsia
		color.aqua
		color.white
		color.zero
	]
	//println(colors)
	printf('#%02x%02x%02x %02x .. gray:%d\n', colors:*r, colors:*g, colors:*b, colors:*a, colors:*getgray())
}
testcase {
	['red', `blue, [128, 128, 0], [255, 255, 255, 64]].each() {|d|
		c:color = d
		println(c)
	}
}
testcase {
	plt = palette(8)
	plt[0..] = [`black, `blue, `lime, `aqua, `red, `fuchsia, `yellow, `white]
	println(plt.each():*html().join(','))
	plt[0..] = [`black, `blue, `lime, `aqua, `red, `fuchsia, `yellow, `white].reverse()
	println(plt.each():*html().join(','))
}
testcase {
	tester(`palette(2).each():*html().join(','))
	tester(`palette(4).each():*html().join(','))
	tester(`palette(8).each():*html().join(','))
	tester(`palette(16).each():*html().join(','))
	tester(`palette(32).each():*html().join(','))
	tester(`palette(64).each():*html().join(','))
	tester(`palette(128).each():*html().join(','))
	tester(`palette(256).each():*html().join(','))
	tester(`palette(`basic).each():*html().join(','))
	tester(`palette(`win256).each():*html().join(','))
	tester(`palette(`websafe).each():*html().join(','))
}
testcase('color() with function applier') {
	tester(`(color * [1]))
	tester(`(color * [1, 2]))
	tester(`(color * [1, 2, 3]))
	tester(`(color * [1, 2, 3, 4]))
	tester(`(color * [1, 2, 3, 4, 5]))
	tester(`(color * [[1, 2, 3], [4, 5, 6], [7, 8, 9], [13, 14, 15, 16]]))
}
testcase {
	plt = palette(256)
	plt.updateby(palette(`basic))
	println(plt.each():*html().join(','))
	plt.updateby(palette(`win256))
	println(plt.each():*html().join(','))
	plt = palette(256)
	plt.updateby(palette(`basic)):shrink:align
	println(plt.each():*html().join(','))
	plt = palette(256)
	plt.updateby(image(I('kangaroo.gif'), `rgb))
	println(plt.each():*html().join(','))
	plt.shrink():align
	println(plt.each():*html().join(','))
	try {
		plt = palette(16)
		plt.updateby(image(I('kangaroo.gif'), `rgb))
	} catch {|e|
		println('expected error occurs: ', e.text)
	}
	plt = palette(`win256)
	plt2 = plt.clone()
	plt2[0, 1, 2, 3] = color(`red)
	println(plt.each():*html().join(','))
	println(plt2.each():*html().join(','))
}
testcase {
	plt = palette(`basic)
	tester(`plt.each()::tolist())
	tester(`plt.each()::tolist():alpha)
}
testcase {
	plt = palette(`basic)
	names = @{
		`black, `maroon, `green, `olive, `navy, `purple, `teal, `gray,
		`silver, `red, `lime, `yellow, `blue, `fuchsia, `aqua, `white,
		'#ff0000', '#00ff00', '#0000ff', '#123456', '#123',
	}
	printf('%-*s %s %d\n', names:*tostring():*len().max(),
						names, color(names), plt.nearest(color(names)):index)
}
testcase('error in color()') {
	tester(`color())
	tester(`color(0))
	tester(`color(0, 0))
	tester(`color(0, 0, 0))
	tester(`color(0, 0, 0, 0))
	tester(`color(0, 0, 0, 'b'))
	tester(`color(0, 0, 'b'))
	tester(`color(0, 'a', 'b'))
}
