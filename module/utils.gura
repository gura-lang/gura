#!/usr/bin/env gura
//=============================================================================
// utils
// Utility functions and classes for Gura script
//=============================================================================
Aligner = class {
	__init__(strs[]:string, wdTab => 4) = {
		this.wdTab = wdTab
		this.nTabs = int(strs:*len().max() / this.wdTab) + 1
	}
	tab(str:string):map = {
		'\t' * (this.nTabs - int(str.len() / this.wdTab))
	}
}

__pushback_context = class {
	__init__() = {
		this.pushbackFlag = true
	}
	Pushback() = {
		this.pushbackFlag = true
	}
	Cancel() = {
		this.pushbackFlag = false
	}
	ShouldContinue() = {
		this.pushbackFlag
	}
}

pushback() {block} = {
	pb = __pushback_context()
	while (pb.ShouldContinue()) {
		pb.Cancel()
		block(pb)
	}
}

if (__name__ == '__main__') {
	lines = [
		'0'
		'01'
		'012'
		'0123'
		'01234'
		'012345'
		'0123456'
		'01234567'
		'012345678'
		'0123456789'
		'01234567890'
		'012345678901'
		'0123456789012'
		'01234567890123'
		'012345678901234'
		'0123456789012345'
		'01234567890123456'
		'012345678901234567'
		'0123456789012345678'
		'01234567890123456789'
	]
	Aligner(lines) {|aligner|
		println(lines, aligner.tab(lines), '.. alinged')
	}
}
