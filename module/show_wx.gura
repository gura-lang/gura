#!/usr/bin/env gura
//-----------------------------------------------------------------------------
// image#show() implementation using tk
//-----------------------------------------------------------------------------
import(wx)

Panel = class(wx.Panel) {
	__init__(parent:wx.Window) = {|parent|
		vbox = wx.BoxSizer(wx.VERTICAL)
		this.SetSizer(vbox)
		wx.ScrolledWindow(this, style => wx.BORDER_SUNKEN | wx.HSCROLL | wx.VSCROLL) {|panel|
			vbox.Add(panel, wx.SizerFlags(1).Expand().Border(wx.TOP, 2))
			panel.SetScrollRate(10, 10)
			panel.SetVirtualSizeWH(this.image.width, this.image.height)
			panel.Bind(wx.EVT_ERASE_BACKGROUND) {} // nothing to do
			panel.Bind(wx.EVT_PAINT) {|event|
				try {
					wx.PaintDC(panel) {|dc|
						panel.PrepareDC(dc)
						size = panel.GetClientSize()
						dc.DrawBitmap(this.imageFrame, 0, 0, false)
					}
				} except {|e|
					println(e)
				}
			}
			panel.Bind(wx.EVT_SIZE) {|event|
				size = event.GetSize()
				if (this.image.width < size.GetWidth() || \
										this.image.height < size.GetHeight()) {
					wdFrame = max(this.image.width, size.GetWidth())
					htFrame = max(this.image.height, size.GetHeight())
					this.imageFrame = image(`rgb, wdFrame, htFrame, `gray)
					this.imageFrame.paste((wdFrame - this.image.width) / 2,
									(htFrame - this.image.height) / 2, this.image)
				} else {
					this.imageFrame = this.image
				}
				this.Refresh()
			}
		}
	}
}

Frame = class(wx.Frame) {
	__init__(parent:wx.Window) = {|parent, wx.ID_ANY,
					'Image Viewer', size => wx.Size(App.width, App.height)|
		wx.Panel(this) {|panel|
			wx.BoxSizer(wx.VERTICAL) {|vbox|
				panel.SetSizer(vbox)
				vbox.Add(Panel(panel), wx.SizerFlags(2).Expand())
			}
		}
	}
}

App = class(wx.App) {
	OnInit() = {
		frame = Frame(nil)
		frame.Show()
		this.SetTopWindow(frame)
		true
	}
}

// expansion to image class
classref(`root.image).show(width => 640, height => 480) = {
	[App.width:public, App.height:public] = [width, height]
	Panel.image = this
	wx.IMPLEMENT_APP(App)
}
