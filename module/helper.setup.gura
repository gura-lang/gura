#!/usr/bin/env gura
import(mswin)
import(wx)

caption = 'Gura Application Setup'

//-----------------------------------------------------------------------------
// execute
//-----------------------------------------------------------------------------
execute(launcherName:string, dirNameDst:string:nil,
		fileNameScript:string, fileNameIcon:string, fileNamesExtra[]:string) = {
	dirNameDst = dirNameDst || path.join(sys.localdir,
								path.basename(path.filename(fileNameScript)))
	Panel.launcherName = launcherName
	Panel.dirNameDst = dirNameDst
	Panel.fileNameScript = fileNameScript
	Panel.fileNameIcon = fileNameIcon
	Panel.fileNamesExtra = fileNamesExtra
	Panel.errorMsg = nil
	wx.IMPLEMENT_APP(App)
}

//-----------------------------------------------------------------------------
// Panel
//-----------------------------------------------------------------------------
Panel = class(wx.Panel) {
	__init__(parent:wx.Window) = {|parent|
		outerBox = wx.BoxSizer(wx.VERTICAL)
		this.SetSizer(outerBox)
		vbox = wx.BoxSizer(wx.VERTICAL)
		outerBox.Add(vbox, wx.SizerFlags(1).Expand().Border(wx.ALL, 4))
		wx.BoxSizer(wx.HORIZONTAL) {|hbox|
			vbox.Add(hbox, wx.SizerFlags().Expand())
			wx.StaticBitmap(this, wx.ID_ANY, wx.NullBitmap) {|ctrl|
				hbox.Add(ctrl, wx.SizerFlags().Expand())
				ctrl.SetIcon(wx.Icon(fileNameIcon, wx.BITMAP_TYPE_ICO))
			}
			wx.StaticText(this, wx.ID_ANY, launcherName) {|ctrl|
				hbox.Add(ctrl, wx.SizerFlags().Centre().Border(wx.LEFT, 8))
				font = ctrl.GetFont()
				font.SetPointSize(12)
				font.SetWeight(wx.FONTWEIGHT_BOLD)
				ctrl.SetFont(font)
			}
		}
		wx.StaticLine(this, wx.ID_ANY) {|ctrl|
			vbox.Add(ctrl, wx.SizerFlags().Expand().Border(wx.TOP, 4))
		}
		wx.BoxSizer(wx.VERTICAL) {|vboxIn|
			vbox.Add(vboxIn, wx.SizerFlags(1).Expand().Border(wx.TOP, 16))
			wx.CheckBox(this, wx.ID_ANY, 'Copy files to the directory:') {|ctrl|
				vboxIn.Add(ctrl, wx.SizerFlags().Expand())
				ctrl.SetValue(true)
				this.chkboxCopyFiles = ctrl
			}
			wx.StaticText(this, wx.ID_ANY, dirNameDst) {|ctrl|
				vboxIn.AddSpacer(8)
				vboxIn.Add(ctrl, wx.SizerFlags().Expand().Border(wx.LEFT, 16))
			}
		}
		wx.CheckBox(this, wx.ID_ANY, 'Create a desktop icon') {|ctrl|
			vbox.Add(ctrl, wx.SizerFlags(1).Expand().Border(wx.TOP, 8))
			ctrl.SetValue(true)
			this.chkboxDesktopIcon = ctrl
		}
		wx.CheckBox(this, wx.ID_ANY,
				'Create a start menu icon (Gura\\Application\\%s)' % launcherName) {|ctrl|
			vbox.Add(ctrl, wx.SizerFlags(1).Expand().Border(wx.TOP, 8))
			ctrl.SetValue(false)
			this.chkboxStartMenuIcon = ctrl
		}
		/*
		wx.TextCtrl(this, wx.ID_ANY, style => wx.TE_READONLY | \
							wx.TE_MULTILINE | wx.BORDER_STATIC) {|ctrl|
			vbox.Add(ctrl, wx.SizerFlags(1).Expand().Border(wx.TOP, 8))
			ctrl.WriteText('[Files]\n')
			ctrl.WriteText(fileNameScript + '\n')
			ctrl.WriteText(fileNameIcon + '\n')
			ctrl.WriteText(fileNamesExtra + '\n')
			ctrl.SetInsertionPoint(0)
		}
		*/
		wx.StaticLine(this, wx.ID_ANY) {|ctrl|
			vbox.Add(ctrl, wx.SizerFlags().Expand().Border(wx.TOP, 16))
		}
		wx.BoxSizer(wx.HORIZONTAL) {|hbox|
			vbox.Add(hbox, wx.SizerFlags().Center().Border(wx.TOP, 8))
			wx.Button(this, wx.ID_OK, 'Setup') {|ctrl|
				hbox.Add(ctrl, wx.SizerFlags())
				ctrl.Bind(wx.EVT_BUTTON) {|event| this.OnButton_Setup(event)}
			}
			wx.Button(this, wx.ID_CANCEL, 'Cancel') {|ctrl|
				hbox.Add(ctrl, wx.SizerFlags().Border(wx.LEFT, 16))
				ctrl.SetDefault()
				ctrl.SetFocus()
				ctrl.Bind(wx.EVT_BUTTON) {|event|
					wx.App.GetInstance().GetTopWindow().Close()
				}
			}
		}
	}
	OnButton_Setup(event:wx.CommandEvent) = {
		frame = wx.App.GetInstance().GetTopWindow()
		dlg = nil
		try {
			wsh = mswin.ole('Wscript.shell')
			fs.mkdir(dirNameDst):tree
			fileNamesToCopy = [fileNameScript, fileNameIcon]
			fileNamesToCopy.append(fileNamesExtra)
			if (this.chkboxCopyFiles.GetValue()) {
				fs.copy(fileNamesToCopy, path.join(dirNameDst, fileNamesToCopy)):overwrite:void
			} else {
				dirNameDst = fs.getcwd()
			}
			dirNames = []
			if (this.chkboxDesktopIcon.GetValue()) {
				dirNames.add(wsh.SpecialFolders('Desktop'))
			}
			if (this.chkboxStartMenuIcon.GetValue()) {
				dirName = path.join(wsh.SpecialFolders('StartMenu'), 'Gura/Application')
				!path.exists(dirName) && fs.mkdir(dirName):tree
				dirNames.add(dirName)
			}
			dirNames.each {|dirName|
				shortCut = wsh.CreateShortcut(path.join(dirName, launcherName + '.lnk'))
				shortCut.WindowStyle = 4 // 3:Maximized, 4:Normal, 7:Minimized
				shortCut.IconLocation = path.join(dirNameDst, fileNameIcon)
				shortCut.TargetPath = path.join(path.dirname(sys.executable),
					cond(fileNameScript.endswith('.gura'):icase, 'gura.exe', 'guraw.exe'))
				shortCut.Arguments = path.join(dirNameDst, fileNameScript)
				shortCut.WorkingDirectory = dirNameDst
				shortCut.Save()
			}
			dlg = wx.MessageDialog(frame, 'Setup has been done successfully.', caption,
							wx.OK | wx.CENTRE | wx.ICON_INFORMATION)
			wsh = nil
		} catch {|e|
			dlg = wx.MessageDialog(frame, e.lineno + ' ' + e.text, caption,
							wx.OK | wx.CENTRE | wx.ICON_ERROR)
		}
		dlg.ShowModal()
		frame.Close()
	}
}

//-----------------------------------------------------------------------------
// Frame
//-----------------------------------------------------------------------------
Frame = class(wx.Frame) {
	__init__(title:string => caption, pos:wx.Point => wx.DefaultPosition,
			size:wx.Size => wx.Size(480, 220)) = {|nil, wx.ID_ANY, title, pos, size|
		Panel(this)
	}
}

//-----------------------------------------------------------------------------
// App
//-----------------------------------------------------------------------------
App = class(wx.App) {
	OnInit() = {
		frame = Frame()
		frame.Show()
		true
	}
}
