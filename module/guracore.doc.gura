#!/usr/bin/env gura
import(markdown)
import(arrayt)

Entry = struct(label:string, symbol:symbol)

entries = @(Entry) {
	{ 'argument',		`argument		}
	{ 'array',			`array			}
	{ 'audio',			`audio			}
	{ 'binary',			`binary			}
	{ 'boolean',		`boolean		}
	{ 'codec',			`codec			}
	{ 'color',			`color			}
	{ 'complex',		`complex		}
	{ 'datetime',		`datetime		}
	{ 'declaration',	`declaration	}
	{ 'dict',			`dict			}
	{ 'directory',		`directory		}
	{ 'environment',	`environment	}
	{ 'error',			`error			}
	{ 'expr',			`expr			}
	{ 'formatter',		`formatter		}
	{ 'function',		`function		}
	{ 'help',			`help			}
	{ 'image',			`image			}
	{ 'iterator/list',	`iterator		}
	{ 'memory',			`memory			}
	{ 'nil',			`nil			}
	{ 'number',			`number			}
	{ 'operator',		`operator		}
	{ 'palette',		`palette		}
	{ 'pointer',		`pointer		}
	{ 'rational',		`rational		}
	{ 'semaphore',		`semaphore		}
	{ 'stream',			`stream			}
	{ 'string',			`string			}
	{ 'suffixmgr',		`suffixmgr		}
	{ 'symbol',			`symbol			}
	{ 'template',		`template		}
	{ 'timedelta',		`timedelta		}
	{ 'uri',			`uri			}
	{ 'vertex',			`vertex			}
}

text@en = '# Built-in Class\n'

entries.each {|entry|
	text@en += e'\n\n## ${entry.label} Class\n\n'
	text@en += markdown.makedoc@class(`en, classref(entry.symbol), 2)
}

markdown.makedoc@module(locals(), %{`en => text@en})
